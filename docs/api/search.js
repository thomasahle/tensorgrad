window.pdocSearch = (function(){
/** elasticlunr - http://weixsong.github.io * Copyright (C) 2017 Oliver Nightingale * Copyright (C) 2017 Wei Song * MIT Licensed */!function(){function e(e){if(null===e||"object"!=typeof e)return e;var t=e.constructor();for(var n in e)e.hasOwnProperty(n)&&(t[n]=e[n]);return t}var t=function(e){var n=new t.Index;return n.pipeline.add(t.trimmer,t.stopWordFilter,t.stemmer),e&&e.call(n,n),n};t.version="0.9.5",lunr=t,t.utils={},t.utils.warn=function(e){return function(t){e.console&&console.warn&&console.warn(t)}}(this),t.utils.toString=function(e){return void 0===e||null===e?"":e.toString()},t.EventEmitter=function(){this.events={}},t.EventEmitter.prototype.addListener=function(){var e=Array.prototype.slice.call(arguments),t=e.pop(),n=e;if("function"!=typeof t)throw new TypeError("last argument must be a function");n.forEach(function(e){this.hasHandler(e)||(this.events[e]=[]),this.events[e].push(t)},this)},t.EventEmitter.prototype.removeListener=function(e,t){if(this.hasHandler(e)){var n=this.events[e].indexOf(t);-1!==n&&(this.events[e].splice(n,1),0==this.events[e].length&&delete this.events[e])}},t.EventEmitter.prototype.emit=function(e){if(this.hasHandler(e)){var t=Array.prototype.slice.call(arguments,1);this.events[e].forEach(function(e){e.apply(void 0,t)},this)}},t.EventEmitter.prototype.hasHandler=function(e){return e in this.events},t.tokenizer=function(e){if(!arguments.length||null===e||void 0===e)return[];if(Array.isArray(e)){var n=e.filter(function(e){return null===e||void 0===e?!1:!0});n=n.map(function(e){return t.utils.toString(e).toLowerCase()});var i=[];return n.forEach(function(e){var n=e.split(t.tokenizer.seperator);i=i.concat(n)},this),i}return e.toString().trim().toLowerCase().split(t.tokenizer.seperator)},t.tokenizer.defaultSeperator=/[\s\-]+/,t.tokenizer.seperator=t.tokenizer.defaultSeperator,t.tokenizer.setSeperator=function(e){null!==e&&void 0!==e&&"object"==typeof e&&(t.tokenizer.seperator=e)},t.tokenizer.resetSeperator=function(){t.tokenizer.seperator=t.tokenizer.defaultSeperator},t.tokenizer.getSeperator=function(){return t.tokenizer.seperator},t.Pipeline=function(){this._queue=[]},t.Pipeline.registeredFunctions={},t.Pipeline.registerFunction=function(e,n){n in t.Pipeline.registeredFunctions&&t.utils.warn("Overwriting existing registered function: "+n),e.label=n,t.Pipeline.registeredFunctions[n]=e},t.Pipeline.getRegisteredFunction=function(e){return e in t.Pipeline.registeredFunctions!=!0?null:t.Pipeline.registeredFunctions[e]},t.Pipeline.warnIfFunctionNotRegistered=function(e){var n=e.label&&e.label in this.registeredFunctions;n||t.utils.warn("Function is not registered with pipeline. This may cause problems when serialising the index.\n",e)},t.Pipeline.load=function(e){var n=new t.Pipeline;return e.forEach(function(e){var i=t.Pipeline.getRegisteredFunction(e);if(!i)throw new Error("Cannot load un-registered function: "+e);n.add(i)}),n},t.Pipeline.prototype.add=function(){var e=Array.prototype.slice.call(arguments);e.forEach(function(e){t.Pipeline.warnIfFunctionNotRegistered(e),this._queue.push(e)},this)},t.Pipeline.prototype.after=function(e,n){t.Pipeline.warnIfFunctionNotRegistered(n);var i=this._queue.indexOf(e);if(-1===i)throw new Error("Cannot find existingFn");this._queue.splice(i+1,0,n)},t.Pipeline.prototype.before=function(e,n){t.Pipeline.warnIfFunctionNotRegistered(n);var i=this._queue.indexOf(e);if(-1===i)throw new Error("Cannot find existingFn");this._queue.splice(i,0,n)},t.Pipeline.prototype.remove=function(e){var t=this._queue.indexOf(e);-1!==t&&this._queue.splice(t,1)},t.Pipeline.prototype.run=function(e){for(var t=[],n=e.length,i=this._queue.length,o=0;n>o;o++){for(var r=e[o],s=0;i>s&&(r=this._queue[s](r,o,e),void 0!==r&&null!==r);s++);void 0!==r&&null!==r&&t.push(r)}return t},t.Pipeline.prototype.reset=function(){this._queue=[]},t.Pipeline.prototype.get=function(){return this._queue},t.Pipeline.prototype.toJSON=function(){return this._queue.map(function(e){return t.Pipeline.warnIfFunctionNotRegistered(e),e.label})},t.Index=function(){this._fields=[],this._ref="id",this.pipeline=new t.Pipeline,this.documentStore=new t.DocumentStore,this.index={},this.eventEmitter=new t.EventEmitter,this._idfCache={},this.on("add","remove","update",function(){this._idfCache={}}.bind(this))},t.Index.prototype.on=function(){var e=Array.prototype.slice.call(arguments);return this.eventEmitter.addListener.apply(this.eventEmitter,e)},t.Index.prototype.off=function(e,t){return this.eventEmitter.removeListener(e,t)},t.Index.load=function(e){e.version!==t.version&&t.utils.warn("version mismatch: current "+t.version+" importing "+e.version);var n=new this;n._fields=e.fields,n._ref=e.ref,n.documentStore=t.DocumentStore.load(e.documentStore),n.pipeline=t.Pipeline.load(e.pipeline),n.index={};for(var i in e.index)n.index[i]=t.InvertedIndex.load(e.index[i]);return n},t.Index.prototype.addField=function(e){return this._fields.push(e),this.index[e]=new t.InvertedIndex,this},t.Index.prototype.setRef=function(e){return this._ref=e,this},t.Index.prototype.saveDocument=function(e){return this.documentStore=new t.DocumentStore(e),this},t.Index.prototype.addDoc=function(e,n){if(e){var n=void 0===n?!0:n,i=e[this._ref];this.documentStore.addDoc(i,e),this._fields.forEach(function(n){var o=this.pipeline.run(t.tokenizer(e[n]));this.documentStore.addFieldLength(i,n,o.length);var r={};o.forEach(function(e){e in r?r[e]+=1:r[e]=1},this);for(var s in r){var u=r[s];u=Math.sqrt(u),this.index[n].addToken(s,{ref:i,tf:u})}},this),n&&this.eventEmitter.emit("add",e,this)}},t.Index.prototype.removeDocByRef=function(e){if(e&&this.documentStore.isDocStored()!==!1&&this.documentStore.hasDoc(e)){var t=this.documentStore.getDoc(e);this.removeDoc(t,!1)}},t.Index.prototype.removeDoc=function(e,n){if(e){var n=void 0===n?!0:n,i=e[this._ref];this.documentStore.hasDoc(i)&&(this.documentStore.removeDoc(i),this._fields.forEach(function(n){var o=this.pipeline.run(t.tokenizer(e[n]));o.forEach(function(e){this.index[n].removeToken(e,i)},this)},this),n&&this.eventEmitter.emit("remove",e,this))}},t.Index.prototype.updateDoc=function(e,t){var t=void 0===t?!0:t;this.removeDocByRef(e[this._ref],!1),this.addDoc(e,!1),t&&this.eventEmitter.emit("update",e,this)},t.Index.prototype.idf=function(e,t){var n="@"+t+"/"+e;if(Object.prototype.hasOwnProperty.call(this._idfCache,n))return this._idfCache[n];var i=this.index[t].getDocFreq(e),o=1+Math.log(this.documentStore.length/(i+1));return this._idfCache[n]=o,o},t.Index.prototype.getFields=function(){return this._fields.slice()},t.Index.prototype.search=function(e,n){if(!e)return[];e="string"==typeof e?{any:e}:JSON.parse(JSON.stringify(e));var i=null;null!=n&&(i=JSON.stringify(n));for(var o=new t.Configuration(i,this.getFields()).get(),r={},s=Object.keys(e),u=0;u<s.length;u++){var a=s[u];r[a]=this.pipeline.run(t.tokenizer(e[a]))}var l={};for(var c in o){var d=r[c]||r.any;if(d){var f=this.fieldSearch(d,c,o),h=o[c].boost;for(var p in f)f[p]=f[p]*h;for(var p in f)p in l?l[p]+=f[p]:l[p]=f[p]}}var v,g=[];for(var p in l)v={ref:p,score:l[p]},this.documentStore.hasDoc(p)&&(v.doc=this.documentStore.getDoc(p)),g.push(v);return g.sort(function(e,t){return t.score-e.score}),g},t.Index.prototype.fieldSearch=function(e,t,n){var i=n[t].bool,o=n[t].expand,r=n[t].boost,s=null,u={};return 0!==r?(e.forEach(function(e){var n=[e];1==o&&(n=this.index[t].expandToken(e));var r={};n.forEach(function(n){var o=this.index[t].getDocs(n),a=this.idf(n,t);if(s&&"AND"==i){var l={};for(var c in s)c in o&&(l[c]=o[c]);o=l}n==e&&this.fieldSearchStats(u,n,o);for(var c in o){var d=this.index[t].getTermFrequency(n,c),f=this.documentStore.getFieldLength(c,t),h=1;0!=f&&(h=1/Math.sqrt(f));var p=1;n!=e&&(p=.15*(1-(n.length-e.length)/n.length));var v=d*a*h*p;c in r?r[c]+=v:r[c]=v}},this),s=this.mergeScores(s,r,i)},this),s=this.coordNorm(s,u,e.length)):void 0},t.Index.prototype.mergeScores=function(e,t,n){if(!e)return t;if("AND"==n){var i={};for(var o in t)o in e&&(i[o]=e[o]+t[o]);return i}for(var o in t)o in e?e[o]+=t[o]:e[o]=t[o];return e},t.Index.prototype.fieldSearchStats=function(e,t,n){for(var i in n)i in e?e[i].push(t):e[i]=[t]},t.Index.prototype.coordNorm=function(e,t,n){for(var i in e)if(i in t){var o=t[i].length;e[i]=e[i]*o/n}return e},t.Index.prototype.toJSON=function(){var e={};return this._fields.forEach(function(t){e[t]=this.index[t].toJSON()},this),{version:t.version,fields:this._fields,ref:this._ref,documentStore:this.documentStore.toJSON(),index:e,pipeline:this.pipeline.toJSON()}},t.Index.prototype.use=function(e){var t=Array.prototype.slice.call(arguments,1);t.unshift(this),e.apply(this,t)},t.DocumentStore=function(e){this._save=null===e||void 0===e?!0:e,this.docs={},this.docInfo={},this.length=0},t.DocumentStore.load=function(e){var t=new this;return t.length=e.length,t.docs=e.docs,t.docInfo=e.docInfo,t._save=e.save,t},t.DocumentStore.prototype.isDocStored=function(){return this._save},t.DocumentStore.prototype.addDoc=function(t,n){this.hasDoc(t)||this.length++,this.docs[t]=this._save===!0?e(n):null},t.DocumentStore.prototype.getDoc=function(e){return this.hasDoc(e)===!1?null:this.docs[e]},t.DocumentStore.prototype.hasDoc=function(e){return e in this.docs},t.DocumentStore.prototype.removeDoc=function(e){this.hasDoc(e)&&(delete this.docs[e],delete this.docInfo[e],this.length--)},t.DocumentStore.prototype.addFieldLength=function(e,t,n){null!==e&&void 0!==e&&0!=this.hasDoc(e)&&(this.docInfo[e]||(this.docInfo[e]={}),this.docInfo[e][t]=n)},t.DocumentStore.prototype.updateFieldLength=function(e,t,n){null!==e&&void 0!==e&&0!=this.hasDoc(e)&&this.addFieldLength(e,t,n)},t.DocumentStore.prototype.getFieldLength=function(e,t){return null===e||void 0===e?0:e in this.docs&&t in this.docInfo[e]?this.docInfo[e][t]:0},t.DocumentStore.prototype.toJSON=function(){return{docs:this.docs,docInfo:this.docInfo,length:this.length,save:this._save}},t.stemmer=function(){var e={ational:"ate",tional:"tion",enci:"ence",anci:"ance",izer:"ize",bli:"ble",alli:"al",entli:"ent",eli:"e",ousli:"ous",ization:"ize",ation:"ate",ator:"ate",alism:"al",iveness:"ive",fulness:"ful",ousness:"ous",aliti:"al",iviti:"ive",biliti:"ble",logi:"log"},t={icate:"ic",ative:"",alize:"al",iciti:"ic",ical:"ic",ful:"",ness:""},n="[^aeiou]",i="[aeiouy]",o=n+"[^aeiouy]*",r=i+"[aeiou]*",s="^("+o+")?"+r+o,u="^("+o+")?"+r+o+"("+r+")?$",a="^("+o+")?"+r+o+r+o,l="^("+o+")?"+i,c=new RegExp(s),d=new RegExp(a),f=new RegExp(u),h=new RegExp(l),p=/^(.+?)(ss|i)es$/,v=/^(.+?)([^s])s$/,g=/^(.+?)eed$/,m=/^(.+?)(ed|ing)$/,y=/.$/,S=/(at|bl|iz)$/,x=new RegExp("([^aeiouylsz])\\1$"),w=new RegExp("^"+o+i+"[^aeiouwxy]$"),I=/^(.+?[^aeiou])y$/,b=/^(.+?)(ational|tional|enci|anci|izer|bli|alli|entli|eli|ousli|ization|ation|ator|alism|iveness|fulness|ousness|aliti|iviti|biliti|logi)$/,E=/^(.+?)(icate|ative|alize|iciti|ical|ful|ness)$/,D=/^(.+?)(al|ance|ence|er|ic|able|ible|ant|ement|ment|ent|ou|ism|ate|iti|ous|ive|ize)$/,F=/^(.+?)(s|t)(ion)$/,_=/^(.+?)e$/,P=/ll$/,k=new RegExp("^"+o+i+"[^aeiouwxy]$"),z=function(n){var i,o,r,s,u,a,l;if(n.length<3)return n;if(r=n.substr(0,1),"y"==r&&(n=r.toUpperCase()+n.substr(1)),s=p,u=v,s.test(n)?n=n.replace(s,"$1$2"):u.test(n)&&(n=n.replace(u,"$1$2")),s=g,u=m,s.test(n)){var z=s.exec(n);s=c,s.test(z[1])&&(s=y,n=n.replace(s,""))}else if(u.test(n)){var z=u.exec(n);i=z[1],u=h,u.test(i)&&(n=i,u=S,a=x,l=w,u.test(n)?n+="e":a.test(n)?(s=y,n=n.replace(s,"")):l.test(n)&&(n+="e"))}if(s=I,s.test(n)){var z=s.exec(n);i=z[1],n=i+"i"}if(s=b,s.test(n)){var z=s.exec(n);i=z[1],o=z[2],s=c,s.test(i)&&(n=i+e[o])}if(s=E,s.test(n)){var z=s.exec(n);i=z[1],o=z[2],s=c,s.test(i)&&(n=i+t[o])}if(s=D,u=F,s.test(n)){var z=s.exec(n);i=z[1],s=d,s.test(i)&&(n=i)}else if(u.test(n)){var z=u.exec(n);i=z[1]+z[2],u=d,u.test(i)&&(n=i)}if(s=_,s.test(n)){var z=s.exec(n);i=z[1],s=d,u=f,a=k,(s.test(i)||u.test(i)&&!a.test(i))&&(n=i)}return s=P,u=d,s.test(n)&&u.test(n)&&(s=y,n=n.replace(s,"")),"y"==r&&(n=r.toLowerCase()+n.substr(1)),n};return z}(),t.Pipeline.registerFunction(t.stemmer,"stemmer"),t.stopWordFilter=function(e){return e&&t.stopWordFilter.stopWords[e]!==!0?e:void 0},t.clearStopWords=function(){t.stopWordFilter.stopWords={}},t.addStopWords=function(e){null!=e&&Array.isArray(e)!==!1&&e.forEach(function(e){t.stopWordFilter.stopWords[e]=!0},this)},t.resetStopWords=function(){t.stopWordFilter.stopWords=t.defaultStopWords},t.defaultStopWords={"":!0,a:!0,able:!0,about:!0,across:!0,after:!0,all:!0,almost:!0,also:!0,am:!0,among:!0,an:!0,and:!0,any:!0,are:!0,as:!0,at:!0,be:!0,because:!0,been:!0,but:!0,by:!0,can:!0,cannot:!0,could:!0,dear:!0,did:!0,"do":!0,does:!0,either:!0,"else":!0,ever:!0,every:!0,"for":!0,from:!0,get:!0,got:!0,had:!0,has:!0,have:!0,he:!0,her:!0,hers:!0,him:!0,his:!0,how:!0,however:!0,i:!0,"if":!0,"in":!0,into:!0,is:!0,it:!0,its:!0,just:!0,least:!0,let:!0,like:!0,likely:!0,may:!0,me:!0,might:!0,most:!0,must:!0,my:!0,neither:!0,no:!0,nor:!0,not:!0,of:!0,off:!0,often:!0,on:!0,only:!0,or:!0,other:!0,our:!0,own:!0,rather:!0,said:!0,say:!0,says:!0,she:!0,should:!0,since:!0,so:!0,some:!0,than:!0,that:!0,the:!0,their:!0,them:!0,then:!0,there:!0,these:!0,they:!0,"this":!0,tis:!0,to:!0,too:!0,twas:!0,us:!0,wants:!0,was:!0,we:!0,were:!0,what:!0,when:!0,where:!0,which:!0,"while":!0,who:!0,whom:!0,why:!0,will:!0,"with":!0,would:!0,yet:!0,you:!0,your:!0},t.stopWordFilter.stopWords=t.defaultStopWords,t.Pipeline.registerFunction(t.stopWordFilter,"stopWordFilter"),t.trimmer=function(e){if(null===e||void 0===e)throw new Error("token should not be undefined");return e.replace(/^\W+/,"").replace(/\W+$/,"")},t.Pipeline.registerFunction(t.trimmer,"trimmer"),t.InvertedIndex=function(){this.root={docs:{},df:0}},t.InvertedIndex.load=function(e){var t=new this;return t.root=e.root,t},t.InvertedIndex.prototype.addToken=function(e,t,n){for(var n=n||this.root,i=0;i<=e.length-1;){var o=e[i];o in n||(n[o]={docs:{},df:0}),i+=1,n=n[o]}var r=t.ref;n.docs[r]?n.docs[r]={tf:t.tf}:(n.docs[r]={tf:t.tf},n.df+=1)},t.InvertedIndex.prototype.hasToken=function(e){if(!e)return!1;for(var t=this.root,n=0;n<e.length;n++){if(!t[e[n]])return!1;t=t[e[n]]}return!0},t.InvertedIndex.prototype.getNode=function(e){if(!e)return null;for(var t=this.root,n=0;n<e.length;n++){if(!t[e[n]])return null;t=t[e[n]]}return t},t.InvertedIndex.prototype.getDocs=function(e){var t=this.getNode(e);return null==t?{}:t.docs},t.InvertedIndex.prototype.getTermFrequency=function(e,t){var n=this.getNode(e);return null==n?0:t in n.docs?n.docs[t].tf:0},t.InvertedIndex.prototype.getDocFreq=function(e){var t=this.getNode(e);return null==t?0:t.df},t.InvertedIndex.prototype.removeToken=function(e,t){if(e){var n=this.getNode(e);null!=n&&t in n.docs&&(delete n.docs[t],n.df-=1)}},t.InvertedIndex.prototype.expandToken=function(e,t,n){if(null==e||""==e)return[];var t=t||[];if(void 0==n&&(n=this.getNode(e),null==n))return t;n.df>0&&t.push(e);for(var i in n)"docs"!==i&&"df"!==i&&this.expandToken(e+i,t,n[i]);return t},t.InvertedIndex.prototype.toJSON=function(){return{root:this.root}},t.Configuration=function(e,n){var e=e||"";if(void 0==n||null==n)throw new Error("fields should not be null");this.config={};var i;try{i=JSON.parse(e),this.buildUserConfig(i,n)}catch(o){t.utils.warn("user configuration parse failed, will use default configuration"),this.buildDefaultConfig(n)}},t.Configuration.prototype.buildDefaultConfig=function(e){this.reset(),e.forEach(function(e){this.config[e]={boost:1,bool:"OR",expand:!1}},this)},t.Configuration.prototype.buildUserConfig=function(e,n){var i="OR",o=!1;if(this.reset(),"bool"in e&&(i=e.bool||i),"expand"in e&&(o=e.expand||o),"fields"in e)for(var r in e.fields)if(n.indexOf(r)>-1){var s=e.fields[r],u=o;void 0!=s.expand&&(u=s.expand),this.config[r]={boost:s.boost||0===s.boost?s.boost:1,bool:s.bool||i,expand:u}}else t.utils.warn("field name in user configuration not found in index instance fields");else this.addAllFields2UserConfig(i,o,n)},t.Configuration.prototype.addAllFields2UserConfig=function(e,t,n){n.forEach(function(n){this.config[n]={boost:1,bool:e,expand:t}},this)},t.Configuration.prototype.get=function(){return this.config},t.Configuration.prototype.reset=function(){this.config={}},lunr.SortedSet=function(){this.length=0,this.elements=[]},lunr.SortedSet.load=function(e){var t=new this;return t.elements=e,t.length=e.length,t},lunr.SortedSet.prototype.add=function(){var e,t;for(e=0;e<arguments.length;e++)t=arguments[e],~this.indexOf(t)||this.elements.splice(this.locationFor(t),0,t);this.length=this.elements.length},lunr.SortedSet.prototype.toArray=function(){return this.elements.slice()},lunr.SortedSet.prototype.map=function(e,t){return this.elements.map(e,t)},lunr.SortedSet.prototype.forEach=function(e,t){return this.elements.forEach(e,t)},lunr.SortedSet.prototype.indexOf=function(e){for(var t=0,n=this.elements.length,i=n-t,o=t+Math.floor(i/2),r=this.elements[o];i>1;){if(r===e)return o;e>r&&(t=o),r>e&&(n=o),i=n-t,o=t+Math.floor(i/2),r=this.elements[o]}return r===e?o:-1},lunr.SortedSet.prototype.locationFor=function(e){for(var t=0,n=this.elements.length,i=n-t,o=t+Math.floor(i/2),r=this.elements[o];i>1;)e>r&&(t=o),r>e&&(n=o),i=n-t,o=t+Math.floor(i/2),r=this.elements[o];return r>e?o:e>r?o+1:void 0},lunr.SortedSet.prototype.intersect=function(e){for(var t=new lunr.SortedSet,n=0,i=0,o=this.length,r=e.length,s=this.elements,u=e.elements;;){if(n>o-1||i>r-1)break;s[n]!==u[i]?s[n]<u[i]?n++:s[n]>u[i]&&i++:(t.add(s[n]),n++,i++)}return t},lunr.SortedSet.prototype.clone=function(){var e=new lunr.SortedSet;return e.elements=this.toArray(),e.length=e.elements.length,e},lunr.SortedSet.prototype.union=function(e){var t,n,i;this.length>=e.length?(t=this,n=e):(t=e,n=this),i=t.clone();for(var o=0,r=n.toArray();o<r.length;o++)i.add(r[o]);return i},lunr.SortedSet.prototype.toJSON=function(){return this.toArray()},function(e,t){"function"==typeof define&&define.amd?define(t):"object"==typeof exports?module.exports=t():e.elasticlunr=t()}(this,function(){return t})}();
    /** pdoc search index */const docs = {"version": "0.9.5", "fields": ["qualname", "fullname", "annotation", "default_value", "signature", "bases", "doc"], "ref": "fullname", "documentStore": {"docs": {"tensorgrad": {"fullname": "tensorgrad", "modulename": "tensorgrad", "kind": "module", "doc": "<p></p>\n"}, "tensorgrad.extras": {"fullname": "tensorgrad.extras", "modulename": "tensorgrad.extras", "kind": "module", "doc": "<p></p>\n"}, "tensorgrad.extras.evaluate": {"fullname": "tensorgrad.extras.evaluate", "modulename": "tensorgrad.extras.evaluate", "kind": "module", "doc": "<p></p>\n"}, "tensorgrad.extras.evaluate.evaluate": {"fullname": "tensorgrad.extras.evaluate.evaluate", "modulename": "tensorgrad.extras.evaluate", "qualname": "evaluate", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"n\">tensor</span><span class=\"p\">:</span> <span class=\"n\">tensorgrad</span><span class=\"o\">.</span><span class=\"n\">tensor</span><span class=\"o\">.</span><span class=\"n\">Tensor</span>,</span><span class=\"param\">\t<span class=\"n\">values</span><span class=\"p\">:</span> <span class=\"nb\">dict</span><span class=\"p\">[</span><span class=\"n\">tensorgrad</span><span class=\"o\">.</span><span class=\"n\">tensor</span><span class=\"o\">.</span><span class=\"n\">Variable</span><span class=\"p\">,</span> <span class=\"n\">torch</span><span class=\"o\">.</span><span class=\"n\">Tensor</span><span class=\"p\">]</span>,</span><span class=\"param\">\t<span class=\"n\">dims</span><span class=\"p\">:</span> <span class=\"nb\">dict</span><span class=\"p\">[</span><span class=\"n\">sympy</span><span class=\"o\">.</span><span class=\"n\">core</span><span class=\"o\">.</span><span class=\"n\">symbol</span><span class=\"o\">.</span><span class=\"n\">Symbol</span><span class=\"p\">,</span> <span class=\"nb\">int</span><span class=\"p\">]</span> <span class=\"o\">|</span> <span class=\"kc\">None</span> <span class=\"o\">=</span> <span class=\"kc\">None</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, "tensorgrad.extras.evaluate.Context": {"fullname": "tensorgrad.extras.evaluate.Context", "modulename": "tensorgrad.extras.evaluate", "qualname": "Context", "kind": "class", "doc": "<p></p>\n"}, "tensorgrad.extras.evaluate.Context.__init__": {"fullname": "tensorgrad.extras.evaluate.Context.__init__", "modulename": "tensorgrad.extras.evaluate", "qualname": "Context.__init__", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"n\">values</span><span class=\"p\">:</span> <span class=\"nb\">dict</span><span class=\"p\">[</span><span class=\"n\">tensorgrad</span><span class=\"o\">.</span><span class=\"n\">tensor</span><span class=\"o\">.</span><span class=\"n\">Variable</span><span class=\"p\">,</span> <span class=\"n\">torch</span><span class=\"o\">.</span><span class=\"n\">Tensor</span><span class=\"p\">]</span>,</span><span class=\"param\">\t<span class=\"n\">dims</span><span class=\"p\">:</span> <span class=\"nb\">dict</span><span class=\"p\">[</span><span class=\"n\">sympy</span><span class=\"o\">.</span><span class=\"n\">core</span><span class=\"o\">.</span><span class=\"n\">symbol</span><span class=\"o\">.</span><span class=\"n\">Symbol</span><span class=\"p\">,</span> <span class=\"nb\">int</span><span class=\"p\">]</span> <span class=\"o\">|</span> <span class=\"kc\">None</span> <span class=\"o\">=</span> <span class=\"kc\">None</span></span>)</span>"}, "tensorgrad.extras.evaluate.Context.values": {"fullname": "tensorgrad.extras.evaluate.Context.values", "modulename": "tensorgrad.extras.evaluate", "qualname": "Context.values", "kind": "variable", "doc": "<p></p>\n"}, "tensorgrad.extras.evaluate.Context.dims": {"fullname": "tensorgrad.extras.evaluate.Context.dims", "modulename": "tensorgrad.extras.evaluate", "qualname": "Context.dims", "kind": "variable", "doc": "<p></p>\n"}, "tensorgrad.extras.evaluate.Context.evaluate": {"fullname": "tensorgrad.extras.evaluate.Context.evaluate", "modulename": "tensorgrad.extras.evaluate", "qualname": "Context.evaluate", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">tensor</span><span class=\"p\">:</span> <span class=\"n\">tensorgrad</span><span class=\"o\">.</span><span class=\"n\">tensor</span><span class=\"o\">.</span><span class=\"n\">Tensor</span></span><span class=\"return-annotation\">) -> <span class=\"n\">torch</span><span class=\"o\">.</span><span class=\"n\">Tensor</span>:</span></span>", "funcdef": "def"}, "tensorgrad.extras.evaluate.evaluate_function": {"fullname": "tensorgrad.extras.evaluate.evaluate_function", "modulename": "tensorgrad.extras.evaluate", "qualname": "evaluate_function", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"n\">func</span><span class=\"p\">:</span> <span class=\"n\">tensorgrad</span><span class=\"o\">.</span><span class=\"n\">tensor</span><span class=\"o\">.</span><span class=\"n\">FunctionSignature</span>,</span><span class=\"param\">\t<span class=\"o\">*</span><span class=\"n\">xs</span><span class=\"p\">:</span> <span class=\"n\">torch</span><span class=\"o\">.</span><span class=\"n\">Tensor</span></span><span class=\"return-annotation\">) -> <span class=\"n\">torch</span><span class=\"o\">.</span><span class=\"n\">Tensor</span>:</span></span>", "funcdef": "def"}, "tensorgrad.extras.expectation": {"fullname": "tensorgrad.extras.expectation", "modulename": "tensorgrad.extras.expectation", "kind": "module", "doc": "<p></p>\n"}, "tensorgrad.extras.expectation.Expectation": {"fullname": "tensorgrad.extras.expectation.Expectation", "modulename": "tensorgrad.extras.expectation", "qualname": "Expectation", "kind": "class", "doc": "<p></p>\n", "bases": "tensorgrad.tensor.Tensor"}, "tensorgrad.extras.expectation.Expectation.__init__": {"fullname": "tensorgrad.extras.expectation.Expectation.__init__", "modulename": "tensorgrad.extras.expectation", "qualname": "Expectation.__init__", "kind": "function", "doc": "<p>Take the Expectation of a tensor with respect to a variable, assumed to have a multi-normal\ndistribution with the given expectation and covariance.</p>\n\n<p>Note:\n    The covariance tensor should be the expectation, covar = E[x x^T - mu mu^T].\n    The edges of covar should include the edges of x, as well as a disjoint copy\n    of the same edges. The mapping from the original edges to the new edges should be\n    given in covar_names.</p>\n\n<p>Args:\n    tensor (Tensor): The input tensor.\n    wrt (Variable): The variable with respect to which the expectation is computed.\n    mu (Tensor): The mean tensor. Defaults to the zero tensor.\n    covar (Tensor): The covariance tensor. Defaults to the identity tensor.\n    covar_names (dict[str, str]): Map from original (wrt) name to covar name.\n    Note: It is not a map from wrt.original name, like in the Derivative class.</p>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"n\">tensor</span><span class=\"p\">:</span> <span class=\"n\">tensorgrad</span><span class=\"o\">.</span><span class=\"n\">tensor</span><span class=\"o\">.</span><span class=\"n\">Tensor</span>,</span><span class=\"param\">\t<span class=\"n\">wrt</span><span class=\"p\">:</span> <span class=\"n\">tensorgrad</span><span class=\"o\">.</span><span class=\"n\">tensor</span><span class=\"o\">.</span><span class=\"n\">Variable</span>,</span><span class=\"param\">\t<span class=\"n\">mu</span><span class=\"p\">:</span> <span class=\"kc\">None</span> <span class=\"o\">|</span> <span class=\"n\">tensorgrad</span><span class=\"o\">.</span><span class=\"n\">tensor</span><span class=\"o\">.</span><span class=\"n\">Tensor</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">covar</span><span class=\"p\">:</span> <span class=\"kc\">None</span> <span class=\"o\">|</span> <span class=\"n\">tensorgrad</span><span class=\"o\">.</span><span class=\"n\">tensor</span><span class=\"o\">.</span><span class=\"n\">Tensor</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">covar_names</span><span class=\"p\">:</span> <span class=\"kc\">None</span> <span class=\"o\">|</span> <span class=\"nb\">dict</span><span class=\"p\">[</span><span class=\"nb\">str</span><span class=\"p\">,</span> <span class=\"nb\">str</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"kc\">None</span></span>)</span>"}, "tensorgrad.extras.expectation.Expectation.tensor": {"fullname": "tensorgrad.extras.expectation.Expectation.tensor", "modulename": "tensorgrad.extras.expectation", "qualname": "Expectation.tensor", "kind": "variable", "doc": "<p></p>\n"}, "tensorgrad.extras.expectation.Expectation.wrt": {"fullname": "tensorgrad.extras.expectation.Expectation.wrt", "modulename": "tensorgrad.extras.expectation", "qualname": "Expectation.wrt", "kind": "variable", "doc": "<p></p>\n"}, "tensorgrad.extras.expectation.Expectation.mu": {"fullname": "tensorgrad.extras.expectation.Expectation.mu", "modulename": "tensorgrad.extras.expectation", "qualname": "Expectation.mu", "kind": "variable", "doc": "<p></p>\n"}, "tensorgrad.extras.expectation.Expectation.covar_names": {"fullname": "tensorgrad.extras.expectation.Expectation.covar_names", "modulename": "tensorgrad.extras.expectation", "qualname": "Expectation.covar_names", "kind": "variable", "doc": "<p></p>\n"}, "tensorgrad.extras.expectation.Expectation.covar": {"fullname": "tensorgrad.extras.expectation.Expectation.covar", "modulename": "tensorgrad.extras.expectation", "qualname": "Expectation.covar", "kind": "variable", "doc": "<p></p>\n"}, "tensorgrad.extras.expectation.Expectation.structural_graph": {"fullname": "tensorgrad.extras.expectation.Expectation.structural_graph", "modulename": "tensorgrad.extras.expectation", "qualname": "Expectation.structural_graph", "kind": "function", "doc": "<p>Create a graph representation of the tensor, which can be used for isomorphism testing.</p>\n\n<p>Returns:\n    A tuple with the following values:\n    - A NetworkX directed graph.\n        - Each node in the top tree is labeled with the producing tensor.\n        - Use name=hashable to label vertices\n    - \"edges\", a dict of edge_name -> node id\n    - Node 0 should be the root</p>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"bp\">self</span></span><span class=\"return-annotation\">) -> <span class=\"nb\">tuple</span><span class=\"p\">[</span><span class=\"n\">networkx</span><span class=\"o\">.</span><span class=\"n\">classes</span><span class=\"o\">.</span><span class=\"n\">multidigraph</span><span class=\"o\">.</span><span class=\"n\">MultiDiGraph</span><span class=\"p\">,</span> <span class=\"nb\">dict</span><span class=\"p\">[</span><span class=\"nb\">str</span><span class=\"p\">,</span> <span class=\"nb\">int</span><span class=\"p\">]]</span>:</span></span>", "funcdef": "def"}, "tensorgrad.extras.expectation.Expectation.depends_on": {"fullname": "tensorgrad.extras.expectation.Expectation.depends_on", "modulename": "tensorgrad.extras.expectation", "qualname": "Expectation.depends_on", "kind": "function", "doc": "<p>Check if this tensor depends on the variable x.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">x</span><span class=\"p\">:</span> <span class=\"n\">tensorgrad</span><span class=\"o\">.</span><span class=\"n\">tensor</span><span class=\"o\">.</span><span class=\"n\">Variable</span></span><span class=\"return-annotation\">) -> <span class=\"nb\">bool</span>:</span></span>", "funcdef": "def"}, "tensorgrad.extras.to_formula_old": {"fullname": "tensorgrad.extras.to_formula_old", "modulename": "tensorgrad.extras.to_formula_old", "kind": "module", "doc": "<p></p>\n"}, "tensorgrad.extras.to_formula_old.to_simple_matrix_formula": {"fullname": "tensorgrad.extras.to_formula_old.to_simple_matrix_formula", "modulename": "tensorgrad.extras.to_formula_old", "qualname": "to_simple_matrix_formula", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">expr</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, "tensorgrad.extras.to_formula_old.component_to_matrix": {"fullname": "tensorgrad.extras.to_formula_old.component_to_matrix", "modulename": "tensorgrad.extras.to_formula_old", "qualname": "component_to_matrix", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">comp</span>, </span><span class=\"param\"><span class=\"n\">left_edge</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, "tensorgrad.extras.to_formula_old.dfs": {"fullname": "tensorgrad.extras.to_formula_old.dfs", "modulename": "tensorgrad.extras.to_formula_old", "qualname": "dfs", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">t</span>, </span><span class=\"param\"><span class=\"n\">adj</span>, </span><span class=\"param\"><span class=\"n\">visited</span>, </span><span class=\"param\"><span class=\"n\">in_edge</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, "tensorgrad.extras.to_latex": {"fullname": "tensorgrad.extras.to_latex", "modulename": "tensorgrad.extras.to_latex", "kind": "module", "doc": "<p></p>\n"}, "tensorgrad.extras.to_latex.to_latex_indexed": {"fullname": "tensorgrad.extras.to_latex.to_latex_indexed", "modulename": "tensorgrad.extras.to_latex", "qualname": "to_latex_indexed", "kind": "function", "doc": "<p>Convert Tensor to LaTeX in Einstein-style index notation.\nBy default, raise if unhandled.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">expr</span><span class=\"p\">:</span> <span class=\"n\">tensorgrad</span><span class=\"o\">.</span><span class=\"n\">tensor</span><span class=\"o\">.</span><span class=\"n\">Tensor</span></span><span class=\"return-annotation\">) -> <span class=\"nb\">str</span>:</span></span>", "funcdef": "def"}, "tensorgrad.extras.to_latex.to_latex_index_free": {"fullname": "tensorgrad.extras.to_latex.to_latex_index_free", "modulename": "tensorgrad.extras.to_latex", "qualname": "to_latex_index_free", "kind": "function", "doc": "<p>Convert to classical notation (e.g. 'X', 'X^T', 'AB', 'tr(X)')</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">expr</span><span class=\"p\">:</span> <span class=\"n\">tensorgrad</span><span class=\"o\">.</span><span class=\"n\">tensor</span><span class=\"o\">.</span><span class=\"n\">Tensor</span></span><span class=\"return-annotation\">) -> <span class=\"nb\">str</span>:</span></span>", "funcdef": "def"}, "tensorgrad.extras.to_latex.to_latex": {"fullname": "tensorgrad.extras.to_latex.to_latex", "modulename": "tensorgrad.extras.to_latex", "qualname": "to_latex", "kind": "function", "doc": "<p>If index_free=False =&gt; index-based notation.\nIf index_free=True =&gt; matrix-style notation.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">expr</span><span class=\"p\">:</span> <span class=\"n\">tensorgrad</span><span class=\"o\">.</span><span class=\"n\">tensor</span><span class=\"o\">.</span><span class=\"n\">Tensor</span>, </span><span class=\"param\"><span class=\"n\">index_free</span><span class=\"p\">:</span> <span class=\"nb\">bool</span> <span class=\"o\">=</span> <span class=\"kc\">False</span></span><span class=\"return-annotation\">) -> <span class=\"nb\">str</span>:</span></span>", "funcdef": "def"}, "tensorgrad.extras.to_numpy": {"fullname": "tensorgrad.extras.to_numpy", "modulename": "tensorgrad.extras.to_numpy", "kind": "module", "doc": "<p></p>\n"}, "tensorgrad.extras.to_numpy.compile_to_callable": {"fullname": "tensorgrad.extras.to_numpy.compile_to_callable", "modulename": "tensorgrad.extras.to_numpy", "qualname": "compile_to_callable", "kind": "function", "doc": "<p>Build a Python callable returning NumPy arrays:\n    f(values, shapes=None) -> np.ndarray or tuple[np.ndarray, ...]</p>\n\n<p>where:</p>\n\n<ul>\n<li><code>values</code> is a dict {Variable: np.ndarray}.</li>\n<li><code>shapes</code> is an optional dict {sympy.Symbol: int} with dimension sizes.</li>\n<li>The code generator inspects all Symbols in the given Tensors, sorts them by\nsymbol name, and uses them in the generated function signature.</li>\n</ul>\n\n<p>The generated function <code>_generated_forward(...)</code> will be something like:</p>\n\n<pre><code>def _generated_forward(batch, c0, w0, h0, _var_1234, _var_5678, ...):\n    ...\n    return result\n</code></pre>\n\n<p>This function is then executed via <code>eval(...)</code>.</p>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"o\">*</span><span class=\"n\">tensors</span><span class=\"p\">:</span> <span class=\"n\">tensorgrad</span><span class=\"o\">.</span><span class=\"n\">tensor</span><span class=\"o\">.</span><span class=\"n\">Tensor</span>,</span><span class=\"param\">\t<span class=\"n\">verbose</span><span class=\"o\">=</span><span class=\"kc\">False</span>,</span><span class=\"param\">\t<span class=\"n\">torch_compile</span><span class=\"o\">=</span><span class=\"kc\">False</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, "tensorgrad.extras.to_numpy.CodegenContext": {"fullname": "tensorgrad.extras.to_numpy.CodegenContext", "modulename": "tensorgrad.extras.to_numpy", "qualname": "CodegenContext", "kind": "class", "doc": "<p>Maintains the lines of generated Python code and caches expressions.</p>\n"}, "tensorgrad.extras.to_numpy.CodegenContext.lines": {"fullname": "tensorgrad.extras.to_numpy.CodegenContext.lines", "modulename": "tensorgrad.extras.to_numpy", "qualname": "CodegenContext.lines", "kind": "variable", "doc": "<p></p>\n"}, "tensorgrad.extras.to_numpy.CodegenContext.cache": {"fullname": "tensorgrad.extras.to_numpy.CodegenContext.cache", "modulename": "tensorgrad.extras.to_numpy", "qualname": "CodegenContext.cache", "kind": "variable", "doc": "<p></p>\n"}, "tensorgrad.extras.to_numpy.CodegenContext.seen_variables": {"fullname": "tensorgrad.extras.to_numpy.CodegenContext.seen_variables", "modulename": "tensorgrad.extras.to_numpy", "qualname": "CodegenContext.seen_variables", "kind": "variable", "doc": "<p></p>\n"}, "tensorgrad.extras.to_numpy.CodegenContext.seen_symbols": {"fullname": "tensorgrad.extras.to_numpy.CodegenContext.seen_symbols", "modulename": "tensorgrad.extras.to_numpy", "qualname": "CodegenContext.seen_symbols", "kind": "variable", "doc": "<p></p>\n"}, "tensorgrad.extras.to_numpy.CodegenContext.seen_names": {"fullname": "tensorgrad.extras.to_numpy.CodegenContext.seen_names", "modulename": "tensorgrad.extras.to_numpy", "qualname": "CodegenContext.seen_names", "kind": "variable", "doc": "<p></p>\n"}, "tensorgrad.extras.to_numpy.CodegenContext.var_types": {"fullname": "tensorgrad.extras.to_numpy.CodegenContext.var_types", "modulename": "tensorgrad.extras.to_numpy", "qualname": "CodegenContext.var_types", "kind": "variable", "doc": "<p></p>\n"}, "tensorgrad.extras.to_numpy.CodegenContext.emit": {"fullname": "tensorgrad.extras.to_numpy.CodegenContext.emit", "modulename": "tensorgrad.extras.to_numpy", "qualname": "CodegenContext.emit", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">line</span><span class=\"p\">:</span> <span class=\"nb\">str</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, "tensorgrad.extras.to_numpy.CodegenContext.fresh_name": {"fullname": "tensorgrad.extras.to_numpy.CodegenContext.fresh_name", "modulename": "tensorgrad.extras.to_numpy", "qualname": "CodegenContext.fresh_name", "kind": "function", "doc": "<p>Generate a fresh variable name each time it is called.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">base</span><span class=\"p\">:</span> <span class=\"nb\">str</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, "tensorgrad.extras.to_numpy.CodegenContext.declare_dimension": {"fullname": "tensorgrad.extras.to_numpy.CodegenContext.declare_dimension", "modulename": "tensorgrad.extras.to_numpy", "qualname": "CodegenContext.declare_dimension", "kind": "function", "doc": "<p>Return a string naming this dimension: either:</p>\n\n<ul>\n<li>str(symbol) if it's an integer</li>\n<li>symbol.name (with uniqueness checking) if it's a Sympy Symbol</li>\n</ul>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">symbol</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, "tensorgrad.extras.to_numpy.CodegenContext.set_var_type": {"fullname": "tensorgrad.extras.to_numpy.CodegenContext.set_var_type", "modulename": "tensorgrad.extras.to_numpy", "qualname": "CodegenContext.set_var_type", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">var_name</span>, </span><span class=\"param\"><span class=\"n\">var_type</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, "tensorgrad.extras.to_numpy.CodegenContext.get_var_type": {"fullname": "tensorgrad.extras.to_numpy.CodegenContext.get_var_type", "modulename": "tensorgrad.extras.to_numpy", "qualname": "CodegenContext.get_var_type", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">var_name</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, "tensorgrad.extras.to_numpy.permute_code": {"fullname": "tensorgrad.extras.to_numpy.permute_code", "modulename": "tensorgrad.extras.to_numpy", "qualname": "permute_code", "kind": "function", "doc": "<p>Return a string for <code>.transpose(...)</code> in NumPy if needed, to reorder\n'source' edges into 'target' edges.</p>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"n\">source</span><span class=\"p\">:</span> <span class=\"n\">tensorgrad</span><span class=\"o\">.</span><span class=\"n\">tensor</span><span class=\"o\">.</span><span class=\"n\">Tensor</span>,</span><span class=\"param\">\t<span class=\"n\">target</span><span class=\"p\">:</span> <span class=\"n\">tensorgrad</span><span class=\"o\">.</span><span class=\"n\">tensor</span><span class=\"o\">.</span><span class=\"n\">Tensor</span></span><span class=\"return-annotation\">) -> <span class=\"nb\">str</span>:</span></span>", "funcdef": "def"}, "tensorgrad.extras.to_pytorch": {"fullname": "tensorgrad.extras.to_pytorch", "modulename": "tensorgrad.extras.to_pytorch", "kind": "module", "doc": "<p></p>\n"}, "tensorgrad.extras.to_pytorch.compile_to_callable": {"fullname": "tensorgrad.extras.to_pytorch.compile_to_callable", "modulename": "tensorgrad.extras.to_pytorch", "qualname": "compile_to_callable", "kind": "function", "doc": "<p>Build a Python callable:  f(values, *symbol_args) -> torch.Tensor\n  where 'symbol_args' are the integer dimension values for each distinct Sympy.Symbol\n  in sorted order by symbol.name, and 'values' is a dict {Variable: torch.Tensor}.</p>\n\n<p>The generated function <code>_generated_forward(...)</code> will have arguments like:\n    def _generated_forward(batch, c0, w0, h0, _var_1234, _var_5678, ...):\n        ...\n        return result</p>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"o\">*</span><span class=\"n\">tensors</span><span class=\"p\">:</span> <span class=\"n\">tensorgrad</span><span class=\"o\">.</span><span class=\"n\">tensor</span><span class=\"o\">.</span><span class=\"n\">Tensor</span>,</span><span class=\"param\">\t<span class=\"n\">verbose</span><span class=\"o\">=</span><span class=\"kc\">False</span>,</span><span class=\"param\">\t<span class=\"n\">torch_compile</span><span class=\"o\">=</span><span class=\"kc\">False</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, "tensorgrad.extras.to_pytorch.CodegenContext": {"fullname": "tensorgrad.extras.to_pytorch.CodegenContext", "modulename": "tensorgrad.extras.to_pytorch", "qualname": "CodegenContext", "kind": "class", "doc": "<p>Holds:</p>\n\n<ul>\n<li>lines of Python code</li>\n<li>a cache from Tensor -> local var name</li>\n<li>a set of encountered Variables</li>\n<li>a set of encountered Sympy Symbols</li>\n</ul>\n"}, "tensorgrad.extras.to_pytorch.CodegenContext.lines": {"fullname": "tensorgrad.extras.to_pytorch.CodegenContext.lines", "modulename": "tensorgrad.extras.to_pytorch", "qualname": "CodegenContext.lines", "kind": "variable", "doc": "<p></p>\n"}, "tensorgrad.extras.to_pytorch.CodegenContext.cache": {"fullname": "tensorgrad.extras.to_pytorch.CodegenContext.cache", "modulename": "tensorgrad.extras.to_pytorch", "qualname": "CodegenContext.cache", "kind": "variable", "doc": "<p></p>\n"}, "tensorgrad.extras.to_pytorch.CodegenContext.seen_variables": {"fullname": "tensorgrad.extras.to_pytorch.CodegenContext.seen_variables", "modulename": "tensorgrad.extras.to_pytorch", "qualname": "CodegenContext.seen_variables", "kind": "variable", "doc": "<p></p>\n"}, "tensorgrad.extras.to_pytorch.CodegenContext.seen_symbols": {"fullname": "tensorgrad.extras.to_pytorch.CodegenContext.seen_symbols", "modulename": "tensorgrad.extras.to_pytorch", "qualname": "CodegenContext.seen_symbols", "kind": "variable", "doc": "<p></p>\n"}, "tensorgrad.extras.to_pytorch.CodegenContext.seen_names": {"fullname": "tensorgrad.extras.to_pytorch.CodegenContext.seen_names", "modulename": "tensorgrad.extras.to_pytorch", "qualname": "CodegenContext.seen_names", "kind": "variable", "doc": "<p></p>\n"}, "tensorgrad.extras.to_pytorch.CodegenContext.emit": {"fullname": "tensorgrad.extras.to_pytorch.CodegenContext.emit", "modulename": "tensorgrad.extras.to_pytorch", "qualname": "CodegenContext.emit", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">line</span><span class=\"p\">:</span> <span class=\"nb\">str</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, "tensorgrad.extras.to_pytorch.CodegenContext.fresh_name": {"fullname": "tensorgrad.extras.to_pytorch.CodegenContext.fresh_name", "modulename": "tensorgrad.extras.to_pytorch", "qualname": "CodegenContext.fresh_name", "kind": "function", "doc": "<p>Generate a fresh variable name each time it is called.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">base</span><span class=\"p\">:</span> <span class=\"nb\">str</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, "tensorgrad.extras.to_pytorch.CodegenContext.declare_dimension": {"fullname": "tensorgrad.extras.to_pytorch.CodegenContext.declare_dimension", "modulename": "tensorgrad.extras.to_pytorch", "qualname": "CodegenContext.declare_dimension", "kind": "function", "doc": "<p>Return a string naming this dimension: either:</p>\n\n<ul>\n<li>str(symbol) if it's an int</li>\n<li>symbol.name (and record symbol in self.seen_symbols) if it's a Sympy Symbol</li>\n</ul>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">symbol</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, "tensorgrad.extras.to_pytorch.permute": {"fullname": "tensorgrad.extras.to_pytorch.permute", "modulename": "tensorgrad.extras.to_pytorch", "qualname": "permute", "kind": "function", "doc": "<p>Return a string that permutes the tensor to match the parent's order.</p>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"n\">tensor</span><span class=\"p\">:</span> <span class=\"n\">tensorgrad</span><span class=\"o\">.</span><span class=\"n\">tensor</span><span class=\"o\">.</span><span class=\"n\">Tensor</span>,</span><span class=\"param\">\t<span class=\"n\">parent</span><span class=\"p\">:</span> <span class=\"n\">tensorgrad</span><span class=\"o\">.</span><span class=\"n\">tensor</span><span class=\"o\">.</span><span class=\"n\">Tensor</span></span><span class=\"return-annotation\">) -> <span class=\"nb\">str</span>:</span></span>", "funcdef": "def"}, "tensorgrad.extras.to_tikz": {"fullname": "tensorgrad.extras.to_tikz", "modulename": "tensorgrad.extras.to_tikz", "kind": "module", "doc": "<p></p>\n"}, "tensorgrad.extras.to_tikz.to_tikz": {"fullname": "tensorgrad.extras.to_tikz.to_tikz", "modulename": "tensorgrad.extras.to_tikz", "qualname": "to_tikz", "kind": "function", "doc": "<p>Main entry point: produce the LaTeX (TikZ) code for 'tensor'.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">tensor</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, "tensorgrad.extras.to_tikz.NodeRef": {"fullname": "tensorgrad.extras.to_tikz.NodeRef", "modulename": "tensorgrad.extras.to_tikz", "qualname": "NodeRef", "kind": "class", "doc": "<p>Holds an edge to a node in the final TikZ.</p>\n\n<ul>\n<li>name:        The unique internal name used in TikZ (e.g. \"node12\").</li>\n<li>edge_style:  A style string for the edge leading to/from this node (if any).</li>\n<li>edge_label:  A label for the edge, if we need it to differ from the normal\nfree-edge name.</li>\n</ul>\n"}, "tensorgrad.extras.to_tikz.NodeRef.__init__": {"fullname": "tensorgrad.extras.to_tikz.NodeRef.__init__", "modulename": "tensorgrad.extras.to_tikz", "qualname": "NodeRef.__init__", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">name</span><span class=\"p\">:</span> <span class=\"nb\">str</span>, </span><span class=\"param\"><span class=\"n\">edge_style</span><span class=\"p\">:</span> <span class=\"nb\">str</span> <span class=\"o\">=</span> <span class=\"s1\">&#39;&#39;</span>, </span><span class=\"param\"><span class=\"n\">edge_label</span><span class=\"p\">:</span> <span class=\"nb\">str</span> <span class=\"o\">=</span> <span class=\"s1\">&#39;&#39;</span></span>)</span>"}, "tensorgrad.extras.to_tikz.NodeRef.name": {"fullname": "tensorgrad.extras.to_tikz.NodeRef.name", "modulename": "tensorgrad.extras.to_tikz", "qualname": "NodeRef.name", "kind": "variable", "doc": "<p></p>\n", "annotation": ": str"}, "tensorgrad.extras.to_tikz.NodeRef.edge_style": {"fullname": "tensorgrad.extras.to_tikz.NodeRef.edge_style", "modulename": "tensorgrad.extras.to_tikz", "qualname": "NodeRef.edge_style", "kind": "variable", "doc": "<p></p>\n", "annotation": ": str", "default_value": "&#x27;&#x27;"}, "tensorgrad.extras.to_tikz.NodeRef.edge_label": {"fullname": "tensorgrad.extras.to_tikz.NodeRef.edge_label", "modulename": "tensorgrad.extras.to_tikz", "qualname": "NodeRef.edge_label", "kind": "variable", "doc": "<p></p>\n", "annotation": ": str", "default_value": "&#x27;&#x27;"}, "tensorgrad.extras.to_tikz.Namer": {"fullname": "tensorgrad.extras.to_tikz.Namer", "modulename": "tensorgrad.extras.to_tikz", "qualname": "Namer", "kind": "class", "doc": "<p></p>\n"}, "tensorgrad.extras.to_tikz.Namer.counter": {"fullname": "tensorgrad.extras.to_tikz.Namer.counter", "modulename": "tensorgrad.extras.to_tikz", "qualname": "Namer.counter", "kind": "variable", "doc": "<p></p>\n"}, "tensorgrad.extras.to_tikz.Namer.edge_mapping": {"fullname": "tensorgrad.extras.to_tikz.Namer.edge_mapping", "modulename": "tensorgrad.extras.to_tikz", "qualname": "Namer.edge_mapping", "kind": "variable", "doc": "<p></p>\n"}, "tensorgrad.extras.to_tikz.Namer.fresh_name": {"fullname": "tensorgrad.extras.to_tikz.Namer.fresh_name", "modulename": "tensorgrad.extras.to_tikz", "qualname": "Namer.fresh_name", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">prefix</span><span class=\"o\">=</span><span class=\"s1\">&#39;node&#39;</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, "tensorgrad.extras.to_tikz.Namer.edge": {"fullname": "tensorgrad.extras.to_tikz.Namer.edge", "modulename": "tensorgrad.extras.to_tikz", "qualname": "Namer.edge", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">edge</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, "tensorgrad.extras.to_tikz.depth_tracking_dispatcher": {"fullname": "tensorgrad.extras.to_tikz.depth_tracking_dispatcher", "modulename": "tensorgrad.extras.to_tikz", "qualname": "depth_tracking_dispatcher", "kind": "class", "doc": "<p>Single-dispatch generic method descriptor.</p>\n\n<p>Supports wrapping existing descriptors and handles non-descriptor\ncallables as instance methods.</p>\n", "bases": "functools.singledispatchmethod"}, "tensorgrad.extras.to_tikz.depth_tracking_dispatcher.register": {"fullname": "tensorgrad.extras.to_tikz.depth_tracking_dispatcher.register", "modulename": "tensorgrad.extras.to_tikz", "qualname": "depth_tracking_dispatcher.register", "kind": "function", "doc": "<p>generic_method.register(cls, func) -> func</p>\n\n<p>Registers a new implementation for the given <em>cls</em> on a <em>generic_method</em>.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"bp\">cls</span>, </span><span class=\"param\"><span class=\"n\">method</span><span class=\"o\">=</span><span class=\"kc\">None</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, "tensorgrad.extras.to_tikz.TikzGraph": {"fullname": "tensorgrad.extras.to_tikz.TikzGraph", "modulename": "tensorgrad.extras.to_tikz", "qualname": "TikzGraph", "kind": "class", "doc": "<p></p>\n"}, "tensorgrad.extras.to_tikz.TikzGraph.__init__": {"fullname": "tensorgrad.extras.to_tikz.TikzGraph.__init__", "modulename": "tensorgrad.extras.to_tikz", "qualname": "TikzGraph.__init__", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">namer</span><span class=\"p\">:</span> <span class=\"n\">tensorgrad</span><span class=\"o\">.</span><span class=\"n\">extras</span><span class=\"o\">.</span><span class=\"n\">to_tikz</span><span class=\"o\">.</span><span class=\"n\">Namer</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>, </span><span class=\"param\"><span class=\"n\">depth</span><span class=\"p\">:</span> <span class=\"nb\">int</span> <span class=\"o\">=</span> <span class=\"mi\">0</span></span>)</span>"}, "tensorgrad.extras.to_tikz.TikzGraph.lines": {"fullname": "tensorgrad.extras.to_tikz.TikzGraph.lines", "modulename": "tensorgrad.extras.to_tikz", "qualname": "TikzGraph.lines", "kind": "variable", "doc": "<p></p>\n"}, "tensorgrad.extras.to_tikz.TikzGraph.namer": {"fullname": "tensorgrad.extras.to_tikz.TikzGraph.namer", "modulename": "tensorgrad.extras.to_tikz", "qualname": "TikzGraph.namer", "kind": "variable", "doc": "<p></p>\n"}, "tensorgrad.extras.to_tikz.TikzGraph.depth": {"fullname": "tensorgrad.extras.to_tikz.TikzGraph.depth", "modulename": "tensorgrad.extras.to_tikz", "qualname": "TikzGraph.depth", "kind": "variable", "doc": "<p></p>\n"}, "tensorgrad.extras.to_tikz.TikzGraph.added_node_names": {"fullname": "tensorgrad.extras.to_tikz.TikzGraph.added_node_names", "modulename": "tensorgrad.extras.to_tikz", "qualname": "TikzGraph.added_node_names", "kind": "variable", "doc": "<p></p>\n"}, "tensorgrad.extras.to_tikz.TikzGraph.subgraph": {"fullname": "tensorgrad.extras.to_tikz.TikzGraph.subgraph", "modulename": "tensorgrad.extras.to_tikz", "qualname": "TikzGraph.subgraph", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, "tensorgrad.extras.to_tikz.TikzGraph.to_tikz": {"fullname": "tensorgrad.extras.to_tikz.TikzGraph.to_tikz", "modulename": "tensorgrad.extras.to_tikz", "qualname": "TikzGraph.to_tikz", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">tensor</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, "tensorgrad.extras.to_tikz.TikzGraph.add_node": {"fullname": "tensorgrad.extras.to_tikz.TikzGraph.add_node", "modulename": "tensorgrad.extras.to_tikz", "qualname": "TikzGraph.add_node", "kind": "function", "doc": "<p>Add a single node to this graph. We rely on node_ref.name for uniqueness.</p>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"bp\">self</span>,</span><span class=\"param\">\t<span class=\"n\">name</span><span class=\"p\">:</span> <span class=\"nb\">str</span>,</span><span class=\"param\">\t<span class=\"n\">node_type</span><span class=\"p\">:</span> <span class=\"nb\">str</span>,</span><span class=\"param\">\t<span class=\"n\">label</span><span class=\"p\">:</span> <span class=\"nb\">str</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">degree</span><span class=\"p\">:</span> <span class=\"nb\">int</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">style</span><span class=\"o\">=</span><span class=\"kc\">None</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, "tensorgrad.extras.to_tikz.TikzGraph.add_edge": {"fullname": "tensorgrad.extras.to_tikz.TikzGraph.add_edge", "modulename": "tensorgrad.extras.to_tikz", "qualname": "TikzGraph.add_edge", "kind": "function", "doc": "<p>Add an edge between two NodeRefs. We honor any edge_style stored in\nthe NodeRef. If both have styles, we prefer the second's or combine them?</p>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"bp\">self</span>,</span><span class=\"param\">\t<span class=\"n\">ref1</span><span class=\"p\">:</span> <span class=\"n\">tensorgrad</span><span class=\"o\">.</span><span class=\"n\">extras</span><span class=\"o\">.</span><span class=\"n\">to_tikz</span><span class=\"o\">.</span><span class=\"n\">NodeRef</span>,</span><span class=\"param\">\t<span class=\"n\">ref2</span><span class=\"p\">:</span> <span class=\"n\">tensorgrad</span><span class=\"o\">.</span><span class=\"n\">extras</span><span class=\"o\">.</span><span class=\"n\">to_tikz</span><span class=\"o\">.</span><span class=\"n\">NodeRef</span>,</span><span class=\"param\">\t<span class=\"n\">directed</span><span class=\"o\">=</span><span class=\"kc\">False</span>,</span><span class=\"param\">\t<span class=\"n\">multiplicity</span><span class=\"o\">=</span><span class=\"mi\">1</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, "tensorgrad.extras.to_tikz.TikzGraph.add_subgraph": {"fullname": "tensorgrad.extras.to_tikz.TikzGraph.add_subgraph", "modulename": "tensorgrad.extras.to_tikz", "qualname": "TikzGraph.add_subgraph", "kind": "function", "doc": "<p>Insert a subgraph as a cluster. We rely on subgraph.lines (already constructed),\nand we do not re-add subgraph's nodes individually if they've already been\nadded at a higher scope. We do, however, want them to appear in the subgraph block.</p>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"bp\">self</span>,</span><span class=\"param\">\t<span class=\"n\">subgraph</span><span class=\"p\">:</span> <span class=\"n\">tensorgrad</span><span class=\"o\">.</span><span class=\"n\">extras</span><span class=\"o\">.</span><span class=\"n\">to_tikz</span><span class=\"o\">.</span><span class=\"n\">TikzGraph</span>,</span><span class=\"param\">\t<span class=\"n\">cluster_id</span><span class=\"p\">:</span> <span class=\"nb\">str</span>,</span><span class=\"param\">\t<span class=\"o\">*</span>,</span><span class=\"param\">\t<span class=\"n\">style</span><span class=\"p\">:</span> <span class=\"nb\">str</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">layout</span><span class=\"p\">:</span> <span class=\"nb\">str</span> <span class=\"o\">=</span> <span class=\"kc\">None</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, "tensorgrad.extras.to_tikz.TikzGraph.handle_free_edges": {"fullname": "tensorgrad.extras.to_tikz.TikzGraph.handle_free_edges", "modulename": "tensorgrad.extras.to_tikz", "qualname": "TikzGraph.handle_free_edges", "kind": "function", "doc": "<p>If an edge is only connected once, we create an 'invisible' node\nto represent that free edge in the diagram, so it\u2019s visible as\na dangling line.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">free_edges</span><span class=\"p\">:</span> <span class=\"nb\">dict</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, "tensorgrad.extras.to_tikz.format_label": {"fullname": "tensorgrad.extras.to_tikz.format_label", "modulename": "tensorgrad.extras.to_tikz", "qualname": "format_label", "kind": "function", "doc": "<p>Attempt to parse trailing digits and underscores to produce e.g. x_1 or x_{12}.\nAlso handle \"D_\" for double lines, etc.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">label</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, "tensorgrad.extras.to_tikz.format_weight": {"fullname": "tensorgrad.extras.to_tikz.format_weight", "modulename": "tensorgrad.extras.to_tikz", "qualname": "format_weight", "kind": "function", "doc": "<p>Just a small helper for printing weights in sums.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">w</span>, </span><span class=\"param\"><span class=\"n\">i</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, "tensorgrad.extras.to_tikz.format_function": {"fullname": "tensorgrad.extras.to_tikz.format_function", "modulename": "tensorgrad.extras.to_tikz", "qualname": "format_function", "kind": "function", "doc": "<p>Just a small helper for printing weights in sums.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">label</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, "tensorgrad.extras.to_tikz.tree_layout": {"fullname": "tensorgrad.extras.to_tikz.tree_layout", "modulename": "tensorgrad.extras.to_tikz", "qualname": "tree_layout", "kind": "variable", "doc": "<p></p>\n", "default_value": "&#x27;    tree layout,\\n    components go down left aligned,\\n    fresh nodes,\\n    sibling sep=1em,\\n    node sep=1em,\\n    nodes behind edges,\\n&#x27;"}, "tensorgrad.extras.to_tikz.spring_layout": {"fullname": "tensorgrad.extras.to_tikz.spring_layout", "modulename": "tensorgrad.extras.to_tikz", "qualname": "spring_layout", "kind": "variable", "doc": "<p></p>\n", "default_value": "&#x27;    spring layout,\\n    fresh nodes,\\n    nodes behind edges,\\n&#x27;"}, "tensorgrad.extras.to_tikz.choose_layout": {"fullname": "tensorgrad.extras.to_tikz.choose_layout", "modulename": "tensorgrad.extras.to_tikz", "qualname": "choose_layout", "kind": "function", "doc": "<p>Switch layout or orientation by depth, if desired.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">depth</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, "tensorgrad.extras.to_tikz.prefix": {"fullname": "tensorgrad.extras.to_tikz.prefix", "modulename": "tensorgrad.extras.to_tikz", "qualname": "prefix", "kind": "variable", "doc": "<p></p>\n", "default_value": "&#x27;\\\\documentclass[tikz]{standalone}\\n\\\\usetikzlibrary{graphs, graphdrawing, quotes, arrows.meta, decorations.markings, shapes.geometric}\\n\\\\usegdlibrary{trees, layered, force}\\n\\\\usepackage[T1]{fontenc}\\n\\\\usepackage{comicneue}\\n\\\\begin{document}\\n\\\\tikz[\\n    font=\\\\sffamily,\\n    every node/.style={\\n        inner sep=3pt,\\n    },\\n    identity/.style={circle, draw=black, fill=black, inner sep=0pt, minimum size=4pt},\\n    zero/.style={rectangle, draw=black, fill=white, inner sep=2pt},\\n    conv/.style={rectangle, draw=black, fill=white, inner sep=2pt},\\n    reshape/.style={rectangle, draw=black, fill=white, inner sep=2pt},\\n    function/.style={circle, draw=black, fill=white, inner sep=2pt},\\n    var/.style={circle, draw=purple!50!black, very thick, fill=purple!20, inner sep=3pt},\\n    degree0/.style={circle, draw=orange!50!black, very thick, fill=orange!20, inner sep=3pt},\\n    degree1/.style={circle, draw=blue!50!black, very thick, fill=blue!20, inner sep=4pt},\\n    degree2/.style={rectangle, draw=red!50!black, very thick, fill=red!20, inner sep=6pt},\\n    degree3/.style={diamond, draw=green!50!black, very thick, fill=green!20, inner sep=4pt},\\n    degree4/.style={star, star points=5, draw=purple!50!black, very thick, fill=purple!20, inner sep=4pt},\\n    label/.style={scale=2, inner sep=0pt},\\n    subgraph nodes={draw=gray, rounded corners},\\n    derivative+subgraph/.style={draw=black, very thick, circle},\\n    expectation+subgraph/.style={draw=black, very thick, sharp corners},\\n    function+subgraph/.style={draw=black, thick, dashed, rounded corners},\\n    subgraph text none,\\n    every edge/.append style={\\n        very thick,\\n    },\\n    every edge quotes/.style={\\n        font=\\\\fontsize{5}{5.5}\\\\selectfont,\\n        fill=white,\\n        fill opacity=0.85,\\n        text opacity=1,\\n        midway,\\n        inner sep=1pt,\\n    },\\n    pin distance=.5ex,\\n    every pin/.style={font=\\\\small\\\\itshape}\\n]\\n&#x27;"}, "tensorgrad.functions": {"fullname": "tensorgrad.functions", "modulename": "tensorgrad.functions", "kind": "module", "doc": "<p></p>\n"}, "tensorgrad.functions.DimType": {"fullname": "tensorgrad.functions.DimType", "modulename": "tensorgrad.functions", "qualname": "DimType", "kind": "variable", "doc": "<p></p>\n", "default_value": "typing.Union[NoneType, str, typing.Iterable[str]]"}, "tensorgrad.functions.taylor": {"fullname": "tensorgrad.functions.taylor", "modulename": "tensorgrad.functions", "qualname": "taylor", "kind": "function", "doc": "<p>Return the nth order Taylor approximation of f at x+eps.</p>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"n\">f</span><span class=\"p\">:</span> <span class=\"n\">tensorgrad</span><span class=\"o\">.</span><span class=\"n\">tensor</span><span class=\"o\">.</span><span class=\"n\">Tensor</span>,</span><span class=\"param\">\t<span class=\"n\">wrt</span><span class=\"p\">:</span> <span class=\"n\">tensorgrad</span><span class=\"o\">.</span><span class=\"n\">tensor</span><span class=\"o\">.</span><span class=\"n\">Variable</span>,</span><span class=\"param\">\t<span class=\"n\">eps</span><span class=\"p\">:</span> <span class=\"n\">tensorgrad</span><span class=\"o\">.</span><span class=\"n\">tensor</span><span class=\"o\">.</span><span class=\"n\">Tensor</span>,</span><span class=\"param\">\t<span class=\"n\">n</span><span class=\"p\">:</span> <span class=\"nb\">int</span></span><span class=\"return-annotation\">) -> <span class=\"n\">tensorgrad</span><span class=\"o\">.</span><span class=\"n\">tensor</span><span class=\"o\">.</span><span class=\"n\">Tensor</span>:</span></span>", "funcdef": "def"}, "tensorgrad.functions.frobenius2": {"fullname": "tensorgrad.functions.frobenius2", "modulename": "tensorgrad.functions", "qualname": "frobenius2", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">t</span><span class=\"p\">:</span> <span class=\"n\">tensorgrad</span><span class=\"o\">.</span><span class=\"n\">tensor</span><span class=\"o\">.</span><span class=\"n\">Tensor</span></span><span class=\"return-annotation\">) -> <span class=\"n\">tensorgrad</span><span class=\"o\">.</span><span class=\"n\">tensor</span><span class=\"o\">.</span><span class=\"n\">Tensor</span>:</span></span>", "funcdef": "def"}, "tensorgrad.functions.symmetrize": {"fullname": "tensorgrad.functions.symmetrize", "modulename": "tensorgrad.functions", "qualname": "symmetrize", "kind": "function", "doc": "<p>Sum over all permutations of the edges.</p>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"n\">t</span><span class=\"p\">:</span> <span class=\"n\">tensorgrad</span><span class=\"o\">.</span><span class=\"n\">tensor</span><span class=\"o\">.</span><span class=\"n\">Tensor</span>,</span><span class=\"param\">\t<span class=\"n\">dims</span><span class=\"p\">:</span> <span class=\"n\">Union</span><span class=\"p\">[</span><span class=\"n\">NoneType</span><span class=\"p\">,</span> <span class=\"nb\">str</span><span class=\"p\">,</span> <span class=\"n\">Iterable</span><span class=\"p\">[</span><span class=\"nb\">str</span><span class=\"p\">]]</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">signed</span><span class=\"p\">:</span> <span class=\"nb\">bool</span> <span class=\"o\">=</span> <span class=\"kc\">False</span></span><span class=\"return-annotation\">) -> <span class=\"n\">tensorgrad</span><span class=\"o\">.</span><span class=\"n\">tensor</span><span class=\"o\">.</span><span class=\"n\">Tensor</span>:</span></span>", "funcdef": "def"}, "tensorgrad.functions.graph": {"fullname": "tensorgrad.functions.graph", "modulename": "tensorgrad.functions", "qualname": "graph", "kind": "function", "doc": "<p>Create a tensor network using a DOT-like graph syntax.</p>\n\n<p>This function allows you to define tensor networks using a syntax similar to the DOT graph description language.\nIt provides a more intuitive way to specify tensor contractions and operations compared to traditional einsum notation.</p>\n\n<h2 id=\"parameters\">Parameters:</h2>\n\n<p>dot_graph : str\n    A string describing the tensor network using DOT-like syntax. Each line represents an edge or connection\n    between tensors. Tensor names are separated by edge specifications, which are hyphen-delimited lists of\n    edge names.</p>\n\n<p>**vars : dict\n    Keyword arguments representing the tensors used in the graph. Each key is the tensor name used in the\n    dot_graph, and the corresponding value is the actual tensor object.</p>\n\n<h2 id=\"returns\">Returns:</h2>\n\n<p>Product\n    A Product object representing the tensor network described by the input graph.</p>\n\n<h2 id=\"syntax\">Syntax:</h2>\n\n<ul>\n<li>Tensors are represented by their names (e.g., 'A', 'B', 'X').</li>\n<li>Edge connections are represented by hyphens: '-'. For example, 'A -i- B' connects edge 'i' of A to edge 'i' of B.</li>\n<li>You can connect edges with different names. For example, 'A -i-j- B' connects edge 'i' of A to edge 'j' of B.</li>\n<li>Delta tensors are created automatically when a name starting with '<em>', like '</em>3' is used.</li>\n<li>Lines can be separated by newlines or semicolons.</li>\n<li>Edges not mentioned in the graph are broadcasted.</li>\n</ul>\n\n<h2 id=\"examples\">Examples:</h2>\n\n<ol>\n<li><p>Matrix multiplication:</p>\n\n<div class=\"pdoc-code codehilite\">\n<pre><span></span><code><span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">i</span><span class=\"p\">,</span> <span class=\"n\">j</span><span class=\"p\">,</span> <span class=\"n\">k</span> <span class=\"o\">=</span> <span class=\"n\">symbols</span><span class=\"p\">(</span><span class=\"s2\">&quot;i j k&quot;</span><span class=\"p\">)</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">A</span> <span class=\"o\">=</span> <span class=\"n\">Variable</span><span class=\"p\">(</span><span class=\"s2\">&quot;A&quot;</span><span class=\"p\">,</span> <span class=\"n\">i</span><span class=\"p\">,</span> <span class=\"n\">j</span><span class=\"p\">)</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">B</span> <span class=\"o\">=</span> <span class=\"n\">Variable</span><span class=\"p\">(</span><span class=\"s2\">&quot;B&quot;</span><span class=\"p\">,</span> <span class=\"n\">j</span><span class=\"p\">,</span> <span class=\"n\">k</span><span class=\"p\">)</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">result</span> <span class=\"o\">=</span> <span class=\"n\">graph</span><span class=\"p\">(</span><span class=\"s2\">&quot;A -j- B&quot;</span><span class=\"p\">,</span> <span class=\"n\">A</span><span class=\"o\">=</span><span class=\"n\">A</span><span class=\"p\">,</span> <span class=\"n\">B</span><span class=\"o\">=</span><span class=\"n\">B</span><span class=\"p\">)</span>\n</code></pre>\n</div></li>\n<li><p>Trace</p>\n\n<div class=\"pdoc-code codehilite\">\n<pre><span></span><code><span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">i</span> <span class=\"o\">=</span> <span class=\"n\">symbols</span><span class=\"p\">(</span><span class=\"s2\">&quot;i&quot;</span><span class=\"p\">)</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">X</span> <span class=\"o\">=</span> <span class=\"n\">Variable</span><span class=\"p\">(</span><span class=\"s2\">&quot;X&quot;</span><span class=\"p\">,</span> <span class=\"n\">i</span><span class=\"p\">,</span> <span class=\"n\">j</span><span class=\"o\">=</span><span class=\"n\">i</span><span class=\"p\">)</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">result</span> <span class=\"o\">=</span> <span class=\"n\">graph</span><span class=\"p\">(</span><span class=\"s1\">&#39;&#39;&#39;</span>\n<span class=\"gp\">... </span><span class=\"s1\">    X -i- X</span>\n<span class=\"gp\">... </span><span class=\"s1\">    X -j- X</span>\n<span class=\"gp\">... </span><span class=\"s1\">&#39;&#39;&#39;</span><span class=\"p\">,</span> <span class=\"n\">X</span><span class=\"o\">=</span><span class=\"n\">X</span><span class=\"p\">)</span>\n</code></pre>\n</div></li>\n<li><p>Element-wise multiplication:</p>\n\n<div class=\"pdoc-code codehilite\">\n<pre><span></span><code><span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">i</span><span class=\"p\">,</span> <span class=\"n\">j</span> <span class=\"o\">=</span> <span class=\"n\">symbols</span><span class=\"p\">(</span><span class=\"s2\">&quot;i j&quot;</span><span class=\"p\">)</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">X</span> <span class=\"o\">=</span> <span class=\"n\">Variable</span><span class=\"p\">(</span><span class=\"s2\">&quot;X&quot;</span><span class=\"p\">,</span> <span class=\"n\">i</span><span class=\"p\">,</span> <span class=\"n\">j</span><span class=\"p\">)</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">Y</span> <span class=\"o\">=</span> <span class=\"n\">Variable</span><span class=\"p\">(</span><span class=\"s2\">&quot;Y&quot;</span><span class=\"p\">,</span> <span class=\"n\">i</span><span class=\"p\">,</span> <span class=\"n\">j</span><span class=\"p\">)</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">result</span> <span class=\"o\">=</span> <span class=\"n\">graph</span><span class=\"p\">(</span><span class=\"s1\">&#39;&#39;&#39;</span>\n<span class=\"gp\">... </span><span class=\"s1\">    -i- *0 -i- X -j- *1 -j-</span>\n<span class=\"gp\">... </span><span class=\"s1\">        *0 -i- Y -j- *1</span>\n<span class=\"gp\">... </span><span class=\"s1\">&#39;&#39;&#39;</span><span class=\"p\">,</span> <span class=\"n\">X</span><span class=\"o\">=</span><span class=\"n\">X</span><span class=\"p\">,</span> <span class=\"n\">Y</span><span class=\"o\">=</span><span class=\"n\">Y</span><span class=\"p\">)</span>\n</code></pre>\n</div></li>\n<li><p>Frobenius norm (squared)</p>\n\n<div class=\"pdoc-code codehilite\">\n<pre><span></span><code><span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">i</span><span class=\"p\">,</span> <span class=\"n\">j</span> <span class=\"o\">=</span> <span class=\"n\">symbols</span><span class=\"p\">(</span><span class=\"s2\">&quot;i j&quot;</span><span class=\"p\">)</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">X</span> <span class=\"o\">=</span> <span class=\"n\">Variable</span><span class=\"p\">(</span><span class=\"s2\">&quot;X&quot;</span><span class=\"p\">,</span> <span class=\"n\">i</span><span class=\"p\">,</span> <span class=\"n\">j</span><span class=\"p\">)</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">result</span> <span class=\"o\">=</span> <span class=\"n\">graph</span><span class=\"p\">(</span><span class=\"s1\">&#39;&#39;&#39;</span>\n<span class=\"gp\">... </span><span class=\"s1\">    X1 -i- X2</span>\n<span class=\"gp\">... </span><span class=\"s1\">    X1 -j- X2</span>\n<span class=\"gp\">... </span><span class=\"s1\">&#39;&#39;&#39;</span><span class=\"p\">,</span> <span class=\"n\">X1</span><span class=\"o\">=</span><span class=\"n\">X</span><span class=\"p\">,</span> <span class=\"n\">X2</span><span class=\"o\">=</span><span class=\"n\">X</span><span class=\"p\">)</span>\n</code></pre>\n</div></li>\n</ol>\n\n<h2 id=\"raises\">Raises:</h2>\n\n<p>ValueError\n    If the graph specification is invalid, such as using undefined variables,\n    invalid edge names, or inconsistent hyperedge sizes.</p>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"n\">dot_graph</span><span class=\"p\">:</span> <span class=\"nb\">str</span>,</span><span class=\"param\">\t<span class=\"o\">**</span><span class=\"nb\">vars</span><span class=\"p\">:</span> <span class=\"n\">tensorgrad</span><span class=\"o\">.</span><span class=\"n\">tensor</span><span class=\"o\">.</span><span class=\"n\">Tensor</span></span><span class=\"return-annotation\">) -> <span class=\"n\">tensorgrad</span><span class=\"o\">.</span><span class=\"n\">tensor</span><span class=\"o\">.</span><span class=\"n\">Tensor</span>:</span></span>", "funcdef": "def"}, "tensorgrad.functions.kronecker": {"fullname": "tensorgrad.functions.kronecker", "modulename": "tensorgrad.functions", "qualname": "kronecker", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"o\">*</span><span class=\"n\">tensors</span><span class=\"p\">:</span> <span class=\"n\">tensorgrad</span><span class=\"o\">.</span><span class=\"n\">tensor</span><span class=\"o\">.</span><span class=\"n\">Tensor</span></span><span class=\"return-annotation\">) -> <span class=\"n\">tensorgrad</span><span class=\"o\">.</span><span class=\"n\">tensor</span><span class=\"o\">.</span><span class=\"n\">Tensor</span>:</span></span>", "funcdef": "def"}, "tensorgrad.functions.diag": {"fullname": "tensorgrad.functions.diag", "modulename": "tensorgrad.functions", "qualname": "diag", "kind": "function", "doc": "<p>If <code>t</code> is a vector, this creates a diagonal tensor with <code>t</code> and creates a diagonal.\nIn einsum that means \"i->iii\".\nIf <code>t</code> is a higher order tensor, with all dims the same size, this extracts the diagonal as a vector.\nIn einsum that means \"iii->i\".</p>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"n\">t</span><span class=\"p\">:</span> <span class=\"n\">tensorgrad</span><span class=\"o\">.</span><span class=\"n\">tensor</span><span class=\"o\">.</span><span class=\"n\">Tensor</span>,</span><span class=\"param\">\t<span class=\"n\">new_edges</span><span class=\"p\">:</span> <span class=\"nb\">list</span><span class=\"p\">[</span><span class=\"nb\">str</span><span class=\"p\">]</span></span><span class=\"return-annotation\">) -> <span class=\"n\">tensorgrad</span><span class=\"o\">.</span><span class=\"n\">tensor</span><span class=\"o\">.</span><span class=\"n\">Tensor</span>:</span></span>", "funcdef": "def"}, "tensorgrad.functions.trace": {"fullname": "tensorgrad.functions.trace", "modulename": "tensorgrad.functions", "qualname": "trace", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">tensor</span><span class=\"p\">:</span> <span class=\"n\">tensorgrad</span><span class=\"o\">.</span><span class=\"n\">tensor</span><span class=\"o\">.</span><span class=\"n\">Tensor</span></span><span class=\"return-annotation\">) -> <span class=\"n\">tensorgrad</span><span class=\"o\">.</span><span class=\"n\">tensor</span><span class=\"o\">.</span><span class=\"n\">Tensor</span>:</span></span>", "funcdef": "def"}, "tensorgrad.functions.parse_dim": {"fullname": "tensorgrad.functions.parse_dim", "modulename": "tensorgrad.functions", "qualname": "parse_dim", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"n\">tensor_edges</span><span class=\"p\">:</span> <span class=\"nb\">set</span><span class=\"p\">[</span><span class=\"nb\">str</span><span class=\"p\">]</span>,</span><span class=\"param\">\t<span class=\"n\">dim</span><span class=\"p\">:</span> <span class=\"n\">Union</span><span class=\"p\">[</span><span class=\"n\">NoneType</span><span class=\"p\">,</span> <span class=\"nb\">str</span><span class=\"p\">,</span> <span class=\"n\">Iterable</span><span class=\"p\">[</span><span class=\"nb\">str</span><span class=\"p\">]]</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">none_is</span><span class=\"p\">:</span> <span class=\"nb\">str</span> <span class=\"o\">=</span> <span class=\"s1\">&#39;error&#39;</span></span><span class=\"return-annotation\">) -> <span class=\"nb\">set</span><span class=\"p\">[</span><span class=\"nb\">str</span><span class=\"p\">]</span>:</span></span>", "funcdef": "def"}, "tensorgrad.functions.sum": {"fullname": "tensorgrad.functions.sum", "modulename": "tensorgrad.functions", "qualname": "sum", "kind": "function", "doc": "<p>Sum the tensor over the given dimensions.</p>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"n\">tensor</span><span class=\"p\">:</span> <span class=\"n\">tensorgrad</span><span class=\"o\">.</span><span class=\"n\">tensor</span><span class=\"o\">.</span><span class=\"n\">Tensor</span>,</span><span class=\"param\">\t<span class=\"n\">dim</span><span class=\"p\">:</span> <span class=\"n\">Union</span><span class=\"p\">[</span><span class=\"n\">NoneType</span><span class=\"p\">,</span> <span class=\"nb\">str</span><span class=\"p\">,</span> <span class=\"n\">Iterable</span><span class=\"p\">[</span><span class=\"nb\">str</span><span class=\"p\">]]</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">keepdims</span><span class=\"p\">:</span> <span class=\"nb\">bool</span> <span class=\"o\">=</span> <span class=\"kc\">False</span></span><span class=\"return-annotation\">) -> <span class=\"n\">tensorgrad</span><span class=\"o\">.</span><span class=\"n\">tensor</span><span class=\"o\">.</span><span class=\"n\">Tensor</span>:</span></span>", "funcdef": "def"}, "tensorgrad.functions.prod": {"fullname": "tensorgrad.functions.prod", "modulename": "tensorgrad.functions", "qualname": "prod", "kind": "function", "doc": "<p>Element-wise product of tensors.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"o\">*</span><span class=\"n\">tensors</span><span class=\"p\">:</span> <span class=\"n\">tensorgrad</span><span class=\"o\">.</span><span class=\"n\">tensor</span><span class=\"o\">.</span><span class=\"n\">Tensor</span></span><span class=\"return-annotation\">) -> <span class=\"n\">tensorgrad</span><span class=\"o\">.</span><span class=\"n\">tensor</span><span class=\"o\">.</span><span class=\"n\">Tensor</span>:</span></span>", "funcdef": "def"}, "tensorgrad.functions.mean": {"fullname": "tensorgrad.functions.mean", "modulename": "tensorgrad.functions", "qualname": "mean", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"n\">tensor</span><span class=\"p\">:</span> <span class=\"n\">tensorgrad</span><span class=\"o\">.</span><span class=\"n\">tensor</span><span class=\"o\">.</span><span class=\"n\">Tensor</span>,</span><span class=\"param\">\t<span class=\"n\">dim</span><span class=\"p\">:</span> <span class=\"n\">Union</span><span class=\"p\">[</span><span class=\"n\">NoneType</span><span class=\"p\">,</span> <span class=\"nb\">str</span><span class=\"p\">,</span> <span class=\"n\">Iterable</span><span class=\"p\">[</span><span class=\"nb\">str</span><span class=\"p\">]]</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">keepdims</span><span class=\"p\">:</span> <span class=\"nb\">bool</span> <span class=\"o\">=</span> <span class=\"kc\">False</span></span><span class=\"return-annotation\">) -> <span class=\"n\">tensorgrad</span><span class=\"o\">.</span><span class=\"n\">tensor</span><span class=\"o\">.</span><span class=\"n\">Tensor</span>:</span></span>", "funcdef": "def"}, "tensorgrad.functions.dot": {"fullname": "tensorgrad.functions.dot", "modulename": "tensorgrad.functions", "qualname": "dot", "kind": "function", "doc": "<p>Contract two tensors along the given dimensions, broadcasting over the remaining shared edges.\nIf the dimension is a tuple of two strings, the first string is the dimension of t1\nand the second is the dimension of t2.</p>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"n\">t1</span><span class=\"p\">:</span> <span class=\"n\">tensorgrad</span><span class=\"o\">.</span><span class=\"n\">tensor</span><span class=\"o\">.</span><span class=\"n\">Tensor</span>,</span><span class=\"param\">\t<span class=\"n\">t2</span><span class=\"p\">:</span> <span class=\"n\">tensorgrad</span><span class=\"o\">.</span><span class=\"n\">tensor</span><span class=\"o\">.</span><span class=\"n\">Tensor</span>,</span><span class=\"param\">\t<span class=\"n\">dim</span><span class=\"p\">:</span> <span class=\"nb\">str</span> <span class=\"o\">|</span> <span class=\"nb\">tuple</span><span class=\"p\">[</span><span class=\"nb\">str</span><span class=\"p\">,</span> <span class=\"nb\">str</span><span class=\"p\">]</span></span><span class=\"return-annotation\">) -> <span class=\"n\">tensorgrad</span><span class=\"o\">.</span><span class=\"n\">tensor</span><span class=\"o\">.</span><span class=\"n\">Tensor</span>:</span></span>", "funcdef": "def"}, "tensorgrad.functions.multi_dot": {"fullname": "tensorgrad.functions.multi_dot", "modulename": "tensorgrad.functions", "qualname": "multi_dot", "kind": "function", "doc": "<p>Compute the dot product of two or more tensors.</p>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"n\">ts</span><span class=\"p\">:</span> <span class=\"nb\">list</span><span class=\"p\">[</span><span class=\"n\">tensorgrad</span><span class=\"o\">.</span><span class=\"n\">tensor</span><span class=\"o\">.</span><span class=\"n\">Tensor</span><span class=\"p\">]</span>,</span><span class=\"param\">\t<span class=\"n\">dims</span><span class=\"p\">:</span> <span class=\"nb\">tuple</span><span class=\"p\">[</span><span class=\"nb\">str</span><span class=\"p\">,</span> <span class=\"nb\">str</span><span class=\"p\">]</span></span><span class=\"return-annotation\">) -> <span class=\"n\">tensorgrad</span><span class=\"o\">.</span><span class=\"n\">tensor</span><span class=\"o\">.</span><span class=\"n\">Tensor</span>:</span></span>", "funcdef": "def"}, "tensorgrad.functions.contract": {"fullname": "tensorgrad.functions.contract", "modulename": "tensorgrad.functions", "qualname": "contract", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"n\">ts</span><span class=\"p\">:</span> <span class=\"nb\">list</span><span class=\"p\">[</span><span class=\"n\">tensorgrad</span><span class=\"o\">.</span><span class=\"n\">tensor</span><span class=\"o\">.</span><span class=\"n\">Tensor</span><span class=\"p\">]</span>,</span><span class=\"param\">\t<span class=\"n\">inputs</span><span class=\"p\">:</span> <span class=\"nb\">list</span><span class=\"p\">[</span><span class=\"nb\">dict</span><span class=\"p\">[</span><span class=\"nb\">str</span><span class=\"p\">,</span> <span class=\"nb\">str</span><span class=\"p\">]]</span>,</span><span class=\"param\">\t<span class=\"n\">output</span><span class=\"p\">:</span> <span class=\"nb\">set</span><span class=\"p\">[</span><span class=\"nb\">str</span><span class=\"p\">]</span></span><span class=\"return-annotation\">) -> <span class=\"n\">tensorgrad</span><span class=\"o\">.</span><span class=\"n\">tensor</span><span class=\"o\">.</span><span class=\"n\">Tensor</span>:</span></span>", "funcdef": "def"}, "tensorgrad.functions.pow": {"fullname": "tensorgrad.functions.pow", "modulename": "tensorgrad.functions", "qualname": "pow", "kind": "function", "doc": "<p>Elementwise t^k</p>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"n\">tensor</span><span class=\"p\">:</span> <span class=\"n\">tensorgrad</span><span class=\"o\">.</span><span class=\"n\">tensor</span><span class=\"o\">.</span><span class=\"n\">Tensor</span>,</span><span class=\"param\">\t<span class=\"n\">k</span><span class=\"p\">:</span> <span class=\"nb\">int</span> <span class=\"o\">|</span> <span class=\"n\">fractions</span><span class=\"o\">.</span><span class=\"n\">Fraction</span></span><span class=\"return-annotation\">) -> <span class=\"n\">tensorgrad</span><span class=\"o\">.</span><span class=\"n\">tensor</span><span class=\"o\">.</span><span class=\"n\">Tensor</span>:</span></span>", "funcdef": "def"}, "tensorgrad.functions.sqrt": {"fullname": "tensorgrad.functions.sqrt", "modulename": "tensorgrad.functions", "qualname": "sqrt", "kind": "function", "doc": "<p>Elementwise sqrt</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">tensor</span><span class=\"p\">:</span> <span class=\"n\">tensorgrad</span><span class=\"o\">.</span><span class=\"n\">tensor</span><span class=\"o\">.</span><span class=\"n\">Tensor</span></span><span class=\"return-annotation\">) -> <span class=\"n\">tensorgrad</span><span class=\"o\">.</span><span class=\"n\">tensor</span><span class=\"o\">.</span><span class=\"n\">Tensor</span>:</span></span>", "funcdef": "def"}, "tensorgrad.functions.inverse": {"fullname": "tensorgrad.functions.inverse", "modulename": "tensorgrad.functions", "qualname": "inverse", "kind": "function", "doc": "<p>Matrix inverse over two target edges. Broadcasts over the rest.\nMirrors torch.inverse / torch.linalg.inv.</p>\n\n<p>In principle we could generalize the inverse to take a number of input\nedges, and the output would be a tensor with the same edges as the\noriginal, but if you contract it with the original over the selected\nedges, they cancel, and you get a tensor product over identitiy matrices\nover the remaining edges.</p>\n\n<p>If dims is None, we assume the input tensor is a matrix.</p>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"n\">tensor</span><span class=\"p\">:</span> <span class=\"n\">tensorgrad</span><span class=\"o\">.</span><span class=\"n\">tensor</span><span class=\"o\">.</span><span class=\"n\">Tensor</span>,</span><span class=\"param\">\t<span class=\"n\">dims</span><span class=\"p\">:</span> <span class=\"nb\">set</span><span class=\"p\">[</span><span class=\"nb\">str</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"kc\">None</span></span><span class=\"return-annotation\">) -> <span class=\"n\">tensorgrad</span><span class=\"o\">.</span><span class=\"n\">tensor</span><span class=\"o\">.</span><span class=\"n\">Tensor</span>:</span></span>", "funcdef": "def"}, "tensorgrad.functions.exp": {"fullname": "tensorgrad.functions.exp", "modulename": "tensorgrad.functions", "qualname": "exp", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">t</span><span class=\"p\">:</span> <span class=\"n\">tensorgrad</span><span class=\"o\">.</span><span class=\"n\">tensor</span><span class=\"o\">.</span><span class=\"n\">Tensor</span></span><span class=\"return-annotation\">) -> <span class=\"n\">tensorgrad</span><span class=\"o\">.</span><span class=\"n\">tensor</span><span class=\"o\">.</span><span class=\"n\">Tensor</span>:</span></span>", "funcdef": "def"}, "tensorgrad.functions.log": {"fullname": "tensorgrad.functions.log", "modulename": "tensorgrad.functions", "qualname": "log", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">t</span><span class=\"p\">:</span> <span class=\"n\">tensorgrad</span><span class=\"o\">.</span><span class=\"n\">tensor</span><span class=\"o\">.</span><span class=\"n\">Tensor</span></span><span class=\"return-annotation\">) -> <span class=\"n\">tensorgrad</span><span class=\"o\">.</span><span class=\"n\">tensor</span><span class=\"o\">.</span><span class=\"n\">Tensor</span>:</span></span>", "funcdef": "def"}, "tensorgrad.functions.tanh": {"fullname": "tensorgrad.functions.tanh", "modulename": "tensorgrad.functions", "qualname": "tanh", "kind": "function", "doc": "<p>Implements the tanh function, (e^t - e^(-t))/(e^t + e^(-t))</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">t</span><span class=\"p\">:</span> <span class=\"n\">tensorgrad</span><span class=\"o\">.</span><span class=\"n\">tensor</span><span class=\"o\">.</span><span class=\"n\">Tensor</span></span><span class=\"return-annotation\">) -> <span class=\"n\">tensorgrad</span><span class=\"o\">.</span><span class=\"n\">tensor</span><span class=\"o\">.</span><span class=\"n\">Tensor</span>:</span></span>", "funcdef": "def"}, "tensorgrad.functions.sigmoid": {"fullname": "tensorgrad.functions.sigmoid", "modulename": "tensorgrad.functions", "qualname": "sigmoid", "kind": "function", "doc": "<p>Implements the sigmoid function, 1/(1 + e^-t)</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">t</span><span class=\"p\">:</span> <span class=\"n\">tensorgrad</span><span class=\"o\">.</span><span class=\"n\">tensor</span><span class=\"o\">.</span><span class=\"n\">Tensor</span></span><span class=\"return-annotation\">) -> <span class=\"n\">tensorgrad</span><span class=\"o\">.</span><span class=\"n\">tensor</span><span class=\"o\">.</span><span class=\"n\">Tensor</span>:</span></span>", "funcdef": "def"}, "tensorgrad.functions.softmax": {"fullname": "tensorgrad.functions.softmax", "modulename": "tensorgrad.functions", "qualname": "softmax", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"n\">t</span><span class=\"p\">:</span> <span class=\"n\">tensorgrad</span><span class=\"o\">.</span><span class=\"n\">tensor</span><span class=\"o\">.</span><span class=\"n\">Tensor</span>,</span><span class=\"param\">\t<span class=\"n\">dim</span><span class=\"p\">:</span> <span class=\"n\">Union</span><span class=\"p\">[</span><span class=\"n\">NoneType</span><span class=\"p\">,</span> <span class=\"nb\">str</span><span class=\"p\">,</span> <span class=\"n\">Iterable</span><span class=\"p\">[</span><span class=\"nb\">str</span><span class=\"p\">]]</span> <span class=\"o\">=</span> <span class=\"kc\">None</span></span><span class=\"return-annotation\">) -> <span class=\"n\">tensorgrad</span><span class=\"o\">.</span><span class=\"n\">tensor</span><span class=\"o\">.</span><span class=\"n\">Tensor</span>:</span></span>", "funcdef": "def"}, "tensorgrad.functions.pairwise_distance": {"fullname": "tensorgrad.functions.pairwise_distance", "modulename": "tensorgrad.functions", "qualname": "pairwise_distance", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"n\">t1</span><span class=\"p\">:</span> <span class=\"n\">tensorgrad</span><span class=\"o\">.</span><span class=\"n\">tensor</span><span class=\"o\">.</span><span class=\"n\">Tensor</span>,</span><span class=\"param\">\t<span class=\"n\">t2</span><span class=\"p\">:</span> <span class=\"n\">tensorgrad</span><span class=\"o\">.</span><span class=\"n\">tensor</span><span class=\"o\">.</span><span class=\"n\">Tensor</span>,</span><span class=\"param\">\t<span class=\"n\">dim</span><span class=\"p\">:</span> <span class=\"n\">Union</span><span class=\"p\">[</span><span class=\"n\">NoneType</span><span class=\"p\">,</span> <span class=\"nb\">str</span><span class=\"p\">,</span> <span class=\"n\">Iterable</span><span class=\"p\">[</span><span class=\"nb\">str</span><span class=\"p\">]]</span> <span class=\"o\">=</span> <span class=\"kc\">None</span></span><span class=\"return-annotation\">) -> <span class=\"n\">tensorgrad</span><span class=\"o\">.</span><span class=\"n\">tensor</span><span class=\"o\">.</span><span class=\"n\">Tensor</span>:</span></span>", "funcdef": "def"}, "tensorgrad.functions.cross_entropy": {"fullname": "tensorgrad.functions.cross_entropy", "modulename": "tensorgrad.functions", "qualname": "cross_entropy", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"n\">logits</span><span class=\"p\">:</span> <span class=\"n\">tensorgrad</span><span class=\"o\">.</span><span class=\"n\">tensor</span><span class=\"o\">.</span><span class=\"n\">Tensor</span>,</span><span class=\"param\">\t<span class=\"n\">targets</span><span class=\"p\">:</span> <span class=\"n\">tensorgrad</span><span class=\"o\">.</span><span class=\"n\">tensor</span><span class=\"o\">.</span><span class=\"n\">Tensor</span>,</span><span class=\"param\">\t<span class=\"n\">dim</span><span class=\"p\">:</span> <span class=\"n\">Union</span><span class=\"p\">[</span><span class=\"n\">NoneType</span><span class=\"p\">,</span> <span class=\"nb\">str</span><span class=\"p\">,</span> <span class=\"n\">Iterable</span><span class=\"p\">[</span><span class=\"nb\">str</span><span class=\"p\">]]</span> <span class=\"o\">=</span> <span class=\"kc\">None</span></span><span class=\"return-annotation\">) -> <span class=\"n\">tensorgrad</span><span class=\"o\">.</span><span class=\"n\">tensor</span><span class=\"o\">.</span><span class=\"n\">Tensor</span>:</span></span>", "funcdef": "def"}, "tensorgrad.functions.sign": {"fullname": "tensorgrad.functions.sign", "modulename": "tensorgrad.functions", "qualname": "sign", "kind": "function", "doc": "<p>Returns a tensor that's\na)  1 where t &gt; 0\na)  0 where t = 0\na) -1 where t &lt; 0\nlike torch.sign</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">t</span><span class=\"p\">:</span> <span class=\"n\">tensorgrad</span><span class=\"o\">.</span><span class=\"n\">tensor</span><span class=\"o\">.</span><span class=\"n\">Tensor</span></span><span class=\"return-annotation\">) -> <span class=\"n\">tensorgrad</span><span class=\"o\">.</span><span class=\"n\">tensor</span><span class=\"o\">.</span><span class=\"n\">Tensor</span>:</span></span>", "funcdef": "def"}, "tensorgrad.functions.gt0": {"fullname": "tensorgrad.functions.gt0", "modulename": "tensorgrad.functions", "qualname": "gt0", "kind": "function", "doc": "<p>Returns a tensor that's 1 where t is &gt; 0 else 0 elsewhere</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">t</span><span class=\"p\">:</span> <span class=\"n\">tensorgrad</span><span class=\"o\">.</span><span class=\"n\">tensor</span><span class=\"o\">.</span><span class=\"n\">Tensor</span></span><span class=\"return-annotation\">) -> <span class=\"n\">tensorgrad</span><span class=\"o\">.</span><span class=\"n\">tensor</span><span class=\"o\">.</span><span class=\"n\">Tensor</span>:</span></span>", "funcdef": "def"}, "tensorgrad.functions.gt": {"fullname": "tensorgrad.functions.gt", "modulename": "tensorgrad.functions", "qualname": "gt", "kind": "function", "doc": "<p>Returns 1 where x &gt; y, 1/2 where x = y, and 0 where x &lt; y.</p>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"n\">x</span><span class=\"p\">:</span> <span class=\"n\">tensorgrad</span><span class=\"o\">.</span><span class=\"n\">tensor</span><span class=\"o\">.</span><span class=\"n\">Tensor</span>,</span><span class=\"param\">\t<span class=\"n\">y</span><span class=\"p\">:</span> <span class=\"n\">tensorgrad</span><span class=\"o\">.</span><span class=\"n\">tensor</span><span class=\"o\">.</span><span class=\"n\">Tensor</span></span><span class=\"return-annotation\">) -> <span class=\"n\">tensorgrad</span><span class=\"o\">.</span><span class=\"n\">tensor</span><span class=\"o\">.</span><span class=\"n\">Tensor</span>:</span></span>", "funcdef": "def"}, "tensorgrad.functions.maximum": {"fullname": "tensorgrad.functions.maximum", "modulename": "tensorgrad.functions", "qualname": "maximum", "kind": "function", "doc": "<p>Like torch.maximum</p>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"n\">x</span><span class=\"p\">:</span> <span class=\"n\">tensorgrad</span><span class=\"o\">.</span><span class=\"n\">tensor</span><span class=\"o\">.</span><span class=\"n\">Tensor</span>,</span><span class=\"param\">\t<span class=\"n\">y</span><span class=\"p\">:</span> <span class=\"n\">tensorgrad</span><span class=\"o\">.</span><span class=\"n\">tensor</span><span class=\"o\">.</span><span class=\"n\">Tensor</span></span><span class=\"return-annotation\">) -> <span class=\"n\">tensorgrad</span><span class=\"o\">.</span><span class=\"n\">tensor</span><span class=\"o\">.</span><span class=\"n\">Tensor</span>:</span></span>", "funcdef": "def"}, "tensorgrad.functions.relu": {"fullname": "tensorgrad.functions.relu", "modulename": "tensorgrad.functions", "qualname": "relu", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">t</span><span class=\"p\">:</span> <span class=\"n\">tensorgrad</span><span class=\"o\">.</span><span class=\"n\">tensor</span><span class=\"o\">.</span><span class=\"n\">Tensor</span></span><span class=\"return-annotation\">) -> <span class=\"n\">tensorgrad</span><span class=\"o\">.</span><span class=\"n\">tensor</span><span class=\"o\">.</span><span class=\"n\">Tensor</span>:</span></span>", "funcdef": "def"}, "tensorgrad.functions.abs": {"fullname": "tensorgrad.functions.abs", "modulename": "tensorgrad.functions", "qualname": "abs", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">t</span><span class=\"p\">:</span> <span class=\"n\">tensorgrad</span><span class=\"o\">.</span><span class=\"n\">tensor</span><span class=\"o\">.</span><span class=\"n\">Tensor</span></span><span class=\"return-annotation\">) -> <span class=\"n\">tensorgrad</span><span class=\"o\">.</span><span class=\"n\">tensor</span><span class=\"o\">.</span><span class=\"n\">Tensor</span>:</span></span>", "funcdef": "def"}, "tensorgrad.functions.argmax": {"fullname": "tensorgrad.functions.argmax", "modulename": "tensorgrad.functions", "qualname": "argmax", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">t</span><span class=\"p\">:</span> <span class=\"n\">tensorgrad</span><span class=\"o\">.</span><span class=\"n\">tensor</span><span class=\"o\">.</span><span class=\"n\">Tensor</span>, </span><span class=\"param\"><span class=\"n\">dim</span><span class=\"p\">:</span> <span class=\"nb\">str</span></span><span class=\"return-annotation\">) -> <span class=\"n\">tensorgrad</span><span class=\"o\">.</span><span class=\"n\">tensor</span><span class=\"o\">.</span><span class=\"n\">Tensor</span>:</span></span>", "funcdef": "def"}, "tensorgrad.functions.max_grad": {"fullname": "tensorgrad.functions.max_grad", "modulename": "tensorgrad.functions", "qualname": "max_grad", "kind": "function", "doc": "<p>Tie-splitting subgradient for max. If multiple elements tie for max,\neach gets 1/k of the gradient.\nMaps an order n tensor to an order n tensor.</p>\n\n<p>Examples:\n(1)   j\n    [1 4] -> max({i}) -> [2 4] -> grad({i}) -> [0 1] (broadcasted over j)\n  i [2 3]                                      [1 0]</p>\n\n<p>(2)   j\n    [1 4] -> max({i,j}) -> [4] -> grad({i,j}) -> [0 1]\n  i [2 3]                                        [0 0]</p>\n\n<p>(3)   j\n    [1 4] -> max({j}) -> [4] -> grad({j}) -> [0   1  ] (broadcasted over i)\n  i [3 3]                [3]                 [0.5 0.5]</p>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"n\">t</span><span class=\"p\">:</span> <span class=\"n\">tensorgrad</span><span class=\"o\">.</span><span class=\"n\">tensor</span><span class=\"o\">.</span><span class=\"n\">Tensor</span>,</span><span class=\"param\">\t<span class=\"n\">dim</span><span class=\"p\">:</span> <span class=\"n\">Union</span><span class=\"p\">[</span><span class=\"n\">NoneType</span><span class=\"p\">,</span> <span class=\"nb\">str</span><span class=\"p\">,</span> <span class=\"n\">Iterable</span><span class=\"p\">[</span><span class=\"nb\">str</span><span class=\"p\">]]</span> <span class=\"o\">=</span> <span class=\"kc\">None</span></span><span class=\"return-annotation\">) -> <span class=\"n\">tensorgrad</span><span class=\"o\">.</span><span class=\"n\">tensor</span><span class=\"o\">.</span><span class=\"n\">Tensor</span>:</span></span>", "funcdef": "def"}, "tensorgrad.functions.max": {"fullname": "tensorgrad.functions.max", "modulename": "tensorgrad.functions", "qualname": "max", "kind": "function", "doc": "<p>Return the max along 'dim'. If dim=(), it's the global max (0D).\nThe derivative is tie-splitting, handled by gt(...).</p>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"n\">t</span><span class=\"p\">:</span> <span class=\"n\">tensorgrad</span><span class=\"o\">.</span><span class=\"n\">tensor</span><span class=\"o\">.</span><span class=\"n\">Tensor</span>,</span><span class=\"param\">\t<span class=\"n\">dim</span><span class=\"p\">:</span> <span class=\"n\">Union</span><span class=\"p\">[</span><span class=\"n\">NoneType</span><span class=\"p\">,</span> <span class=\"nb\">str</span><span class=\"p\">,</span> <span class=\"n\">Iterable</span><span class=\"p\">[</span><span class=\"nb\">str</span><span class=\"p\">]]</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">keepdim</span><span class=\"p\">:</span> <span class=\"nb\">bool</span> <span class=\"o\">=</span> <span class=\"kc\">False</span></span><span class=\"return-annotation\">) -> <span class=\"n\">tensorgrad</span><span class=\"o\">.</span><span class=\"n\">tensor</span><span class=\"o\">.</span><span class=\"n\">Tensor</span>:</span></span>", "funcdef": "def"}, "tensorgrad.functions.concat": {"fullname": "tensorgrad.functions.concat", "modulename": "tensorgrad.functions", "qualname": "concat", "kind": "function", "doc": "<p>Concatenate tensors along the given dimension.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"o\">*</span><span class=\"n\">ts</span><span class=\"p\">:</span> <span class=\"n\">tensorgrad</span><span class=\"o\">.</span><span class=\"n\">tensor</span><span class=\"o\">.</span><span class=\"n\">Tensor</span>, </span><span class=\"param\"><span class=\"n\">dim</span><span class=\"p\">:</span> <span class=\"nb\">str</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, "tensorgrad.functions.repeat": {"fullname": "tensorgrad.functions.repeat", "modulename": "tensorgrad.functions", "qualname": "repeat", "kind": "function", "doc": "<p>Repeat the tensor along the given dimensions.\nE.g. to create a batch of identity matrices, you can do\nI = repeat(Delta(d, i, j=i), b)</p>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"n\">t</span><span class=\"p\">:</span> <span class=\"n\">tensorgrad</span><span class=\"o\">.</span><span class=\"n\">tensor</span><span class=\"o\">.</span><span class=\"n\">Tensor</span>,</span><span class=\"param\">\t<span class=\"o\">*</span><span class=\"n\">shape0</span><span class=\"p\">:</span> <span class=\"n\">sympy</span><span class=\"o\">.</span><span class=\"n\">core</span><span class=\"o\">.</span><span class=\"n\">symbol</span><span class=\"o\">.</span><span class=\"n\">Symbol</span>,</span><span class=\"param\">\t<span class=\"o\">**</span><span class=\"n\">shape1</span><span class=\"p\">:</span> <span class=\"n\">sympy</span><span class=\"o\">.</span><span class=\"n\">core</span><span class=\"o\">.</span><span class=\"n\">symbol</span><span class=\"o\">.</span><span class=\"n\">Symbol</span></span><span class=\"return-annotation\">) -> <span class=\"n\">tensorgrad</span><span class=\"o\">.</span><span class=\"n\">tensor</span><span class=\"o\">.</span><span class=\"n\">Tensor</span>:</span></span>", "funcdef": "def"}, "tensorgrad.functions.det": {"fullname": "tensorgrad.functions.det", "modulename": "tensorgrad.functions", "qualname": "det", "kind": "function", "doc": "<p>Compute the determinant of square matrices.</p>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"n\">t</span><span class=\"p\">:</span> <span class=\"n\">tensorgrad</span><span class=\"o\">.</span><span class=\"n\">tensor</span><span class=\"o\">.</span><span class=\"n\">Tensor</span>,</span><span class=\"param\">\t<span class=\"n\">dims</span><span class=\"p\">:</span> <span class=\"n\">Union</span><span class=\"p\">[</span><span class=\"n\">NoneType</span><span class=\"p\">,</span> <span class=\"nb\">str</span><span class=\"p\">,</span> <span class=\"n\">Iterable</span><span class=\"p\">[</span><span class=\"nb\">str</span><span class=\"p\">]]</span> <span class=\"o\">=</span> <span class=\"kc\">None</span></span><span class=\"return-annotation\">) -> <span class=\"n\">tensorgrad</span><span class=\"o\">.</span><span class=\"n\">tensor</span><span class=\"o\">.</span><span class=\"n\">Tensor</span>:</span></span>", "funcdef": "def"}, "tensorgrad.functions.Convolution": {"fullname": "tensorgrad.functions.Convolution", "modulename": "tensorgrad.functions", "qualname": "Convolution", "kind": "class", "doc": "<p>An abstract tensor that represents a constant (non-variable) tensor.</p>\n", "bases": "tensorgrad.tensor.Constant"}, "tensorgrad.functions.Convolution.__init__": {"fullname": "tensorgrad.functions.Convolution.__init__", "modulename": "tensorgrad.functions", "qualname": "Convolution.__init__", "kind": "function", "doc": "<p>A Convolution is a 3-tensor such that C[i,j,k] = 1 if i=j+k and 0 otherwise.\nTypically the first argument (i) is the input dim, and two others are the kernel and output dims.</p>\n\n<p>Use Convolution(win, kw, wout) to represent a 1-Dconvolution with\ninput size win, kernel size kw, and output size wout.\nwout will be win - kw + 1.\nFor 2D convolution, use Convolution(win, kw, wout) @ Convolution(hin, kh, hout).</p>\n\n<p>We don't currently support stride, but if we did the size would be wout = (win - kw) // stride + 1.\nThe formula would be C[i,j,k] = 1 if i = j + k * stride.</p>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"o\">*</span><span class=\"n\">shape0</span><span class=\"p\">:</span> <span class=\"n\">sympy</span><span class=\"o\">.</span><span class=\"n\">core</span><span class=\"o\">.</span><span class=\"n\">symbol</span><span class=\"o\">.</span><span class=\"n\">Symbol</span>,</span><span class=\"param\">\t<span class=\"n\">_symmetries</span><span class=\"p\">:</span> <span class=\"nb\">set</span><span class=\"p\">[</span><span class=\"nb\">frozenset</span><span class=\"p\">[</span><span class=\"nb\">str</span><span class=\"p\">]]</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">_stride</span><span class=\"p\">:</span> <span class=\"nb\">int</span> <span class=\"o\">=</span> <span class=\"mi\">1</span>,</span><span class=\"param\">\t<span class=\"o\">**</span><span class=\"n\">shape1</span><span class=\"p\">:</span> <span class=\"n\">sympy</span><span class=\"o\">.</span><span class=\"n\">core</span><span class=\"o\">.</span><span class=\"n\">symbol</span><span class=\"o\">.</span><span class=\"n\">Symbol</span></span>)</span>"}, "tensorgrad.functions.Convolution.stride": {"fullname": "tensorgrad.functions.Convolution.stride", "modulename": "tensorgrad.functions", "qualname": "Convolution.stride", "kind": "variable", "doc": "<p></p>\n"}, "tensorgrad.functions.Reshape": {"fullname": "tensorgrad.functions.Reshape", "modulename": "tensorgrad.functions", "qualname": "Reshape", "kind": "class", "doc": "<p>Just the identity matrices, but with a different shape.</p>\n", "bases": "tensorgrad.tensor.Constant"}, "tensorgrad.imgtools": {"fullname": "tensorgrad.imgtools", "modulename": "tensorgrad.imgtools", "kind": "module", "doc": "<p></p>\n"}, "tensorgrad.imgtools.compile_latex": {"fullname": "tensorgrad.imgtools.compile_latex", "modulename": "tensorgrad.imgtools", "qualname": "compile_latex", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">latex_code</span>, </span><span class=\"param\"><span class=\"n\">suffix</span><span class=\"o\">=</span><span class=\"s1\">&#39;&#39;</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, "tensorgrad.imgtools.combine_images_vertically": {"fullname": "tensorgrad.imgtools.combine_images_vertically", "modulename": "tensorgrad.imgtools", "qualname": "combine_images_vertically", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"n\">image_paths</span>,</span><span class=\"param\">\t<span class=\"n\">padding</span><span class=\"o\">=</span><span class=\"mi\">10</span>,</span><span class=\"param\">\t<span class=\"n\">line_padding</span><span class=\"o\">=</span><span class=\"mi\">5</span>,</span><span class=\"param\">\t<span class=\"n\">background_color</span><span class=\"o\">=</span><span class=\"s1\">&#39;white&#39;</span>,</span><span class=\"param\">\t<span class=\"n\">line_color</span><span class=\"o\">=</span><span class=\"s1\">&#39;black&#39;</span>,</span><span class=\"param\">\t<span class=\"n\">line_width</span><span class=\"o\">=</span><span class=\"mi\">2</span>,</span><span class=\"param\">\t<span class=\"n\">output_path</span><span class=\"o\">=</span><span class=\"s1\">&#39;combined_image.png&#39;</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, "tensorgrad.imgtools.save_as_image": {"fullname": "tensorgrad.imgtools.save_as_image", "modulename": "tensorgrad.imgtools", "qualname": "save_as_image", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">expr</span>, </span><span class=\"param\"><span class=\"n\">path</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, "tensorgrad.imgtools.save_steps_old": {"fullname": "tensorgrad.imgtools.save_steps_old", "modulename": "tensorgrad.imgtools", "qualname": "save_steps_old", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">expr</span>, </span><span class=\"param\"><span class=\"n\">min_steps</span><span class=\"o\">=</span><span class=\"kc\">None</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, "tensorgrad.imgtools.save_steps": {"fullname": "tensorgrad.imgtools.save_steps", "modulename": "tensorgrad.imgtools", "qualname": "save_steps", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">expr</span>, </span><span class=\"param\"><span class=\"n\">slow_grad</span><span class=\"o\">=</span><span class=\"kc\">False</span>, </span><span class=\"param\"><span class=\"n\">output_path</span><span class=\"o\">=</span><span class=\"s1\">&#39;steps.png&#39;</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, "tensorgrad.imgtools.draw_structural_graph": {"fullname": "tensorgrad.imgtools.draw_structural_graph", "modulename": "tensorgrad.imgtools", "qualname": "draw_structural_graph", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">tensor</span>, </span><span class=\"param\"><span class=\"nb\">iter</span><span class=\"o\">=</span><span class=\"mi\">50</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, "tensorgrad.tensor": {"fullname": "tensorgrad.tensor", "modulename": "tensorgrad.tensor", "kind": "module", "doc": "<p></p>\n"}, "tensorgrad.tensor.TensorMeta": {"fullname": "tensorgrad.tensor.TensorMeta", "modulename": "tensorgrad.tensor", "qualname": "TensorMeta", "kind": "class", "doc": "<p>Metaclass for defining Abstract Base Classes (ABCs).</p>\n\n<p>Use this metaclass to create an ABC.  An ABC can be subclassed\ndirectly, and then acts as a mix-in class.  You can also register\nunrelated concrete classes (even built-in classes) and unrelated\nABCs as 'virtual subclasses' -- these and their descendants will\nbe considered subclasses of the registering ABC by the built-in\nissubclass() function, but the registering ABC won't show up in\ntheir MRO (Method Resolution Order) nor will method\nimplementations defined by the registering ABC be callable (not\neven via super()).</p>\n", "bases": "abc.ABCMeta"}, "tensorgrad.tensor.Tensor": {"fullname": "tensorgrad.tensor.Tensor", "modulename": "tensorgrad.tensor", "qualname": "Tensor", "kind": "class", "doc": "<p></p>\n"}, "tensorgrad.tensor.Tensor.__init__": {"fullname": "tensorgrad.tensor.Tensor.__init__", "modulename": "tensorgrad.tensor", "qualname": "Tensor.__init__", "kind": "function", "doc": "<p>Calling Tensor(...) is a shortcut to wrapping the argument in a tensor.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"o\">*</span><span class=\"n\">args</span>, </span><span class=\"param\"><span class=\"o\">**</span><span class=\"n\">kwargs</span></span>)</span>"}, "tensorgrad.tensor.Tensor.edges": {"fullname": "tensorgrad.tensor.Tensor.edges", "modulename": "tensorgrad.tensor", "qualname": "Tensor.edges", "kind": "variable", "doc": "<p>Returns an _ordered_ set of edge names</p>\n", "annotation": ": set[str]"}, "tensorgrad.tensor.Tensor.shape": {"fullname": "tensorgrad.tensor.Tensor.shape", "modulename": "tensorgrad.tensor", "qualname": "Tensor.shape", "kind": "variable", "doc": "<p></p>\n", "annotation": ": dict[str, sympy.core.symbol.Symbol]"}, "tensorgrad.tensor.Tensor.order": {"fullname": "tensorgrad.tensor.Tensor.order", "modulename": "tensorgrad.tensor", "qualname": "Tensor.order", "kind": "variable", "doc": "<p>The number of edges the tensor has. Same as ndim in torch/numpy</p>\n", "annotation": ": int"}, "tensorgrad.tensor.Tensor.grad": {"fullname": "tensorgrad.tensor.Tensor.grad", "modulename": "tensorgrad.tensor", "qualname": "Tensor.grad", "kind": "function", "doc": "<p>Take the derivative of this tensor with respect to the variable x.</p>\n\n<p>Args:\n    x: The variable to take the derivative with respect to.\n    new_names: Optional list of names to use for the new edges created by the derivative.\n        If not provided, new names will be generated based on the edges of x.</p>\n\n<p>Note:\n    Pushes the derivative one step through the tensor.\n    If you want to push it all the way through, use .simplify().</p>\n\n<p>Returns:\n    The tensor representing the derivative.</p>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"bp\">self</span>,</span><span class=\"param\">\t<span class=\"n\">x</span><span class=\"p\">:</span> <span class=\"n\">tensorgrad</span><span class=\"o\">.</span><span class=\"n\">tensor</span><span class=\"o\">.</span><span class=\"n\">Variable</span>,</span><span class=\"param\">\t<span class=\"n\">new_names</span><span class=\"p\">:</span> <span class=\"n\">Optional</span><span class=\"p\">[</span><span class=\"nb\">dict</span><span class=\"p\">[</span><span class=\"nb\">str</span><span class=\"p\">,</span> <span class=\"nb\">str</span><span class=\"p\">]]</span> <span class=\"o\">=</span> <span class=\"kc\">None</span></span><span class=\"return-annotation\">) -> <span class=\"n\">tensorgrad</span><span class=\"o\">.</span><span class=\"n\">tensor</span><span class=\"o\">.</span><span class=\"n\">Tensor</span>:</span></span>", "funcdef": "def"}, "tensorgrad.tensor.Tensor.rename": {"fullname": "tensorgrad.tensor.Tensor.rename", "modulename": "tensorgrad.tensor", "qualname": "Tensor.rename", "kind": "function", "doc": "<p>Rename free edges of this tensor.</p>\n\n<p>Args:\n    kwargs: A dictionary mapping old edge names to new edge names.\n        Only free edges can be renamed. Inner edges may get renamed\n        if necessary to avoid clashes with the new free edge names.</p>\n\n<p>Returns:\n    A new tensor with the edges renamed according to kwargs.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"o\">**</span><span class=\"n\">kwargs</span><span class=\"p\">:</span> <span class=\"nb\">str</span></span><span class=\"return-annotation\">) -> <span class=\"n\">tensorgrad</span><span class=\"o\">.</span><span class=\"n\">tensor</span><span class=\"o\">.</span><span class=\"n\">Tensor</span>:</span></span>", "funcdef": "def"}, "tensorgrad.tensor.Tensor.simplify": {"fullname": "tensorgrad.tensor.Tensor.simplify", "modulename": "tensorgrad.tensor", "qualname": "Tensor.simplify", "kind": "function", "doc": "<p>Apply simplification rules to this tensor.</p>\n\n<p>This may rename inner edges but should never change the free edges.</p>\n\n<p>Args:\n    args: Optional dictionary of arguments controlling the simplification.</p>\n\n<p>Returns:\n    A simplified version of this tensor.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">args</span><span class=\"p\">:</span> <span class=\"nb\">dict</span><span class=\"p\">[</span><span class=\"nb\">str</span><span class=\"p\">,</span> <span class=\"n\">typing</span><span class=\"o\">.</span><span class=\"n\">Any</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"kc\">None</span></span><span class=\"return-annotation\">) -> <span class=\"n\">tensorgrad</span><span class=\"o\">.</span><span class=\"n\">tensor</span><span class=\"o\">.</span><span class=\"n\">Tensor</span>:</span></span>", "funcdef": "def"}, "tensorgrad.tensor.Tensor.full_simplify": {"fullname": "tensorgrad.tensor.Tensor.full_simplify", "modulename": "tensorgrad.tensor", "qualname": "Tensor.full_simplify", "kind": "function", "doc": "<p>Applies multiple simplification rules until the expression no longer changes</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">expand</span><span class=\"o\">=</span><span class=\"kc\">True</span></span><span class=\"return-annotation\">) -> <span class=\"n\">tensorgrad</span><span class=\"o\">.</span><span class=\"n\">tensor</span><span class=\"o\">.</span><span class=\"n\">Tensor</span>:</span></span>", "funcdef": "def"}, "tensorgrad.tensor.Tensor.weisfeiler_lehman": {"fullname": "tensorgrad.tensor.Tensor.weisfeiler_lehman", "modulename": "tensorgrad.tensor", "qualname": "Tensor.weisfeiler_lehman", "kind": "variable", "doc": "<p>Hexadecimal string for WL-hash of the input graph.</p>\n", "annotation": ": str"}, "tensorgrad.tensor.Tensor.depends_on": {"fullname": "tensorgrad.tensor.Tensor.depends_on", "modulename": "tensorgrad.tensor", "qualname": "Tensor.depends_on", "kind": "function", "doc": "<p>Check if this tensor depends on the variable x.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">x</span><span class=\"p\">:</span> <span class=\"n\">tensorgrad</span><span class=\"o\">.</span><span class=\"n\">tensor</span><span class=\"o\">.</span><span class=\"n\">Variable</span></span><span class=\"return-annotation\">) -> <span class=\"nb\">bool</span>:</span></span>", "funcdef": "def"}, "tensorgrad.tensor.Tensor.structural_graph": {"fullname": "tensorgrad.tensor.Tensor.structural_graph", "modulename": "tensorgrad.tensor", "qualname": "Tensor.structural_graph", "kind": "function", "doc": "<p>Create a graph representation of the tensor, which can be used for isomorphism testing.</p>\n\n<p>Returns:\n    A tuple with the following values:\n    - A NetworkX directed graph.\n        - Each node in the top tree is labeled with the producing tensor.\n        - Use name=hashable to label vertices\n    - \"edges\", a dict of edge_name -> node id\n    - Node 0 should be the root</p>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"bp\">self</span></span><span class=\"return-annotation\">) -> <span class=\"nb\">tuple</span><span class=\"p\">[</span><span class=\"n\">networkx</span><span class=\"o\">.</span><span class=\"n\">classes</span><span class=\"o\">.</span><span class=\"n\">multidigraph</span><span class=\"o\">.</span><span class=\"n\">MultiDiGraph</span><span class=\"p\">,</span> <span class=\"nb\">dict</span><span class=\"p\">[</span><span class=\"nb\">str</span><span class=\"p\">,</span> <span class=\"nb\">int</span><span class=\"p\">]]</span>:</span></span>", "funcdef": "def"}, "tensorgrad.tensor.Tensor.edge_structural_graph": {"fullname": "tensorgrad.tensor.Tensor.edge_structural_graph", "modulename": "tensorgrad.tensor", "qualname": "Tensor.edge_structural_graph", "kind": "function", "doc": "<p>Build a structural graph of the tensor with dummy nodes for outer edges.</p>\n\n<p>Args:\n    match_edges: If True the names are used to match edges.\n    edge_names: An optional mapping of edge names.</p>\n\n<p>Returns:\n    A tuple (G, edge_list) where G is the graph and edge_list is the list of edge names.</p>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"bp\">self</span>,</span><span class=\"param\">\t<span class=\"n\">match_edges</span><span class=\"p\">:</span> <span class=\"nb\">bool</span> <span class=\"o\">=</span> <span class=\"kc\">True</span>,</span><span class=\"param\">\t<span class=\"n\">edge_names</span><span class=\"p\">:</span> <span class=\"n\">Optional</span><span class=\"p\">[</span><span class=\"nb\">dict</span><span class=\"p\">[</span><span class=\"nb\">str</span><span class=\"p\">,</span> <span class=\"nb\">str</span><span class=\"p\">]]</span> <span class=\"o\">=</span> <span class=\"kc\">None</span></span><span class=\"return-annotation\">) -> <span class=\"nb\">tuple</span><span class=\"p\">[</span><span class=\"n\">networkx</span><span class=\"o\">.</span><span class=\"n\">classes</span><span class=\"o\">.</span><span class=\"n\">multidigraph</span><span class=\"o\">.</span><span class=\"n\">MultiDiGraph</span><span class=\"p\">,</span> <span class=\"nb\">list</span><span class=\"p\">[</span><span class=\"nb\">str</span><span class=\"p\">]]</span>:</span></span>", "funcdef": "def"}, "tensorgrad.tensor.Tensor.graph_to_string": {"fullname": "tensorgrad.tensor.Tensor.graph_to_string", "modulename": "tensorgrad.tensor", "qualname": "Tensor.graph_to_string", "kind": "function", "doc": "<p>Returns an ASCII tree-like representation of the structural graph.</p>\n\n<p>Returns:\n    A string showing the graph structure.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span></span><span class=\"return-annotation\">) -> <span class=\"nb\">str</span>:</span></span>", "funcdef": "def"}, "tensorgrad.tensor.Tensor.is_isomorphic": {"fullname": "tensorgrad.tensor.Tensor.is_isomorphic", "modulename": "tensorgrad.tensor", "qualname": "Tensor.is_isomorphic", "kind": "function", "doc": "<p>Test whether this tensor is isomorphic to another tensor.</p>\n\n<p>Args:\n    other: The tensor to compare with.\n    match_edges: Whether to require a matching of edge names.\n    edge_names: Optional mapping to use for edge renaming.</p>\n\n<p>Returns:\n    True if the tensors are isomorphic; False otherwise.</p>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"bp\">self</span>,</span><span class=\"param\">\t<span class=\"n\">other</span><span class=\"p\">:</span> <span class=\"n\">tensorgrad</span><span class=\"o\">.</span><span class=\"n\">tensor</span><span class=\"o\">.</span><span class=\"n\">Tensor</span>,</span><span class=\"param\">\t<span class=\"n\">match_edges</span><span class=\"p\">:</span> <span class=\"nb\">bool</span> <span class=\"o\">=</span> <span class=\"kc\">False</span>,</span><span class=\"param\">\t<span class=\"n\">edge_names</span><span class=\"p\">:</span> <span class=\"kc\">None</span> <span class=\"o\">|</span> <span class=\"nb\">dict</span><span class=\"p\">[</span><span class=\"nb\">str</span><span class=\"p\">,</span> <span class=\"nb\">str</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"kc\">None</span></span><span class=\"return-annotation\">) -> <span class=\"nb\">bool</span>:</span></span>", "funcdef": "def"}, "tensorgrad.tensor.Tensor.isomorphisms": {"fullname": "tensorgrad.tensor.Tensor.isomorphisms", "modulename": "tensorgrad.tensor", "qualname": "Tensor.isomorphisms", "kind": "function", "doc": "<p>Yield all isomorphisms (edge renamings) between self and other.</p>\n\n<p>Args:\n    other: The other tensor to compare.</p>\n\n<p>Yields:\n    Dictionaries mapping edge names in self to edge names in other.</p>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"bp\">self</span>,</span><span class=\"param\">\t<span class=\"n\">other</span><span class=\"p\">:</span> <span class=\"n\">tensorgrad</span><span class=\"o\">.</span><span class=\"n\">tensor</span><span class=\"o\">.</span><span class=\"n\">Tensor</span></span><span class=\"return-annotation\">) -> <span class=\"n\">Generator</span><span class=\"p\">[</span><span class=\"nb\">dict</span><span class=\"p\">[</span><span class=\"nb\">str</span><span class=\"p\">,</span> <span class=\"nb\">str</span><span class=\"p\">],</span> <span class=\"n\">NoneType</span><span class=\"p\">,</span> <span class=\"n\">NoneType</span><span class=\"p\">]</span>:</span></span>", "funcdef": "def"}, "tensorgrad.tensor.Tensor.symmetries": {"fullname": "tensorgrad.tensor.Tensor.symmetries", "modulename": "tensorgrad.tensor", "qualname": "Tensor.symmetries", "kind": "variable", "doc": "<p>Return the orbits of the automorphism group of the tensor.</p>\n", "annotation": ": set[frozenset[str]]"}, "tensorgrad.tensor.Variable": {"fullname": "tensorgrad.tensor.Variable", "modulename": "tensorgrad.tensor", "qualname": "Variable", "kind": "class", "doc": "<p></p>\n", "bases": "Tensor"}, "tensorgrad.tensor.Variable.__init__": {"fullname": "tensorgrad.tensor.Variable.__init__", "modulename": "tensorgrad.tensor", "qualname": "Variable.__init__", "kind": "function", "doc": "<p>A tensor holding a variable.</p>\n\n<p>Args:\n    name: The name of the variable.\n    shape0: Positional Sympy symbols for dimensions.\n    _symmetries: Optional symmetries (as a string or set of frozensets).\n    shape1: Keyword arguments for dimensions.</p>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"n\">name</span><span class=\"p\">:</span> <span class=\"nb\">str</span>,</span><span class=\"param\">\t<span class=\"o\">*</span><span class=\"n\">shape0</span><span class=\"p\">:</span> <span class=\"n\">sympy</span><span class=\"o\">.</span><span class=\"n\">core</span><span class=\"o\">.</span><span class=\"n\">symbol</span><span class=\"o\">.</span><span class=\"n\">Symbol</span>,</span><span class=\"param\">\t<span class=\"n\">_symmetries</span><span class=\"p\">:</span> <span class=\"kc\">None</span> <span class=\"o\">|</span> <span class=\"nb\">str</span> <span class=\"o\">|</span> <span class=\"nb\">set</span><span class=\"p\">[</span><span class=\"nb\">frozenset</span><span class=\"p\">[</span><span class=\"nb\">str</span><span class=\"p\">]]</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"o\">**</span><span class=\"n\">shape1</span><span class=\"p\">:</span> <span class=\"n\">sympy</span><span class=\"o\">.</span><span class=\"n\">core</span><span class=\"o\">.</span><span class=\"n\">symbol</span><span class=\"o\">.</span><span class=\"n\">Symbol</span></span>)</span>"}, "tensorgrad.tensor.Variable.name": {"fullname": "tensorgrad.tensor.Variable.name", "modulename": "tensorgrad.tensor", "qualname": "Variable.name", "kind": "variable", "doc": "<p></p>\n"}, "tensorgrad.tensor.Variable.with_symmetries": {"fullname": "tensorgrad.tensor.Variable.with_symmetries", "modulename": "tensorgrad.tensor", "qualname": "Variable.with_symmetries", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"bp\">self</span>,</span><span class=\"param\">\t<span class=\"n\">symmetries</span><span class=\"p\">:</span> <span class=\"nb\">str</span> <span class=\"o\">|</span> <span class=\"nb\">set</span><span class=\"p\">[</span><span class=\"nb\">frozenset</span><span class=\"p\">[</span><span class=\"nb\">str</span><span class=\"p\">]]</span></span><span class=\"return-annotation\">) -> <span class=\"n\">tensorgrad</span><span class=\"o\">.</span><span class=\"n\">tensor</span><span class=\"o\">.</span><span class=\"n\">Variable</span>:</span></span>", "funcdef": "def"}, "tensorgrad.tensor.Variable.structural_graph": {"fullname": "tensorgrad.tensor.Variable.structural_graph", "modulename": "tensorgrad.tensor", "qualname": "Variable.structural_graph", "kind": "function", "doc": "<p>Create a graph representation of the tensor, which can be used for isomorphism testing.</p>\n\n<p>Returns:\n    A tuple with the following values:\n    - A NetworkX directed graph.\n        - Each node in the top tree is labeled with the producing tensor.\n        - Use name=hashable to label vertices\n    - \"edges\", a dict of edge_name -> node id\n    - Node 0 should be the root</p>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"bp\">self</span></span><span class=\"return-annotation\">) -> <span class=\"nb\">tuple</span><span class=\"p\">[</span><span class=\"n\">networkx</span><span class=\"o\">.</span><span class=\"n\">classes</span><span class=\"o\">.</span><span class=\"n\">multidigraph</span><span class=\"o\">.</span><span class=\"n\">MultiDiGraph</span><span class=\"p\">,</span> <span class=\"nb\">dict</span><span class=\"p\">[</span><span class=\"nb\">str</span><span class=\"p\">,</span> <span class=\"nb\">int</span><span class=\"p\">]]</span>:</span></span>", "funcdef": "def"}, "tensorgrad.tensor.Variable.depends_on": {"fullname": "tensorgrad.tensor.Variable.depends_on", "modulename": "tensorgrad.tensor", "qualname": "Variable.depends_on", "kind": "function", "doc": "<p>Check if this tensor depends on the variable x.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">x</span><span class=\"p\">:</span> <span class=\"n\">tensorgrad</span><span class=\"o\">.</span><span class=\"n\">tensor</span><span class=\"o\">.</span><span class=\"n\">Variable</span></span><span class=\"return-annotation\">) -> <span class=\"nb\">bool</span>:</span></span>", "funcdef": "def"}, "tensorgrad.tensor.Rename": {"fullname": "tensorgrad.tensor.Rename", "modulename": "tensorgrad.tensor", "qualname": "Rename", "kind": "class", "doc": "<p>A tensor that renames the edges of an inner tensor.</p>\n\n<p>This is used to change free edge names (and sometimes inner edge names)\nwithout modifying the underlying contraction.</p>\n", "bases": "Tensor"}, "tensorgrad.tensor.Rename.__init__": {"fullname": "tensorgrad.tensor.Rename.__init__", "modulename": "tensorgrad.tensor", "qualname": "Rename.__init__", "kind": "function", "doc": "<p>Initialize a Rename tensor.</p>\n\n<p>Args:\n    inner: The tensor to be renamed.\n    rename: A dictionary mapping old edge names to new names.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">inner</span><span class=\"p\">:</span> <span class=\"n\">tensorgrad</span><span class=\"o\">.</span><span class=\"n\">tensor</span><span class=\"o\">.</span><span class=\"n\">Tensor</span>, </span><span class=\"param\"><span class=\"n\">rename</span><span class=\"p\">:</span> <span class=\"nb\">dict</span><span class=\"p\">[</span><span class=\"nb\">str</span><span class=\"p\">,</span> <span class=\"nb\">str</span><span class=\"p\">]</span></span>)</span>"}, "tensorgrad.tensor.Rename.name": {"fullname": "tensorgrad.tensor.Rename.name", "modulename": "tensorgrad.tensor", "qualname": "Rename.name", "kind": "variable", "doc": "<p></p>\n"}, "tensorgrad.tensor.Rename.tensor": {"fullname": "tensorgrad.tensor.Rename.tensor", "modulename": "tensorgrad.tensor", "qualname": "Rename.tensor", "kind": "variable", "doc": "<p></p>\n"}, "tensorgrad.tensor.Rename.mapping": {"fullname": "tensorgrad.tensor.Rename.mapping", "modulename": "tensorgrad.tensor", "qualname": "Rename.mapping", "kind": "variable", "doc": "<p></p>\n"}, "tensorgrad.tensor.Rename.depends_on": {"fullname": "tensorgrad.tensor.Rename.depends_on", "modulename": "tensorgrad.tensor", "qualname": "Rename.depends_on", "kind": "function", "doc": "<p>Check if this tensor depends on the variable x.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">x</span><span class=\"p\">:</span> <span class=\"n\">tensorgrad</span><span class=\"o\">.</span><span class=\"n\">tensor</span><span class=\"o\">.</span><span class=\"n\">Variable</span></span><span class=\"return-annotation\">) -> <span class=\"nb\">bool</span>:</span></span>", "funcdef": "def"}, "tensorgrad.tensor.Rename.merge_renames": {"fullname": "tensorgrad.tensor.Rename.merge_renames", "modulename": "tensorgrad.tensor", "qualname": "Rename.merge_renames", "kind": "function", "doc": "<p>Merge several renaming dictionaries into one.</p>\n\n<p>Args:\n    *renames: Arbitrary number of renaming dictionaries.</p>\n\n<p>Returns:\n    A single dictionary representing the merged renaming.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">cls</span>, </span><span class=\"param\"><span class=\"o\">*</span><span class=\"n\">renames</span><span class=\"p\">:</span> <span class=\"nb\">dict</span><span class=\"p\">[</span><span class=\"nb\">str</span><span class=\"p\">,</span> <span class=\"nb\">str</span><span class=\"p\">]</span></span><span class=\"return-annotation\">) -> <span class=\"nb\">dict</span><span class=\"p\">[</span><span class=\"nb\">str</span><span class=\"p\">,</span> <span class=\"nb\">str</span><span class=\"p\">]</span>:</span></span>", "funcdef": "def"}, "tensorgrad.tensor.Rename.structural_graph": {"fullname": "tensorgrad.tensor.Rename.structural_graph", "modulename": "tensorgrad.tensor", "qualname": "Rename.structural_graph", "kind": "function", "doc": "<p>Create a graph representation of the tensor, which can be used for isomorphism testing.</p>\n\n<p>Returns:\n    A tuple with the following values:\n    - A NetworkX directed graph.\n        - Each node in the top tree is labeled with the producing tensor.\n        - Use name=hashable to label vertices\n    - \"edges\", a dict of edge_name -> node id\n    - Node 0 should be the root</p>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"bp\">self</span></span><span class=\"return-annotation\">) -> <span class=\"nb\">tuple</span><span class=\"p\">[</span><span class=\"n\">networkx</span><span class=\"o\">.</span><span class=\"n\">classes</span><span class=\"o\">.</span><span class=\"n\">multidigraph</span><span class=\"o\">.</span><span class=\"n\">MultiDiGraph</span><span class=\"p\">,</span> <span class=\"nb\">dict</span><span class=\"p\">[</span><span class=\"nb\">str</span><span class=\"p\">,</span> <span class=\"nb\">int</span><span class=\"p\">]]</span>:</span></span>", "funcdef": "def"}, "tensorgrad.tensor.Constant": {"fullname": "tensorgrad.tensor.Constant", "modulename": "tensorgrad.tensor", "qualname": "Constant", "kind": "class", "doc": "<p>An abstract tensor that represents a constant (non-variable) tensor.</p>\n", "bases": "Tensor, abc.ABC"}, "tensorgrad.tensor.Constant.__init__": {"fullname": "tensorgrad.tensor.Constant.__init__", "modulename": "tensorgrad.tensor", "qualname": "Constant.__init__", "kind": "function", "doc": "<p>A constant tensor with the given edges.</p>\n\n<p>Args:\n    shape0: Positional dimensions (as Sympy symbols).\n    _symmetries: Optional symmetry groups.\n    shape1: Keyword dimensions.</p>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"o\">*</span><span class=\"n\">shape0</span><span class=\"p\">:</span> <span class=\"n\">sympy</span><span class=\"o\">.</span><span class=\"n\">core</span><span class=\"o\">.</span><span class=\"n\">symbol</span><span class=\"o\">.</span><span class=\"n\">Symbol</span>,</span><span class=\"param\">\t<span class=\"n\">_symmetries</span><span class=\"p\">:</span> <span class=\"n\">Optional</span><span class=\"p\">[</span><span class=\"nb\">set</span><span class=\"p\">[</span><span class=\"nb\">frozenset</span><span class=\"p\">[</span><span class=\"nb\">str</span><span class=\"p\">]]]</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"o\">**</span><span class=\"n\">shape1</span><span class=\"p\">:</span> <span class=\"n\">sympy</span><span class=\"o\">.</span><span class=\"n\">core</span><span class=\"o\">.</span><span class=\"n\">symbol</span><span class=\"o\">.</span><span class=\"n\">Symbol</span></span>)</span>"}, "tensorgrad.tensor.Constant.name": {"fullname": "tensorgrad.tensor.Constant.name", "modulename": "tensorgrad.tensor", "qualname": "Constant.name", "kind": "variable", "doc": "<p></p>\n"}, "tensorgrad.tensor.Constant.with_symmetries": {"fullname": "tensorgrad.tensor.Constant.with_symmetries", "modulename": "tensorgrad.tensor", "qualname": "Constant.with_symmetries", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"bp\">self</span>,</span><span class=\"param\">\t<span class=\"n\">symmetries</span><span class=\"p\">:</span> <span class=\"nb\">str</span> <span class=\"o\">|</span> <span class=\"nb\">set</span><span class=\"p\">[</span><span class=\"nb\">frozenset</span><span class=\"p\">[</span><span class=\"nb\">str</span><span class=\"p\">]]</span></span><span class=\"return-annotation\">) -> <span class=\"n\">tensorgrad</span><span class=\"o\">.</span><span class=\"n\">tensor</span><span class=\"o\">.</span><span class=\"n\">Constant</span>:</span></span>", "funcdef": "def"}, "tensorgrad.tensor.Constant.structural_graph": {"fullname": "tensorgrad.tensor.Constant.structural_graph", "modulename": "tensorgrad.tensor", "qualname": "Constant.structural_graph", "kind": "function", "doc": "<p>Create a graph representation of the tensor, which can be used for isomorphism testing.</p>\n\n<p>Returns:\n    A tuple with the following values:\n    - A NetworkX directed graph.\n        - Each node in the top tree is labeled with the producing tensor.\n        - Use name=hashable to label vertices\n    - \"edges\", a dict of edge_name -> node id\n    - Node 0 should be the root</p>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"bp\">self</span></span><span class=\"return-annotation\">) -> <span class=\"nb\">tuple</span><span class=\"p\">[</span><span class=\"n\">networkx</span><span class=\"o\">.</span><span class=\"n\">classes</span><span class=\"o\">.</span><span class=\"n\">multidigraph</span><span class=\"o\">.</span><span class=\"n\">MultiDiGraph</span><span class=\"p\">,</span> <span class=\"nb\">dict</span><span class=\"p\">[</span><span class=\"nb\">str</span><span class=\"p\">,</span> <span class=\"nb\">int</span><span class=\"p\">]]</span>:</span></span>", "funcdef": "def"}, "tensorgrad.tensor.Constant.depends_on": {"fullname": "tensorgrad.tensor.Constant.depends_on", "modulename": "tensorgrad.tensor", "qualname": "Constant.depends_on", "kind": "function", "doc": "<p>Check if this tensor depends on the variable x.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">x</span><span class=\"p\">:</span> <span class=\"n\">tensorgrad</span><span class=\"o\">.</span><span class=\"n\">tensor</span><span class=\"o\">.</span><span class=\"n\">Variable</span></span><span class=\"return-annotation\">) -> <span class=\"nb\">bool</span>:</span></span>", "funcdef": "def"}, "tensorgrad.tensor.Delta": {"fullname": "tensorgrad.tensor.Delta", "modulename": "tensorgrad.tensor", "qualname": "Delta", "kind": "class", "doc": "<p>The \"Delta\" tensor is defined by C_{i,j,k} = 1 if i == j == k, else 0\nOr alternatively as \u0394\u2099 = \u2211\u2093 (e\u2093)\u2297\u207f, where are e_i are basis vectors\nFor order 2, this is the identity matrix.\n    Note: For higher order, the identity tensor is the product of n identity matrices,\n    (order 2 Delta's), not the order-n Delta tensor.\nFor order 0, the Delta tensor is defined as |n|, where n is the size/dimension of the tensor.</p>\n", "bases": "Constant"}, "tensorgrad.tensor.Delta.__init__": {"fullname": "tensorgrad.tensor.Delta.__init__", "modulename": "tensorgrad.tensor", "qualname": "Delta.__init__", "kind": "function", "doc": "<p>Initialize a Delta tensor.</p>\n\n<p>Args:\n    size: The size (dimension) of the tensor.\n    edges: The names of the tensor edges.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">size</span><span class=\"p\">:</span> <span class=\"n\">sympy</span><span class=\"o\">.</span><span class=\"n\">core</span><span class=\"o\">.</span><span class=\"n\">symbol</span><span class=\"o\">.</span><span class=\"n\">Symbol</span>, </span><span class=\"param\"><span class=\"o\">*</span><span class=\"n\">edges</span><span class=\"p\">:</span> <span class=\"nb\">str</span></span>)</span>"}, "tensorgrad.tensor.Delta.size": {"fullname": "tensorgrad.tensor.Delta.size", "modulename": "tensorgrad.tensor", "qualname": "Delta.size", "kind": "variable", "doc": "<p></p>\n", "annotation": ": sympy.core.symbol.Symbol"}, "tensorgrad.tensor.Delta.simplify_outer": {"fullname": "tensorgrad.tensor.Delta.simplify_outer", "modulename": "tensorgrad.tensor", "qualname": "Delta.simplify_outer", "kind": "function", "doc": "<p>Simplifies a list of tensors assumed to be a product.</p>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"bp\">cls</span>,</span><span class=\"param\">\t<span class=\"n\">tensors</span><span class=\"p\">:</span> <span class=\"nb\">list</span><span class=\"p\">[</span><span class=\"n\">tensorgrad</span><span class=\"o\">.</span><span class=\"n\">tensor</span><span class=\"o\">.</span><span class=\"n\">Tensor</span><span class=\"p\">]</span></span><span class=\"return-annotation\">) -> <span class=\"nb\">list</span><span class=\"p\">[</span><span class=\"n\">tensorgrad</span><span class=\"o\">.</span><span class=\"n\">tensor</span><span class=\"o\">.</span><span class=\"n\">Tensor</span><span class=\"p\">]</span>:</span></span>", "funcdef": "def"}, "tensorgrad.tensor.Delta.structural_graph": {"fullname": "tensorgrad.tensor.Delta.structural_graph", "modulename": "tensorgrad.tensor", "qualname": "Delta.structural_graph", "kind": "function", "doc": "<p>Create a graph representation of the tensor, which can be used for isomorphism testing.</p>\n\n<p>Returns:\n    A tuple with the following values:\n    - A NetworkX directed graph.\n        - Each node in the top tree is labeled with the producing tensor.\n        - Use name=hashable to label vertices\n    - \"edges\", a dict of edge_name -> node id\n    - Node 0 should be the root</p>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"bp\">self</span></span><span class=\"return-annotation\">) -> <span class=\"nb\">tuple</span><span class=\"p\">[</span><span class=\"n\">networkx</span><span class=\"o\">.</span><span class=\"n\">classes</span><span class=\"o\">.</span><span class=\"n\">multidigraph</span><span class=\"o\">.</span><span class=\"n\">MultiDiGraph</span><span class=\"p\">,</span> <span class=\"nb\">dict</span><span class=\"p\">[</span><span class=\"nb\">str</span><span class=\"p\">,</span> <span class=\"nb\">int</span><span class=\"p\">]]</span>:</span></span>", "funcdef": "def"}, "tensorgrad.tensor.Zero": {"fullname": "tensorgrad.tensor.Zero", "modulename": "tensorgrad.tensor", "qualname": "Zero", "kind": "class", "doc": "<p>Matrix such that Z_{i,j,k} = 0 for all i, j, k</p>\n", "bases": "Constant"}, "tensorgrad.tensor.Ones": {"fullname": "tensorgrad.tensor.Ones", "modulename": "tensorgrad.tensor", "qualname": "Ones", "kind": "function", "doc": "<p>Matrix such that O_{i,j,k} = 1 for all i, j, k</p>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"o\">*</span><span class=\"n\">shape0</span><span class=\"p\">:</span> <span class=\"n\">sympy</span><span class=\"o\">.</span><span class=\"n\">core</span><span class=\"o\">.</span><span class=\"n\">symbol</span><span class=\"o\">.</span><span class=\"n\">Symbol</span>,</span><span class=\"param\">\t<span class=\"o\">**</span><span class=\"n\">shape1</span><span class=\"p\">:</span> <span class=\"n\">sympy</span><span class=\"o\">.</span><span class=\"n\">core</span><span class=\"o\">.</span><span class=\"n\">symbol</span><span class=\"o\">.</span><span class=\"n\">Symbol</span></span><span class=\"return-annotation\">) -> <span class=\"n\">tensorgrad</span><span class=\"o\">.</span><span class=\"n\">tensor</span><span class=\"o\">.</span><span class=\"n\">Tensor</span>:</span></span>", "funcdef": "def"}, "tensorgrad.tensor.FunctionSignature": {"fullname": "tensorgrad.tensor.FunctionSignature", "modulename": "tensorgrad.tensor", "qualname": "FunctionSignature", "kind": "class", "doc": "<p>An abstract base class representing a function that takes one or more tensors as input\nand produces a new tensor as output.</p>\n\n<p>This class is designed to capture the symbolic structure of a tensor operation by\nlisting its output edges (<code>edges</code>) and the input edges (<code>inputs</code>) each of its input\ntensors must provide. Subclasses are required to implement the <code>eval</code> and <code>derivative</code>\nmethods, while <code>simplify</code> has a default no-op implementation that may be overridden.</p>\n\n<h2 id=\"parameters\">Parameters</h2>\n\n<p>name : str\n    A descriptive name for the function (e.g., \"matmul\", \"unfold\", \"ce\", \"attention\").\nedges : Set[str]\n    The output edges of this function. These are string identifiers that symbolically\n    represent the dimensions of the output tensor.\ninputs : tuple[Set[str], ...]\n    A tuple where each element is a set of edges required from one input tensor.\n    For example, if the first input tensor must share dimension edges {\"b\", \"i\"} and\n    the second input tensor must share dimension edges {\"b\", \"j\"}, then\n    <code>inputs = ({\"b\", \"i\"}, {\"b\", \"j\"})</code>.</p>\n\n<h2 id=\"examples\">Examples</h2>\n\n<p>1) <strong>Matrix multiplication</strong>:\n   Suppose <code>x</code> has shape (b, i, j) and <code>y</code> has shape (b, j, k). We might define:</p>\n\n<p>```python\nf = MatmulSignature(\n    name=\"matmul\",\n    edges={\"i\", \"k\"},\n    inputs=({\"i\", \"j\"}, {\"j\", \"k\"})\n)</p>\n\n<pre><code>\n   Here, the function consumes edges `i` and `j` from `x` and edges `j` and `k` from `y`.\n   The edge `b` is shared between the two inputs and broadcasted. The output tensor\n   eventually has shape (b, i, k).\n\n2) **Unfold**:\n   Suppose we have a tensor `x` with shape (b, c, w, h) and we want to produce a series\n   of patches. We might define:\n\n   ```python\nf = UnfoldSignature(\n    name=\"unfold\",\n    edges={\"patch\", \"c_out\", \"w_out\", \"h_out\"},\n    inputs=({\"c_in\", \"w_in\", \"h_in\"},)\n)\n</code></pre>\n\n<p>This function consumes edges <code>c, w, h</code> from <code>x</code> and introduces a new edge\n   named <code>patch</code> of size (w_in - w_out + 1)*(h_in - h_out + 1).</p>\n\n<p>3) <strong>Cross-entropy</strong>:\n   This is an example of a function that takes two inputs, for example logits and\n   probabilities. Suppose:</p>\n\n<ul>\n<li><code>x</code> has shape (b, logits)</li>\n<li><code>y</code> has shape (b, probs)</li>\n</ul>\n\n<p>We might define:</p>\n\n<p>```python\nf = CrossEntropySignature(\n    name=\"ce\",\n    edges={\"ce\"},\n    inputs=({\"logits\"}, {\"probs\"})\n)</p>\n\n<pre><code>\n   Both inputs share the batch edge ``b``. The new edge ``ce`` could represent the\n   cross-entropy output dimension (often scalar per example, so shape (b, ce)).\n\n4) **Multi-query Dot Product Attention**:\n   Suppose we have tensors:\n   - `q` with shape (b, n_q, d)\n   - `k` with shape (b, seq, d)\n   - `v` with shape (b, seq, d_out)\n\n   Conceptually, to compute multi-query attention:\n\n   - We form (b, n_q, seq) via a dot product of `q` and `k`.\n   - We apply a softmax to get (b, n_q, prob).\n   - We multiply by `v` to get (b, n_q, d_out).\n\n   A possible signature might be:\n\n   ```python\nf = AttentionSignature(\n    name=\"attention\",\n    edges={\"n_q\", \"d_out\"},\n    inputs=(\n        {\"n_q\", \"d\"},\n        {\"seq\", \"d\"},\n        {\"seq\", \"d_out\"},\n    )\n)\n</code></pre>\n\n<p>The edge <code>b</code> is shared among all inputs (broadcast). The final output\n   has shape (b, n_q, d_out).</p>\n", "bases": "abc.ABC"}, "tensorgrad.tensor.FunctionSignature.__init__": {"fullname": "tensorgrad.tensor.FunctionSignature.__init__", "modulename": "tensorgrad.tensor", "qualname": "FunctionSignature.__init__", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">name</span><span class=\"p\">:</span> <span class=\"nb\">str</span>, </span><span class=\"param\"><span class=\"n\">edges</span><span class=\"p\">:</span> <span class=\"nb\">set</span><span class=\"p\">[</span><span class=\"nb\">str</span><span class=\"p\">]</span>, </span><span class=\"param\"><span class=\"n\">inputs</span><span class=\"p\">:</span> <span class=\"nb\">tuple</span><span class=\"p\">[</span><span class=\"nb\">set</span><span class=\"p\">[</span><span class=\"nb\">str</span><span class=\"p\">],</span> <span class=\"o\">...</span><span class=\"p\">]</span></span>)</span>"}, "tensorgrad.tensor.FunctionSignature.name": {"fullname": "tensorgrad.tensor.FunctionSignature.name", "modulename": "tensorgrad.tensor", "qualname": "FunctionSignature.name", "kind": "variable", "doc": "<p></p>\n", "annotation": ": str"}, "tensorgrad.tensor.FunctionSignature.edges": {"fullname": "tensorgrad.tensor.FunctionSignature.edges", "modulename": "tensorgrad.tensor", "qualname": "FunctionSignature.edges", "kind": "variable", "doc": "<p></p>\n", "annotation": ": set[str]"}, "tensorgrad.tensor.FunctionSignature.inputs": {"fullname": "tensorgrad.tensor.FunctionSignature.inputs", "modulename": "tensorgrad.tensor", "qualname": "FunctionSignature.inputs", "kind": "variable", "doc": "<p></p>\n", "annotation": ": tuple[set[str], ...]"}, "tensorgrad.tensor.FunctionSignature.derivative": {"fullname": "tensorgrad.tensor.FunctionSignature.derivative", "modulename": "tensorgrad.tensor", "qualname": "FunctionSignature.derivative", "kind": "function", "doc": "<p>Returns a new FunctionSignature that represents the derivative\nwith respect to the i-th input, and where edges are created\naccording to <code>new_edges</code> a dict {old_name : new_name}.</p>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"bp\">self</span>,</span><span class=\"param\">\t<span class=\"n\">i</span><span class=\"p\">:</span> <span class=\"nb\">int</span>,</span><span class=\"param\">\t<span class=\"n\">new_edges</span><span class=\"p\">:</span> <span class=\"nb\">dict</span><span class=\"p\">[</span><span class=\"nb\">str</span><span class=\"p\">,</span> <span class=\"nb\">str</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"kc\">None</span></span><span class=\"return-annotation\">) -> <span class=\"n\">tensorgrad</span><span class=\"o\">.</span><span class=\"n\">tensor</span><span class=\"o\">.</span><span class=\"n\">FunctionSignature</span>:</span></span>", "funcdef": "def"}, "tensorgrad.tensor.FunctionSignature.simplify": {"fullname": "tensorgrad.tensor.FunctionSignature.simplify", "modulename": "tensorgrad.tensor", "qualname": "FunctionSignature.simplify", "kind": "function", "doc": "<p>Simplifies the Function tensor that uses this signature.\nDefault implementation returns <code>t</code> unchanged.\nSubclasses can override this method for custom simplifications.</p>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"bp\">self</span>,</span><span class=\"param\">\t<span class=\"n\">t</span><span class=\"p\">:</span> <span class=\"n\">tensorgrad</span><span class=\"o\">.</span><span class=\"n\">tensor</span><span class=\"o\">.</span><span class=\"n\">Function</span>,</span><span class=\"param\">\t<span class=\"n\">args</span><span class=\"p\">:</span> <span class=\"nb\">dict</span><span class=\"p\">[</span><span class=\"nb\">str</span><span class=\"p\">,</span> <span class=\"n\">typing</span><span class=\"o\">.</span><span class=\"n\">Any</span><span class=\"p\">]</span></span><span class=\"return-annotation\">) -> <span class=\"n\">tensorgrad</span><span class=\"o\">.</span><span class=\"n\">tensor</span><span class=\"o\">.</span><span class=\"n\">Tensor</span>:</span></span>", "funcdef": "def"}, "tensorgrad.tensor.function": {"fullname": "tensorgrad.tensor.function", "modulename": "tensorgrad.tensor", "qualname": "function", "kind": "function", "doc": "<p>Create a Function tensor from a name, output shape and inputs.</p>\n\n<p>Args:\n    name: The function name.\n    output_shape: A dictionary mapping output edge names to sizes.\n    inputs: A sequence of tuples where each tuple starts with a tensor (or string)\n            followed by the required edge names.</p>\n\n<p>Returns:\n    A Function tensor.</p>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"n\">name</span><span class=\"p\">:</span> <span class=\"nb\">str</span>,</span><span class=\"param\">\t<span class=\"n\">output_shape</span><span class=\"p\">:</span> <span class=\"nb\">dict</span><span class=\"p\">[</span><span class=\"nb\">str</span><span class=\"p\">,</span> <span class=\"n\">sympy</span><span class=\"o\">.</span><span class=\"n\">core</span><span class=\"o\">.</span><span class=\"n\">symbol</span><span class=\"o\">.</span><span class=\"n\">Symbol</span><span class=\"p\">]</span>,</span><span class=\"param\">\t<span class=\"o\">*</span><span class=\"n\">inputs</span><span class=\"p\">:</span> <span class=\"nb\">tuple</span><span class=\"p\">[</span><span class=\"n\">tensorgrad</span><span class=\"o\">.</span><span class=\"n\">tensor</span><span class=\"o\">.</span><span class=\"n\">Tensor</span> <span class=\"o\">|</span> <span class=\"nb\">str</span><span class=\"p\">,</span> <span class=\"o\">...</span><span class=\"p\">]</span></span><span class=\"return-annotation\">) -> <span class=\"n\">tensorgrad</span><span class=\"o\">.</span><span class=\"n\">tensor</span><span class=\"o\">.</span><span class=\"n\">Function</span>:</span></span>", "funcdef": "def"}, "tensorgrad.tensor.Function": {"fullname": "tensorgrad.tensor.Function", "modulename": "tensorgrad.tensor", "qualname": "Function", "kind": "class", "doc": "<p>A tensor that represents a function applied to one or more input tensors.</p>\n\n<p>Attributes:\n    signature: The FunctionSignature for this function.\n    inputs: A list of input tensors.\n    shape_out: A dictionary mapping output edge names to sizes.</p>\n", "bases": "Tensor"}, "tensorgrad.tensor.Function.__init__": {"fullname": "tensorgrad.tensor.Function.__init__", "modulename": "tensorgrad.tensor", "qualname": "Function.__init__", "kind": "function", "doc": "<p>A function tensor that takes one or more input tensors and produces an output tensor.</p>\n\n<p>Args:\n    signature: The FunctionSignature defining this function, or a string giving the function name.\n    inputs: The input tensors and their input edge names. [(t0, e00, e01, ...), (t1, e10, ...), ...]\n    shape_out: The names of the output edges of this function.</p>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"n\">signature</span><span class=\"p\">:</span> <span class=\"n\">tensorgrad</span><span class=\"o\">.</span><span class=\"n\">tensor</span><span class=\"o\">.</span><span class=\"n\">FunctionSignature</span>,</span><span class=\"param\">\t<span class=\"n\">inputs</span><span class=\"p\">:</span> <span class=\"n\">Iterable</span><span class=\"p\">[</span><span class=\"n\">tensorgrad</span><span class=\"o\">.</span><span class=\"n\">tensor</span><span class=\"o\">.</span><span class=\"n\">Tensor</span><span class=\"p\">]</span>,</span><span class=\"param\">\t<span class=\"n\">shape_out</span><span class=\"p\">:</span> <span class=\"nb\">dict</span><span class=\"p\">[</span><span class=\"nb\">str</span><span class=\"p\">,</span> <span class=\"n\">sympy</span><span class=\"o\">.</span><span class=\"n\">core</span><span class=\"o\">.</span><span class=\"n\">symbol</span><span class=\"o\">.</span><span class=\"n\">Symbol</span><span class=\"p\">]</span></span>)</span>"}, "tensorgrad.tensor.Function.shape_out": {"fullname": "tensorgrad.tensor.Function.shape_out", "modulename": "tensorgrad.tensor", "qualname": "Function.shape_out", "kind": "variable", "doc": "<p></p>\n"}, "tensorgrad.tensor.Function.inputs": {"fullname": "tensorgrad.tensor.Function.inputs", "modulename": "tensorgrad.tensor", "qualname": "Function.inputs", "kind": "variable", "doc": "<p></p>\n"}, "tensorgrad.tensor.Function.signature": {"fullname": "tensorgrad.tensor.Function.signature", "modulename": "tensorgrad.tensor", "qualname": "Function.signature", "kind": "variable", "doc": "<p></p>\n"}, "tensorgrad.tensor.Function.structural_graph": {"fullname": "tensorgrad.tensor.Function.structural_graph", "modulename": "tensorgrad.tensor", "qualname": "Function.structural_graph", "kind": "function", "doc": "<p>Create a graph representation of the tensor, which can be used for isomorphism testing.</p>\n\n<p>Returns:\n    A tuple with the following values:\n    - A NetworkX directed graph.\n        - Each node in the top tree is labeled with the producing tensor.\n        - Use name=hashable to label vertices\n    - \"edges\", a dict of edge_name -> node id\n    - Node 0 should be the root</p>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"bp\">self</span></span><span class=\"return-annotation\">) -> <span class=\"nb\">tuple</span><span class=\"p\">[</span><span class=\"n\">networkx</span><span class=\"o\">.</span><span class=\"n\">classes</span><span class=\"o\">.</span><span class=\"n\">multidigraph</span><span class=\"o\">.</span><span class=\"n\">MultiDiGraph</span><span class=\"p\">,</span> <span class=\"nb\">dict</span><span class=\"p\">[</span><span class=\"nb\">str</span><span class=\"p\">,</span> <span class=\"nb\">int</span><span class=\"p\">]]</span>:</span></span>", "funcdef": "def"}, "tensorgrad.tensor.Function.depends_on": {"fullname": "tensorgrad.tensor.Function.depends_on", "modulename": "tensorgrad.tensor", "qualname": "Function.depends_on", "kind": "function", "doc": "<p>Check if this tensor depends on the variable x.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">x</span><span class=\"p\">:</span> <span class=\"n\">tensorgrad</span><span class=\"o\">.</span><span class=\"n\">tensor</span><span class=\"o\">.</span><span class=\"n\">Variable</span></span><span class=\"return-annotation\">) -> <span class=\"nb\">bool</span>:</span></span>", "funcdef": "def"}, "tensorgrad.tensor.Derivative": {"fullname": "tensorgrad.tensor.Derivative", "modulename": "tensorgrad.tensor", "qualname": "Derivative", "kind": "class", "doc": "<p>A tensor representing the derivative of another tensor with respect to a variable.</p>\n", "bases": "Tensor"}, "tensorgrad.tensor.Derivative.__init__": {"fullname": "tensorgrad.tensor.Derivative.__init__", "modulename": "tensorgrad.tensor", "qualname": "Derivative.__init__", "kind": "function", "doc": "<p>A tensor representing the derivative of another tensor.</p>\n\n<p>Args:\n    tensor: The tensor to differentiate.\n    x: The variable with respect to which to differentiate.\n    new_names: A mapping for renaming edges (if not provided, it will be generated).</p>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"n\">tensor</span><span class=\"p\">:</span> <span class=\"n\">tensorgrad</span><span class=\"o\">.</span><span class=\"n\">tensor</span><span class=\"o\">.</span><span class=\"n\">Tensor</span>,</span><span class=\"param\">\t<span class=\"n\">x</span><span class=\"p\">:</span> <span class=\"n\">tensorgrad</span><span class=\"o\">.</span><span class=\"n\">tensor</span><span class=\"o\">.</span><span class=\"n\">Variable</span>,</span><span class=\"param\">\t<span class=\"n\">new_names</span><span class=\"p\">:</span> <span class=\"n\">Optional</span><span class=\"p\">[</span><span class=\"nb\">dict</span><span class=\"p\">[</span><span class=\"nb\">str</span><span class=\"p\">,</span> <span class=\"nb\">str</span><span class=\"p\">]]</span> <span class=\"o\">=</span> <span class=\"kc\">None</span></span>)</span>"}, "tensorgrad.tensor.Derivative.tensor": {"fullname": "tensorgrad.tensor.Derivative.tensor", "modulename": "tensorgrad.tensor", "qualname": "Derivative.tensor", "kind": "variable", "doc": "<p></p>\n"}, "tensorgrad.tensor.Derivative.x": {"fullname": "tensorgrad.tensor.Derivative.x", "modulename": "tensorgrad.tensor", "qualname": "Derivative.x", "kind": "variable", "doc": "<p></p>\n"}, "tensorgrad.tensor.Derivative.new_names": {"fullname": "tensorgrad.tensor.Derivative.new_names", "modulename": "tensorgrad.tensor", "qualname": "Derivative.new_names", "kind": "variable", "doc": "<p></p>\n"}, "tensorgrad.tensor.Derivative.structural_graph": {"fullname": "tensorgrad.tensor.Derivative.structural_graph", "modulename": "tensorgrad.tensor", "qualname": "Derivative.structural_graph", "kind": "function", "doc": "<p>Create a graph representation of the tensor, which can be used for isomorphism testing.</p>\n\n<p>Returns:\n    A tuple with the following values:\n    - A NetworkX directed graph.\n        - Each node in the top tree is labeled with the producing tensor.\n        - Use name=hashable to label vertices\n    - \"edges\", a dict of edge_name -> node id\n    - Node 0 should be the root</p>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"bp\">self</span></span><span class=\"return-annotation\">) -> <span class=\"nb\">tuple</span><span class=\"p\">[</span><span class=\"n\">networkx</span><span class=\"o\">.</span><span class=\"n\">classes</span><span class=\"o\">.</span><span class=\"n\">multidigraph</span><span class=\"o\">.</span><span class=\"n\">MultiDiGraph</span><span class=\"p\">,</span> <span class=\"nb\">dict</span><span class=\"p\">[</span><span class=\"nb\">str</span><span class=\"p\">,</span> <span class=\"nb\">int</span><span class=\"p\">]]</span>:</span></span>", "funcdef": "def"}, "tensorgrad.tensor.Derivative.depends_on": {"fullname": "tensorgrad.tensor.Derivative.depends_on", "modulename": "tensorgrad.tensor", "qualname": "Derivative.depends_on", "kind": "function", "doc": "<p>Check if this tensor depends on the variable x.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">x</span><span class=\"p\">:</span> <span class=\"n\">tensorgrad</span><span class=\"o\">.</span><span class=\"n\">tensor</span><span class=\"o\">.</span><span class=\"n\">Variable</span></span><span class=\"return-annotation\">) -> <span class=\"nb\">bool</span>:</span></span>", "funcdef": "def"}, "tensorgrad.tensor.Product": {"fullname": "tensorgrad.tensor.Product", "modulename": "tensorgrad.tensor", "qualname": "Product", "kind": "class", "doc": "<p>A tensor representing the product (contraction) of several tensors.</p>\n", "bases": "Tensor"}, "tensorgrad.tensor.Product.__init__": {"fullname": "tensorgrad.tensor.Product.__init__", "modulename": "tensorgrad.tensor", "qualname": "Product.__init__", "kind": "function", "doc": "<p>Initialize a Product tensor.</p>\n\n<p>Args:\n    tensors: An iterable of tensors to be multiplied/contracted.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">tensors</span><span class=\"p\">:</span> <span class=\"n\">Iterable</span><span class=\"p\">[</span><span class=\"n\">tensorgrad</span><span class=\"o\">.</span><span class=\"n\">tensor</span><span class=\"o\">.</span><span class=\"n\">Tensor</span><span class=\"p\">]</span></span>)</span>"}, "tensorgrad.tensor.Product.tensors": {"fullname": "tensorgrad.tensor.Product.tensors", "modulename": "tensorgrad.tensor", "qualname": "Product.tensors", "kind": "variable", "doc": "<p></p>\n"}, "tensorgrad.tensor.Product.merge": {"fullname": "tensorgrad.tensor.Product.merge", "modulename": "tensorgrad.tensor", "qualname": "Product.merge", "kind": "function", "doc": "<p>Merge several Product tensors into one, renaming inner edges so they are distinct.</p>\n\n<p>Args:\n    products: A list of Product tensors.</p>\n\n<p>Returns:\n    A new Product tensor merging the inputs.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">products</span><span class=\"p\">:</span> <span class=\"nb\">list</span><span class=\"p\">[</span><span class=\"n\">tensorgrad</span><span class=\"o\">.</span><span class=\"n\">tensor</span><span class=\"o\">.</span><span class=\"n\">Product</span><span class=\"p\">]</span></span><span class=\"return-annotation\">) -> <span class=\"n\">tensorgrad</span><span class=\"o\">.</span><span class=\"n\">tensor</span><span class=\"o\">.</span><span class=\"n\">Product</span>:</span></span>", "funcdef": "def"}, "tensorgrad.tensor.Product.components": {"fullname": "tensorgrad.tensor.Product.components", "modulename": "tensorgrad.tensor", "qualname": "Product.components", "kind": "function", "doc": "<p>Decompose the product into disjoint components (subgraphs).</p>\n\n<p>Returns:\n    A list of Product tensors representing disjoint components.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span></span><span class=\"return-annotation\">) -> <span class=\"nb\">list</span><span class=\"p\">[</span><span class=\"n\">tensorgrad</span><span class=\"o\">.</span><span class=\"n\">tensor</span><span class=\"o\">.</span><span class=\"n\">Product</span><span class=\"p\">]</span>:</span></span>", "funcdef": "def"}, "tensorgrad.tensor.Product.structural_graph": {"fullname": "tensorgrad.tensor.Product.structural_graph", "modulename": "tensorgrad.tensor", "qualname": "Product.structural_graph", "kind": "function", "doc": "<p>Create a graph representation of the tensor, which can be used for isomorphism testing.</p>\n\n<p>Returns:\n    A tuple with the following values:\n    - A NetworkX directed graph.\n        - Each node in the top tree is labeled with the producing tensor.\n        - Use name=hashable to label vertices\n    - \"edges\", a dict of edge_name -> node id\n    - Node 0 should be the root</p>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"bp\">self</span></span><span class=\"return-annotation\">) -> <span class=\"nb\">tuple</span><span class=\"p\">[</span><span class=\"n\">networkx</span><span class=\"o\">.</span><span class=\"n\">classes</span><span class=\"o\">.</span><span class=\"n\">multidigraph</span><span class=\"o\">.</span><span class=\"n\">MultiDiGraph</span><span class=\"p\">,</span> <span class=\"nb\">dict</span><span class=\"p\">[</span><span class=\"nb\">str</span><span class=\"p\">,</span> <span class=\"nb\">int</span><span class=\"p\">]]</span>:</span></span>", "funcdef": "def"}, "tensorgrad.tensor.Product.depends_on": {"fullname": "tensorgrad.tensor.Product.depends_on", "modulename": "tensorgrad.tensor", "qualname": "Product.depends_on", "kind": "function", "doc": "<p>Check if this tensor depends on the variable x.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">x</span><span class=\"p\">:</span> <span class=\"n\">tensorgrad</span><span class=\"o\">.</span><span class=\"n\">tensor</span><span class=\"o\">.</span><span class=\"n\">Variable</span></span><span class=\"return-annotation\">) -> <span class=\"nb\">bool</span>:</span></span>", "funcdef": "def"}, "tensorgrad.tensor.Sum": {"fullname": "tensorgrad.tensor.Sum", "modulename": "tensorgrad.tensor", "qualname": "Sum", "kind": "class", "doc": "<p>A weighted sum of several tensors.</p>\n", "bases": "Tensor"}, "tensorgrad.tensor.Sum.__init__": {"fullname": "tensorgrad.tensor.Sum.__init__", "modulename": "tensorgrad.tensor", "qualname": "Sum.__init__", "kind": "function", "doc": "<p>A weighted sum of multiple tensors.</p>\n\n<p>Args:\n    tensors: The tensors to add together.\n    weights: The weights of each tensor in the sum. If not provided, all weights are 1.</p>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"n\">tensors</span><span class=\"p\">:</span> <span class=\"n\">Iterable</span><span class=\"p\">[</span><span class=\"n\">tensorgrad</span><span class=\"o\">.</span><span class=\"n\">tensor</span><span class=\"o\">.</span><span class=\"n\">Tensor</span><span class=\"p\">]</span>,</span><span class=\"param\">\t<span class=\"n\">weights</span><span class=\"p\">:</span> <span class=\"n\">Optional</span><span class=\"p\">[</span><span class=\"n\">Iterable</span><span class=\"p\">[</span><span class=\"n\">numbers</span><span class=\"o\">.</span><span class=\"n\">Number</span><span class=\"p\">]]</span> <span class=\"o\">=</span> <span class=\"kc\">None</span></span>)</span>"}, "tensorgrad.tensor.Sum.tensors": {"fullname": "tensorgrad.tensor.Sum.tensors", "modulename": "tensorgrad.tensor", "qualname": "Sum.tensors", "kind": "variable", "doc": "<p></p>\n"}, "tensorgrad.tensor.Sum.weights": {"fullname": "tensorgrad.tensor.Sum.weights", "modulename": "tensorgrad.tensor", "qualname": "Sum.weights", "kind": "variable", "doc": "<p></p>\n"}, "tensorgrad.tensor.Sum.structural_graph": {"fullname": "tensorgrad.tensor.Sum.structural_graph", "modulename": "tensorgrad.tensor", "qualname": "Sum.structural_graph", "kind": "function", "doc": "<p>Create a graph representation of the tensor, which can be used for isomorphism testing.</p>\n\n<p>Returns:\n    A tuple with the following values:\n    - A NetworkX directed graph.\n        - Each node in the top tree is labeled with the producing tensor.\n        - Use name=hashable to label vertices\n    - \"edges\", a dict of edge_name -> node id\n    - Node 0 should be the root</p>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"bp\">self</span></span><span class=\"return-annotation\">) -> <span class=\"nb\">tuple</span><span class=\"p\">[</span><span class=\"n\">networkx</span><span class=\"o\">.</span><span class=\"n\">classes</span><span class=\"o\">.</span><span class=\"n\">multidigraph</span><span class=\"o\">.</span><span class=\"n\">MultiDiGraph</span><span class=\"p\">,</span> <span class=\"nb\">dict</span><span class=\"p\">[</span><span class=\"nb\">str</span><span class=\"p\">,</span> <span class=\"nb\">int</span><span class=\"p\">]]</span>:</span></span>", "funcdef": "def"}, "tensorgrad.tensor.Sum.depends_on": {"fullname": "tensorgrad.tensor.Sum.depends_on", "modulename": "tensorgrad.tensor", "qualname": "Sum.depends_on", "kind": "function", "doc": "<p>Check if this tensor depends on the variable x.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">x</span><span class=\"p\">:</span> <span class=\"n\">tensorgrad</span><span class=\"o\">.</span><span class=\"n\">tensor</span><span class=\"o\">.</span><span class=\"n\">Variable</span></span><span class=\"return-annotation\">) -> <span class=\"nb\">bool</span>:</span></span>", "funcdef": "def"}, "tensorgrad.testutils": {"fullname": "tensorgrad.testutils", "modulename": "tensorgrad.testutils", "kind": "module", "doc": "<p></p>\n"}, "tensorgrad.testutils.rand_values": {"fullname": "tensorgrad.testutils.rand_values", "modulename": "tensorgrad.testutils", "qualname": "rand_values", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"n\">variables</span><span class=\"p\">:</span> <span class=\"n\">Iterable</span><span class=\"p\">[</span><span class=\"n\">tensorgrad</span><span class=\"o\">.</span><span class=\"n\">tensor</span><span class=\"o\">.</span><span class=\"n\">Variable</span><span class=\"p\">]</span>,</span><span class=\"param\">\t<span class=\"n\">shape</span><span class=\"p\">:</span> <span class=\"n\">Dict</span><span class=\"p\">[</span><span class=\"n\">sympy</span><span class=\"o\">.</span><span class=\"n\">core</span><span class=\"o\">.</span><span class=\"n\">symbol</span><span class=\"o\">.</span><span class=\"n\">Symbol</span><span class=\"p\">,</span> <span class=\"nb\">int</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"p\">{}</span></span><span class=\"return-annotation\">) -> <span class=\"nb\">dict</span><span class=\"p\">[</span><span class=\"n\">tensorgrad</span><span class=\"o\">.</span><span class=\"n\">tensor</span><span class=\"o\">.</span><span class=\"n\">Variable</span><span class=\"p\">,</span> <span class=\"n\">torch</span><span class=\"o\">.</span><span class=\"n\">Tensor</span><span class=\"p\">]</span>:</span></span>", "funcdef": "def"}, "tensorgrad.testutils.assert_close": {"fullname": "tensorgrad.testutils.assert_close", "modulename": "tensorgrad.testutils", "qualname": "assert_close", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">actual</span>, </span><span class=\"param\"><span class=\"n\">expected</span>, </span><span class=\"param\"><span class=\"n\">rtol</span><span class=\"o\">=</span><span class=\"mf\">0.0001</span>, </span><span class=\"param\"><span class=\"n\">atol</span><span class=\"o\">=</span><span class=\"mf\">1e-05</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, "tensorgrad.testutils.broadcast_tensors": {"fullname": "tensorgrad.testutils.broadcast_tensors", "modulename": "tensorgrad.testutils", "qualname": "broadcast_tensors", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">left_torch</span>, </span><span class=\"param\"><span class=\"n\">right_torch</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, "tensorgrad.testutils.generate_copy": {"fullname": "tensorgrad.testutils.generate_copy", "modulename": "tensorgrad.testutils", "qualname": "generate_copy", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">dim</span><span class=\"p\">:</span> <span class=\"nb\">int</span>, </span><span class=\"param\"><span class=\"n\">edges</span><span class=\"p\">:</span> <span class=\"n\">Iterable</span><span class=\"p\">[</span><span class=\"nb\">str</span><span class=\"p\">]</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, "tensorgrad.testutils.generate_random_tensor_expression": {"fullname": "tensorgrad.testutils.generate_random_tensor_expression", "modulename": "tensorgrad.testutils", "qualname": "generate_random_tensor_expression", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"n\">max_size</span><span class=\"p\">:</span> <span class=\"nb\">int</span></span><span class=\"return-annotation\">) -> <span class=\"n\">Tuple</span><span class=\"p\">[</span><span class=\"n\">tensorgrad</span><span class=\"o\">.</span><span class=\"n\">tensor</span><span class=\"o\">.</span><span class=\"n\">Tensor</span><span class=\"p\">,</span> <span class=\"n\">torch</span><span class=\"o\">.</span><span class=\"n\">Tensor</span><span class=\"p\">,</span> <span class=\"n\">Dict</span><span class=\"p\">[</span><span class=\"n\">tensorgrad</span><span class=\"o\">.</span><span class=\"n\">tensor</span><span class=\"o\">.</span><span class=\"n\">Variable</span><span class=\"p\">,</span> <span class=\"n\">torch</span><span class=\"o\">.</span><span class=\"n\">Tensor</span><span class=\"p\">]]</span>:</span></span>", "funcdef": "def"}, "tensorgrad.testutils.make_random_tree": {"fullname": "tensorgrad.testutils.make_random_tree", "modulename": "tensorgrad.testutils", "qualname": "make_random_tree", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">nodes</span><span class=\"p\">:</span> <span class=\"nb\">int</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, "tensorgrad.testutils.atlas_generate_random_tensor_expression": {"fullname": "tensorgrad.testutils.atlas_generate_random_tensor_expression", "modulename": "tensorgrad.testutils", "qualname": "atlas_generate_random_tensor_expression", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, "tensorgrad.testutils.random_tensor_expr": {"fullname": "tensorgrad.testutils.random_tensor_expr", "modulename": "tensorgrad.testutils", "qualname": "random_tensor_expr", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"n\">max_depth</span><span class=\"o\">=</span><span class=\"mi\">4</span>,</span><span class=\"param\">\t<span class=\"n\">max_dim</span><span class=\"o\">=</span><span class=\"mi\">4</span></span><span class=\"return-annotation\">) -> <span class=\"nb\">tuple</span><span class=\"p\">[</span><span class=\"n\">tensorgrad</span><span class=\"o\">.</span><span class=\"n\">tensor</span><span class=\"o\">.</span><span class=\"n\">Tensor</span><span class=\"p\">,</span> <span class=\"n\">torch</span><span class=\"o\">.</span><span class=\"n\">Tensor</span><span class=\"p\">,</span> <span class=\"nb\">dict</span><span class=\"p\">[</span><span class=\"n\">tensorgrad</span><span class=\"o\">.</span><span class=\"n\">tensor</span><span class=\"o\">.</span><span class=\"n\">Variable</span><span class=\"p\">,</span> <span class=\"n\">torch</span><span class=\"o\">.</span><span class=\"n\">Tensor</span><span class=\"p\">]]</span>:</span></span>", "funcdef": "def"}, "tensorgrad.testutils.random_tensor_expr2": {"fullname": "tensorgrad.testutils.random_tensor_expr2", "modulename": "tensorgrad.testutils", "qualname": "random_tensor_expr2", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"n\">max_depth</span><span class=\"o\">=</span><span class=\"mi\">4</span>,</span><span class=\"param\">\t<span class=\"n\">max_dim</span><span class=\"o\">=</span><span class=\"mi\">4</span></span><span class=\"return-annotation\">) -> <span class=\"nb\">tuple</span><span class=\"p\">[</span><span class=\"n\">tensorgrad</span><span class=\"o\">.</span><span class=\"n\">tensor</span><span class=\"o\">.</span><span class=\"n\">Tensor</span><span class=\"p\">,</span> <span class=\"n\">torch</span><span class=\"o\">.</span><span class=\"n\">Tensor</span><span class=\"p\">,</span> <span class=\"nb\">dict</span><span class=\"p\">]</span>:</span></span>", "funcdef": "def"}, "tensorgrad.utils": {"fullname": "tensorgrad.utils", "modulename": "tensorgrad.utils", "kind": "module", "doc": "<p></p>\n"}, "tensorgrad.utils.DisjointSets": {"fullname": "tensorgrad.utils.DisjointSets", "modulename": "tensorgrad.utils", "qualname": "DisjointSets", "kind": "class", "doc": "<p>Abstract base class for generic types.</p>\n\n<p>On Python 3.12 and newer, generic classes implicitly inherit from\nGeneric when they declare a parameter list after the class's name::</p>\n\n<pre><code>class Mapping[KT, VT]:\n    def __getitem__(self, key: KT) -&gt; VT:\n        ...\n    # Etc.\n</code></pre>\n\n<p>On older versions of Python, however, generic classes have to\nexplicitly inherit from Generic.</p>\n\n<p>After a class has been declared to be generic, it can then be used as\nfollows::</p>\n\n<pre><code>def lookup_name[KT, VT](mapping: Mapping[KT, VT], key: KT, default: VT) -&gt; VT:\n    try:\n        return mapping[key]\n    except KeyError:\n        return default\n</code></pre>\n", "bases": "typing.Generic[~K, ~V]"}, "tensorgrad.utils.DisjointSets.parent": {"fullname": "tensorgrad.utils.DisjointSets.parent", "modulename": "tensorgrad.utils", "qualname": "DisjointSets.parent", "kind": "variable", "doc": "<p></p>\n", "annotation": ": dict[~K, ~K]"}, "tensorgrad.utils.DisjointSets.values": {"fullname": "tensorgrad.utils.DisjointSets.values", "modulename": "tensorgrad.utils", "qualname": "DisjointSets.values", "kind": "variable", "doc": "<p></p>\n", "annotation": ": dict[~K, ~V]"}, "tensorgrad.utils.DisjointSets.find": {"fullname": "tensorgrad.utils.DisjointSets.find", "modulename": "tensorgrad.utils", "qualname": "DisjointSets.find", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">x</span><span class=\"p\">:</span> <span class=\"o\">~</span><span class=\"n\">K</span></span><span class=\"return-annotation\">) -> <span class=\"o\">~</span><span class=\"n\">K</span>:</span></span>", "funcdef": "def"}, "tensorgrad.utils.DisjointSets.union": {"fullname": "tensorgrad.utils.DisjointSets.union", "modulename": "tensorgrad.utils", "qualname": "DisjointSets.union", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">x</span><span class=\"p\">:</span> <span class=\"o\">~</span><span class=\"n\">K</span>, </span><span class=\"param\"><span class=\"n\">y</span><span class=\"p\">:</span> <span class=\"o\">~</span><span class=\"n\">K</span></span><span class=\"return-annotation\">) -> <span class=\"kc\">None</span>:</span></span>", "funcdef": "def"}, "tensorgrad.utils.DisjointSets.get": {"fullname": "tensorgrad.utils.DisjointSets.get", "modulename": "tensorgrad.utils", "qualname": "DisjointSets.get", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">key</span><span class=\"p\">:</span> <span class=\"o\">~</span><span class=\"n\">K</span>, </span><span class=\"param\"><span class=\"n\">default</span><span class=\"p\">:</span> <span class=\"o\">~</span><span class=\"n\">V</span> <span class=\"o\">=</span> <span class=\"kc\">None</span></span><span class=\"return-annotation\">) -> <span class=\"o\">~</span><span class=\"n\">V</span>:</span></span>", "funcdef": "def"}, "tensorgrad.utils.DisjointSets.items": {"fullname": "tensorgrad.utils.DisjointSets.items", "modulename": "tensorgrad.utils", "qualname": "DisjointSets.items", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span></span><span class=\"return-annotation\">) -> <span class=\"nb\">list</span><span class=\"p\">[</span><span class=\"nb\">tuple</span><span class=\"p\">[</span><span class=\"nb\">list</span><span class=\"p\">[</span><span class=\"o\">~</span><span class=\"n\">K</span><span class=\"p\">],</span> <span class=\"o\">~</span><span class=\"n\">V</span><span class=\"p\">]]</span>:</span></span>", "funcdef": "def"}, "tensorgrad.utils.KeyStoringDict": {"fullname": "tensorgrad.utils.KeyStoringDict", "modulename": "tensorgrad.utils", "qualname": "KeyStoringDict", "kind": "class", "doc": "<p>A dictionary-like class that:</p>\n\n<ul>\n<li>Internally stores { key: (key, value) } in self._store.</li>\n<li>Normal lookups return only 'value', but we can also retrieve\nthe actual stored key object via get_with_key().</li>\n</ul>\n"}, "tensorgrad.utils.KeyStoringDict.__init__": {"fullname": "tensorgrad.utils.KeyStoringDict.__init__", "modulename": "tensorgrad.utils", "qualname": "KeyStoringDict.__init__", "kind": "function", "doc": "<p>Similar to dict's constructor, it can accept:</p>\n\n<ul>\n<li>KeyStoringDict(mapping)</li>\n<li>KeyStoringDict(iterable_of_pairs)</li>\n<li>KeyStoringDict(key1=value1, key2=value2, ...)\nin any combination.</li>\n</ul>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"o\">*</span><span class=\"n\">args</span>, </span><span class=\"param\"><span class=\"o\">**</span><span class=\"n\">kwargs</span></span>)</span>"}, "tensorgrad.utils.KeyStoringDict.get_with_key": {"fullname": "tensorgrad.utils.KeyStoringDict.get_with_key", "modulename": "tensorgrad.utils", "qualname": "KeyStoringDict.get_with_key", "kind": "function", "doc": "<p>Return (stored_key, user_value) if key is found,\nelse return 'default'.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">key</span>, </span><span class=\"param\"><span class=\"n\">default</span><span class=\"o\">=</span><span class=\"kc\">None</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, "tensorgrad.utils.KeyStoringDict.get": {"fullname": "tensorgrad.utils.KeyStoringDict.get", "modulename": "tensorgrad.utils", "qualname": "KeyStoringDict.get", "kind": "function", "doc": "<p>Normal dict .get(), returning just the user_value (or default).</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">key</span>, </span><span class=\"param\"><span class=\"n\">default</span><span class=\"o\">=</span><span class=\"kc\">None</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, "tensorgrad.utils.KeyStoringDict.pop": {"fullname": "tensorgrad.utils.KeyStoringDict.pop", "modulename": "tensorgrad.utils", "qualname": "KeyStoringDict.pop", "kind": "function", "doc": "<p>pop(key) \u2192 user_value, removing the item if it exists.\nIf key not found, raise KeyError.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">key</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, "tensorgrad.utils.KeyStoringDict.update": {"fullname": "tensorgrad.utils.KeyStoringDict.update", "modulename": "tensorgrad.utils", "qualname": "KeyStoringDict.update", "kind": "function", "doc": "<p>update(...) adds/overwrites items from another dict/mapping.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">other</span><span class=\"p\">:</span> <span class=\"nb\">dict</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, "tensorgrad.utils.KeyStoringDict.keys": {"fullname": "tensorgrad.utils.KeyStoringDict.keys", "modulename": "tensorgrad.utils", "qualname": "KeyStoringDict.keys", "kind": "function", "doc": "<p>Return a view (or iterable) of keys.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, "tensorgrad.utils.KeyStoringDict.values": {"fullname": "tensorgrad.utils.KeyStoringDict.values", "modulename": "tensorgrad.utils", "qualname": "KeyStoringDict.values", "kind": "function", "doc": "<p>Return a view (or iterable) of user_values.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, "tensorgrad.utils.KeyStoringDict.items": {"fullname": "tensorgrad.utils.KeyStoringDict.items", "modulename": "tensorgrad.utils", "qualname": "KeyStoringDict.items", "kind": "function", "doc": "<p>Return a view (or iterable) of (key, user_value).</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, "tensorgrad.utils.KeyStoringDict.copy": {"fullname": "tensorgrad.utils.KeyStoringDict.copy", "modulename": "tensorgrad.utils", "qualname": "KeyStoringDict.copy", "kind": "function", "doc": "<p>Return a shallow copy of this KeyStoringDict.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}}, "docInfo": {"tensorgrad": {"qualname": 0, "fullname": 1, "annotation": 0, "default_value": 0, "signature": 0, "bases": 0, "doc": 3}, "tensorgrad.extras": {"qualname": 0, "fullname": 2, "annotation": 0, "default_value": 0, "signature": 0, "bases": 0, "doc": 3}, "tensorgrad.extras.evaluate": {"qualname": 0, "fullname": 3, "annotation": 0, "default_value": 0, "signature": 0, "bases": 0, "doc": 3}, "tensorgrad.extras.evaluate.evaluate": {"qualname": 1, "fullname": 4, "annotation": 0, "default_value": 0, "signature": 116, "bases": 0, "doc": 3}, "tensorgrad.extras.evaluate.Context": {"qualname": 1, "fullname": 4, "annotation": 0, "default_value": 0, "signature": 0, "bases": 0, "doc": 3}, "tensorgrad.extras.evaluate.Context.__init__": {"qualname": 3, "fullname": 6, "annotation": 0, "default_value": 0, "signature": 93, "bases": 0, "doc": 3}, "tensorgrad.extras.evaluate.Context.values": {"qualname": 2, "fullname": 5, "annotation": 0, "default_value": 0, "signature": 0, "bases": 0, "doc": 3}, "tensorgrad.extras.evaluate.Context.dims": {"qualname": 2, "fullname": 5, "annotation": 0, "default_value": 0, "signature": 0, "bases": 0, "doc": 3}, "tensorgrad.extras.evaluate.Context.evaluate": {"qualname": 2, "fullname": 5, "annotation": 0, "default_value": 0, "signature": 39, "bases": 0, "doc": 3}, "tensorgrad.extras.evaluate.evaluate_function": {"qualname": 2, "fullname": 5, "annotation": 0, "default_value": 0, "signature": 53, "bases": 0, "doc": 3}, "tensorgrad.extras.expectation": {"qualname": 0, "fullname": 3, "annotation": 0, "default_value": 0, "signature": 0, "bases": 0, "doc": 3}, "tensorgrad.extras.expectation.Expectation": {"qualname": 1, "fullname": 4, "annotation": 0, "default_value": 0, "signature": 0, "bases": 3, "doc": 3}, "tensorgrad.extras.expectation.Expectation.__init__": {"qualname": 3, "fullname": 6, "annotation": 0, "default_value": 0, "signature": 151, "bases": 0, "doc": 152}, "tensorgrad.extras.expectation.Expectation.tensor": {"qualname": 2, "fullname": 5, "annotation": 0, "default_value": 0, "signature": 0, "bases": 0, "doc": 3}, "tensorgrad.extras.expectation.Expectation.wrt": {"qualname": 2, "fullname": 5, "annotation": 0, "default_value": 0, "signature": 0, "bases": 0, "doc": 3}, "tensorgrad.extras.expectation.Expectation.mu": {"qualname": 2, "fullname": 5, "annotation": 0, "default_value": 0, "signature": 0, "bases": 0, "doc": 3}, "tensorgrad.extras.expectation.Expectation.covar_names": {"qualname": 3, "fullname": 6, "annotation": 0, "default_value": 0, "signature": 0, "bases": 0, "doc": 3}, "tensorgrad.extras.expectation.Expectation.covar": {"qualname": 2, "fullname": 5, "annotation": 0, "default_value": 0, "signature": 0, "bases": 0, "doc": 3}, "tensorgrad.extras.expectation.Expectation.structural_graph": {"qualname": 3, "fullname": 6, "annotation": 0, "default_value": 0, "signature": 52, "bases": 0, "doc": 63}, "tensorgrad.extras.expectation.Expectation.depends_on": {"qualname": 3, "fullname": 6, "annotation": 0, "default_value": 0, "signature": 34, "bases": 0, "doc": 12}, "tensorgrad.extras.to_formula_old": {"qualname": 0, "fullname": 5, "annotation": 0, "default_value": 0, "signature": 0, "bases": 0, "doc": 3}, "tensorgrad.extras.to_formula_old.to_simple_matrix_formula": {"qualname": 4, "fullname": 9, "annotation": 0, "default_value": 0, "signature": 11, "bases": 0, "doc": 3}, "tensorgrad.extras.to_formula_old.component_to_matrix": {"qualname": 3, "fullname": 8, "annotation": 0, "default_value": 0, "signature": 17, "bases": 0, "doc": 3}, "tensorgrad.extras.to_formula_old.dfs": {"qualname": 1, "fullname": 6, "annotation": 0, "default_value": 0, "signature": 27, "bases": 0, "doc": 3}, "tensorgrad.extras.to_latex": {"qualname": 0, "fullname": 4, "annotation": 0, "default_value": 0, "signature": 0, "bases": 0, "doc": 3}, "tensorgrad.extras.to_latex.to_latex_indexed": {"qualname": 3, "fullname": 7, "annotation": 0, "default_value": 0, "signature": 29, "bases": 0, "doc": 17}, "tensorgrad.extras.to_latex.to_latex_index_free": {"qualname": 4, "fullname": 8, "annotation": 0, "default_value": 0, "signature": 29, "bases": 0, "doc": 14}, "tensorgrad.extras.to_latex.to_latex": {"qualname": 2, "fullname": 6, "annotation": 0, "default_value": 0, "signature": 47, "bases": 0, "doc": 19}, "tensorgrad.extras.to_numpy": {"qualname": 0, "fullname": 4, "annotation": 0, "default_value": 0, "signature": 0, "bases": 0, "doc": 3}, "tensorgrad.extras.to_numpy.compile_to_callable": {"qualname": 3, "fullname": 7, "annotation": 0, "default_value": 0, "signature": 52, "bases": 0, "doc": 128}, "tensorgrad.extras.to_numpy.CodegenContext": {"qualname": 1, "fullname": 5, "annotation": 0, "default_value": 0, "signature": 0, "bases": 0, "doc": 13}, "tensorgrad.extras.to_numpy.CodegenContext.lines": {"qualname": 2, "fullname": 6, "annotation": 0, "default_value": 0, "signature": 0, "bases": 0, "doc": 3}, "tensorgrad.extras.to_numpy.CodegenContext.cache": {"qualname": 2, "fullname": 6, "annotation": 0, "default_value": 0, "signature": 0, "bases": 0, "doc": 3}, "tensorgrad.extras.to_numpy.CodegenContext.seen_variables": {"qualname": 3, "fullname": 7, "annotation": 0, "default_value": 0, "signature": 0, "bases": 0, "doc": 3}, "tensorgrad.extras.to_numpy.CodegenContext.seen_symbols": {"qualname": 3, "fullname": 7, "annotation": 0, "default_value": 0, "signature": 0, "bases": 0, "doc": 3}, "tensorgrad.extras.to_numpy.CodegenContext.seen_names": {"qualname": 3, "fullname": 7, "annotation": 0, "default_value": 0, "signature": 0, "bases": 0, "doc": 3}, "tensorgrad.extras.to_numpy.CodegenContext.var_types": {"qualname": 3, "fullname": 7, "annotation": 0, "default_value": 0, "signature": 0, "bases": 0, "doc": 3}, "tensorgrad.extras.to_numpy.CodegenContext.emit": {"qualname": 2, "fullname": 6, "annotation": 0, "default_value": 0, "signature": 21, "bases": 0, "doc": 3}, "tensorgrad.extras.to_numpy.CodegenContext.fresh_name": {"qualname": 3, "fullname": 7, "annotation": 0, "default_value": 0, "signature": 21, "bases": 0, "doc": 13}, "tensorgrad.extras.to_numpy.CodegenContext.declare_dimension": {"qualname": 3, "fullname": 7, "annotation": 0, "default_value": 0, "signature": 16, "bases": 0, "doc": 35}, "tensorgrad.extras.to_numpy.CodegenContext.set_var_type": {"qualname": 4, "fullname": 8, "annotation": 0, "default_value": 0, "signature": 23, "bases": 0, "doc": 3}, "tensorgrad.extras.to_numpy.CodegenContext.get_var_type": {"qualname": 4, "fullname": 8, "annotation": 0, "default_value": 0, "signature": 17, "bases": 0, "doc": 3}, "tensorgrad.extras.to_numpy.permute_code": {"qualname": 2, "fullname": 6, "annotation": 0, "default_value": 0, "signature": 51, "bases": 0, "doc": 23}, "tensorgrad.extras.to_pytorch": {"qualname": 0, "fullname": 4, "annotation": 0, "default_value": 0, "signature": 0, "bases": 0, "doc": 3}, "tensorgrad.extras.to_pytorch.compile_to_callable": {"qualname": 3, "fullname": 7, "annotation": 0, "default_value": 0, "signature": 52, "bases": 0, "doc": 70}, "tensorgrad.extras.to_pytorch.CodegenContext": {"qualname": 1, "fullname": 5, "annotation": 0, "default_value": 0, "signature": 0, "bases": 0, "doc": 38}, "tensorgrad.extras.to_pytorch.CodegenContext.lines": {"qualname": 2, "fullname": 6, "annotation": 0, "default_value": 0, "signature": 0, "bases": 0, "doc": 3}, "tensorgrad.extras.to_pytorch.CodegenContext.cache": {"qualname": 2, "fullname": 6, "annotation": 0, "default_value": 0, "signature": 0, "bases": 0, "doc": 3}, "tensorgrad.extras.to_pytorch.CodegenContext.seen_variables": {"qualname": 3, "fullname": 7, "annotation": 0, "default_value": 0, "signature": 0, "bases": 0, "doc": 3}, "tensorgrad.extras.to_pytorch.CodegenContext.seen_symbols": {"qualname": 3, "fullname": 7, "annotation": 0, "default_value": 0, "signature": 0, "bases": 0, "doc": 3}, "tensorgrad.extras.to_pytorch.CodegenContext.seen_names": {"qualname": 3, "fullname": 7, "annotation": 0, "default_value": 0, "signature": 0, "bases": 0, "doc": 3}, "tensorgrad.extras.to_pytorch.CodegenContext.emit": {"qualname": 2, "fullname": 6, "annotation": 0, "default_value": 0, "signature": 21, "bases": 0, "doc": 3}, "tensorgrad.extras.to_pytorch.CodegenContext.fresh_name": {"qualname": 3, "fullname": 7, "annotation": 0, "default_value": 0, "signature": 21, "bases": 0, "doc": 13}, "tensorgrad.extras.to_pytorch.CodegenContext.declare_dimension": {"qualname": 3, "fullname": 7, "annotation": 0, "default_value": 0, "signature": 16, "bases": 0, "doc": 39}, "tensorgrad.extras.to_pytorch.permute": {"qualname": 1, "fullname": 5, "annotation": 0, "default_value": 0, "signature": 51, "bases": 0, "doc": 16}, "tensorgrad.extras.to_tikz": {"qualname": 0, "fullname": 4, "annotation": 0, "default_value": 0, "signature": 0, "bases": 0, "doc": 3}, "tensorgrad.extras.to_tikz.to_tikz": {"qualname": 2, "fullname": 6, "annotation": 0, "default_value": 0, "signature": 11, "bases": 0, "doc": 13}, "tensorgrad.extras.to_tikz.NodeRef": {"qualname": 1, "fullname": 5, "annotation": 0, "default_value": 0, "signature": 0, "bases": 0, "doc": 70}, "tensorgrad.extras.to_tikz.NodeRef.__init__": {"qualname": 3, "fullname": 7, "annotation": 0, "default_value": 0, "signature": 56, "bases": 0, "doc": 3}, "tensorgrad.extras.to_tikz.NodeRef.name": {"qualname": 2, "fullname": 6, "annotation": 2, "default_value": 0, "signature": 0, "bases": 0, "doc": 3}, "tensorgrad.extras.to_tikz.NodeRef.edge_style": {"qualname": 3, "fullname": 7, "annotation": 2, "default_value": 4, "signature": 0, "bases": 0, "doc": 3}, "tensorgrad.extras.to_tikz.NodeRef.edge_label": {"qualname": 3, "fullname": 7, "annotation": 2, "default_value": 4, "signature": 0, "bases": 0, "doc": 3}, "tensorgrad.extras.to_tikz.Namer": {"qualname": 1, "fullname": 5, "annotation": 0, "default_value": 0, "signature": 0, "bases": 0, "doc": 3}, "tensorgrad.extras.to_tikz.Namer.counter": {"qualname": 2, "fullname": 6, "annotation": 0, "default_value": 0, "signature": 0, "bases": 0, "doc": 3}, "tensorgrad.extras.to_tikz.Namer.edge_mapping": {"qualname": 3, "fullname": 7, "annotation": 0, "default_value": 0, "signature": 0, "bases": 0, "doc": 3}, "tensorgrad.extras.to_tikz.Namer.fresh_name": {"qualname": 3, "fullname": 7, "annotation": 0, "default_value": 0, "signature": 25, "bases": 0, "doc": 3}, "tensorgrad.extras.to_tikz.Namer.edge": {"qualname": 2, "fullname": 6, "annotation": 0, "default_value": 0, "signature": 16, "bases": 0, "doc": 3}, "tensorgrad.extras.to_tikz.depth_tracking_dispatcher": {"qualname": 3, "fullname": 7, "annotation": 0, "default_value": 0, "signature": 0, "bases": 2, "doc": 23}, "tensorgrad.extras.to_tikz.depth_tracking_dispatcher.register": {"qualname": 4, "fullname": 8, "annotation": 0, "default_value": 0, "signature": 26, "bases": 0, "doc": 28}, "tensorgrad.extras.to_tikz.TikzGraph": {"qualname": 1, "fullname": 5, "annotation": 0, "default_value": 0, "signature": 0, "bases": 0, "doc": 3}, "tensorgrad.extras.to_tikz.TikzGraph.__init__": {"qualname": 3, "fullname": 7, "annotation": 0, "default_value": 0, "signature": 54, "bases": 0, "doc": 3}, "tensorgrad.extras.to_tikz.TikzGraph.lines": {"qualname": 2, "fullname": 6, "annotation": 0, "default_value": 0, "signature": 0, "bases": 0, "doc": 3}, "tensorgrad.extras.to_tikz.TikzGraph.namer": {"qualname": 2, "fullname": 6, "annotation": 0, "default_value": 0, "signature": 0, "bases": 0, "doc": 3}, "tensorgrad.extras.to_tikz.TikzGraph.depth": {"qualname": 2, "fullname": 6, "annotation": 0, "default_value": 0, "signature": 0, "bases": 0, "doc": 3}, "tensorgrad.extras.to_tikz.TikzGraph.added_node_names": {"qualname": 4, "fullname": 8, "annotation": 0, "default_value": 0, "signature": 0, "bases": 0, "doc": 3}, "tensorgrad.extras.to_tikz.TikzGraph.subgraph": {"qualname": 2, "fullname": 6, "annotation": 0, "default_value": 0, "signature": 11, "bases": 0, "doc": 3}, "tensorgrad.extras.to_tikz.TikzGraph.to_tikz": {"qualname": 3, "fullname": 7, "annotation": 0, "default_value": 0, "signature": 16, "bases": 0, "doc": 3}, "tensorgrad.extras.to_tikz.TikzGraph.add_node": {"qualname": 3, "fullname": 7, "annotation": 0, "default_value": 0, "signature": 82, "bases": 0, "doc": 18}, "tensorgrad.extras.to_tikz.TikzGraph.add_edge": {"qualname": 3, "fullname": 7, "annotation": 0, "default_value": 0, "signature": 88, "bases": 0, "doc": 29}, "tensorgrad.extras.to_tikz.TikzGraph.add_subgraph": {"qualname": 3, "fullname": 7, "annotation": 0, "default_value": 0, "signature": 93, "bases": 0, "doc": 47}, "tensorgrad.extras.to_tikz.TikzGraph.handle_free_edges": {"qualname": 4, "fullname": 8, "annotation": 0, "default_value": 0, "signature": 22, "bases": 0, "doc": 30}, "tensorgrad.extras.to_tikz.format_label": {"qualname": 2, "fullname": 6, "annotation": 0, "default_value": 0, "signature": 11, "bases": 0, "doc": 26}, "tensorgrad.extras.to_tikz.format_weight": {"qualname": 2, "fullname": 6, "annotation": 0, "default_value": 0, "signature": 16, "bases": 0, "doc": 12}, "tensorgrad.extras.to_tikz.format_function": {"qualname": 2, "fullname": 6, "annotation": 0, "default_value": 0, "signature": 11, "bases": 0, "doc": 12}, "tensorgrad.extras.to_tikz.tree_layout": {"qualname": 2, "fullname": 6, "annotation": 0, "default_value": 28, "signature": 0, "bases": 0, "doc": 3}, "tensorgrad.extras.to_tikz.spring_layout": {"qualname": 2, "fullname": 6, "annotation": 0, "default_value": 14, "signature": 0, "bases": 0, "doc": 3}, "tensorgrad.extras.to_tikz.choose_layout": {"qualname": 2, "fullname": 6, "annotation": 0, "default_value": 0, "signature": 11, "bases": 0, "doc": 11}, "tensorgrad.extras.to_tikz.prefix": {"qualname": 1, "fullname": 5, "annotation": 0, "default_value": 260, "signature": 0, "bases": 0, "doc": 3}, "tensorgrad.functions": {"qualname": 0, "fullname": 2, "annotation": 0, "default_value": 0, "signature": 0, "bases": 0, "doc": 3}, "tensorgrad.functions.DimType": {"qualname": 1, "fullname": 3, "annotation": 0, "default_value": 5, "signature": 0, "bases": 0, "doc": 3}, "tensorgrad.functions.taylor": {"qualname": 1, "fullname": 3, "annotation": 0, "default_value": 0, "signature": 93, "bases": 0, "doc": 13}, "tensorgrad.functions.frobenius2": {"qualname": 1, "fullname": 3, "annotation": 0, "default_value": 0, "signature": 39, "bases": 0, "doc": 3}, "tensorgrad.functions.symmetrize": {"qualname": 1, "fullname": 3, "annotation": 0, "default_value": 0, "signature": 98, "bases": 0, "doc": 10}, "tensorgrad.functions.graph": {"qualname": 1, "fullname": 3, "annotation": 0, "default_value": 0, "signature": 54, "bases": 0, "doc": 1031}, "tensorgrad.functions.kronecker": {"qualname": 1, "fullname": 3, "annotation": 0, "default_value": 0, "signature": 41, "bases": 0, "doc": 3}, "tensorgrad.functions.diag": {"qualname": 1, "fullname": 3, "annotation": 0, "default_value": 0, "signature": 58, "bases": 0, "doc": 57}, "tensorgrad.functions.trace": {"qualname": 1, "fullname": 3, "annotation": 0, "default_value": 0, "signature": 39, "bases": 0, "doc": 3}, "tensorgrad.functions.parse_dim": {"qualname": 2, "fullname": 4, "annotation": 0, "default_value": 0, "signature": 96, "bases": 0, "doc": 3}, "tensorgrad.functions.sum": {"qualname": 1, "fullname": 3, "annotation": 0, "default_value": 0, "signature": 98, "bases": 0, "doc": 10}, "tensorgrad.functions.prod": {"qualname": 1, "fullname": 3, "annotation": 0, "default_value": 0, "signature": 41, "bases": 0, "doc": 8}, "tensorgrad.functions.mean": {"qualname": 1, "fullname": 3, "annotation": 0, "default_value": 0, "signature": 98, "bases": 0, "doc": 3}, "tensorgrad.functions.dot": {"qualname": 1, "fullname": 3, "annotation": 0, "default_value": 0, "signature": 90, "bases": 0, "doc": 41}, "tensorgrad.functions.multi_dot": {"qualname": 2, "fullname": 4, "annotation": 0, "default_value": 0, "signature": 69, "bases": 0, "doc": 12}, "tensorgrad.functions.contract": {"qualname": 1, "fullname": 3, "annotation": 0, "default_value": 0, "signature": 90, "bases": 0, "doc": 3}, "tensorgrad.functions.pow": {"qualname": 1, "fullname": 3, "annotation": 0, "default_value": 0, "signature": 62, "bases": 0, "doc": 4}, "tensorgrad.functions.sqrt": {"qualname": 1, "fullname": 3, "annotation": 0, "default_value": 0, "signature": 39, "bases": 0, "doc": 4}, "tensorgrad.functions.inverse": {"qualname": 1, "fullname": 3, "annotation": 0, "default_value": 0, "signature": 64, "bases": 0, "doc": 93}, "tensorgrad.functions.exp": {"qualname": 1, "fullname": 3, "annotation": 0, "default_value": 0, "signature": 39, "bases": 0, "doc": 3}, "tensorgrad.functions.log": {"qualname": 1, "fullname": 3, "annotation": 0, "default_value": 0, "signature": 39, "bases": 0, "doc": 3}, "tensorgrad.functions.tanh": {"qualname": 1, "fullname": 3, "annotation": 0, "default_value": 0, "signature": 39, "bases": 0, "doc": 15}, "tensorgrad.functions.sigmoid": {"qualname": 1, "fullname": 3, "annotation": 0, "default_value": 0, "signature": 39, "bases": 0, "doc": 12}, "tensorgrad.functions.softmax": {"qualname": 1, "fullname": 3, "annotation": 0, "default_value": 0, "signature": 80, "bases": 0, "doc": 3}, "tensorgrad.functions.pairwise_distance": {"qualname": 2, "fullname": 4, "annotation": 0, "default_value": 0, "signature": 101, "bases": 0, "doc": 3}, "tensorgrad.functions.cross_entropy": {"qualname": 2, "fullname": 4, "annotation": 0, "default_value": 0, "signature": 101, "bases": 0, "doc": 3}, "tensorgrad.functions.sign": {"qualname": 1, "fullname": 3, "annotation": 0, "default_value": 0, "signature": 39, "bases": 0, "doc": 27}, "tensorgrad.functions.gt0": {"qualname": 1, "fullname": 3, "annotation": 0, "default_value": 0, "signature": 39, "bases": 0, "doc": 16}, "tensorgrad.functions.gt": {"qualname": 1, "fullname": 3, "annotation": 0, "default_value": 0, "signature": 61, "bases": 0, "doc": 19}, "tensorgrad.functions.maximum": {"qualname": 1, "fullname": 3, "annotation": 0, "default_value": 0, "signature": 61, "bases": 0, "doc": 5}, "tensorgrad.functions.relu": {"qualname": 1, "fullname": 3, "annotation": 0, "default_value": 0, "signature": 39, "bases": 0, "doc": 3}, "tensorgrad.functions.abs": {"qualname": 1, "fullname": 3, "annotation": 0, "default_value": 0, "signature": 39, "bases": 0, "doc": 3}, "tensorgrad.functions.argmax": {"qualname": 1, "fullname": 3, "annotation": 0, "default_value": 0, "signature": 49, "bases": 0, "doc": 3}, "tensorgrad.functions.max_grad": {"qualname": 2, "fullname": 4, "annotation": 0, "default_value": 0, "signature": 80, "bases": 0, "doc": 112}, "tensorgrad.functions.max": {"qualname": 1, "fullname": 3, "annotation": 0, "default_value": 0, "signature": 98, "bases": 0, "doc": 24}, "tensorgrad.functions.concat": {"qualname": 1, "fullname": 3, "annotation": 0, "default_value": 0, "signature": 38, "bases": 0, "doc": 9}, "tensorgrad.functions.repeat": {"qualname": 1, "fullname": 3, "annotation": 0, "default_value": 0, "signature": 96, "bases": 0, "doc": 30}, "tensorgrad.functions.det": {"qualname": 1, "fullname": 3, "annotation": 0, "default_value": 0, "signature": 80, "bases": 0, "doc": 9}, "tensorgrad.functions.Convolution": {"qualname": 1, "fullname": 3, "annotation": 0, "default_value": 0, "signature": 0, "bases": 3, "doc": 13}, "tensorgrad.functions.Convolution.__init__": {"qualname": 3, "fullname": 5, "annotation": 0, "default_value": 0, "signature": 108, "bases": 0, "doc": 122}, "tensorgrad.functions.Convolution.stride": {"qualname": 2, "fullname": 4, "annotation": 0, "default_value": 0, "signature": 0, "bases": 0, "doc": 3}, "tensorgrad.functions.Reshape": {"qualname": 1, "fullname": 3, "annotation": 0, "default_value": 0, "signature": 0, "bases": 3, "doc": 12}, "tensorgrad.imgtools": {"qualname": 0, "fullname": 2, "annotation": 0, "default_value": 0, "signature": 0, "bases": 0, "doc": 3}, "tensorgrad.imgtools.compile_latex": {"qualname": 2, "fullname": 4, "annotation": 0, "default_value": 0, "signature": 25, "bases": 0, "doc": 3}, "tensorgrad.imgtools.combine_images_vertically": {"qualname": 3, "fullname": 5, "annotation": 0, "default_value": 0, "signature": 98, "bases": 0, "doc": 3}, "tensorgrad.imgtools.save_as_image": {"qualname": 3, "fullname": 5, "annotation": 0, "default_value": 0, "signature": 16, "bases": 0, "doc": 3}, "tensorgrad.imgtools.save_steps_old": {"qualname": 3, "fullname": 5, "annotation": 0, "default_value": 0, "signature": 22, "bases": 0, "doc": 3}, "tensorgrad.imgtools.save_steps": {"qualname": 2, "fullname": 4, "annotation": 0, "default_value": 0, "signature": 38, "bases": 0, "doc": 3}, "tensorgrad.imgtools.draw_structural_graph": {"qualname": 3, "fullname": 5, "annotation": 0, "default_value": 0, "signature": 21, "bases": 0, "doc": 3}, "tensorgrad.tensor": {"qualname": 0, "fullname": 2, "annotation": 0, "default_value": 0, "signature": 0, "bases": 0, "doc": 3}, "tensorgrad.tensor.TensorMeta": {"qualname": 1, "fullname": 3, "annotation": 0, "default_value": 0, "signature": 0, "bases": 2, "doc": 98}, "tensorgrad.tensor.Tensor": {"qualname": 1, "fullname": 3, "annotation": 0, "default_value": 0, "signature": 0, "bases": 0, "doc": 3}, "tensorgrad.tensor.Tensor.__init__": {"qualname": 3, "fullname": 5, "annotation": 0, "default_value": 0, "signature": 18, "bases": 0, "doc": 15}, "tensorgrad.tensor.Tensor.edges": {"qualname": 2, "fullname": 4, "annotation": 2, "default_value": 0, "signature": 0, "bases": 0, "doc": 9}, "tensorgrad.tensor.Tensor.shape": {"qualname": 2, "fullname": 4, "annotation": 6, "default_value": 0, "signature": 0, "bases": 0, "doc": 3}, "tensorgrad.tensor.Tensor.order": {"qualname": 2, "fullname": 4, "annotation": 2, "default_value": 0, "signature": 0, "bases": 0, "doc": 14}, "tensorgrad.tensor.Tensor.grad": {"qualname": 2, "fullname": 4, "annotation": 0, "default_value": 0, "signature": 81, "bases": 0, "doc": 92}, "tensorgrad.tensor.Tensor.rename": {"qualname": 2, "fullname": 4, "annotation": 0, "default_value": 0, "signature": 36, "bases": 0, "doc": 60}, "tensorgrad.tensor.Tensor.simplify": {"qualname": 2, "fullname": 4, "annotation": 0, "default_value": 0, "signature": 58, "bases": 0, "doc": 46}, "tensorgrad.tensor.Tensor.full_simplify": {"qualname": 3, "fullname": 5, "annotation": 0, "default_value": 0, "signature": 34, "bases": 0, "doc": 12}, "tensorgrad.tensor.Tensor.weisfeiler_lehman": {"qualname": 3, "fullname": 5, "annotation": 2, "default_value": 0, "signature": 0, "bases": 0, "doc": 12}, "tensorgrad.tensor.Tensor.depends_on": {"qualname": 3, "fullname": 5, "annotation": 0, "default_value": 0, "signature": 34, "bases": 0, "doc": 12}, "tensorgrad.tensor.Tensor.structural_graph": {"qualname": 3, "fullname": 5, "annotation": 0, "default_value": 0, "signature": 52, "bases": 0, "doc": 63}, "tensorgrad.tensor.Tensor.edge_structural_graph": {"qualname": 4, "fullname": 6, "annotation": 0, "default_value": 0, "signature": 100, "bases": 0, "doc": 62}, "tensorgrad.tensor.Tensor.graph_to_string": {"qualname": 4, "fullname": 6, "annotation": 0, "default_value": 0, "signature": 14, "bases": 0, "doc": 23}, "tensorgrad.tensor.Tensor.is_isomorphic": {"qualname": 3, "fullname": 5, "annotation": 0, "default_value": 0, "signature": 92, "bases": 0, "doc": 53}, "tensorgrad.tensor.Tensor.isomorphisms": {"qualname": 2, "fullname": 4, "annotation": 0, "default_value": 0, "signature": 64, "bases": 0, "doc": 37}, "tensorgrad.tensor.Tensor.symmetries": {"qualname": 2, "fullname": 4, "annotation": 2, "default_value": 0, "signature": 0, "bases": 0, "doc": 13}, "tensorgrad.tensor.Variable": {"qualname": 1, "fullname": 3, "annotation": 0, "default_value": 0, "signature": 0, "bases": 1, "doc": 3}, "tensorgrad.tensor.Variable.__init__": {"qualname": 3, "fullname": 5, "annotation": 0, "default_value": 0, "signature": 112, "bases": 0, "doc": 39}, "tensorgrad.tensor.Variable.name": {"qualname": 2, "fullname": 4, "annotation": 0, "default_value": 0, "signature": 0, "bases": 0, "doc": 3}, "tensorgrad.tensor.Variable.with_symmetries": {"qualname": 3, "fullname": 5, "annotation": 0, "default_value": 0, "signature": 52, "bases": 0, "doc": 3}, "tensorgrad.tensor.Variable.structural_graph": {"qualname": 3, "fullname": 5, "annotation": 0, "default_value": 0, "signature": 52, "bases": 0, "doc": 63}, "tensorgrad.tensor.Variable.depends_on": {"qualname": 3, "fullname": 5, "annotation": 0, "default_value": 0, "signature": 34, "bases": 0, "doc": 12}, "tensorgrad.tensor.Rename": {"qualname": 1, "fullname": 3, "annotation": 0, "default_value": 0, "signature": 0, "bases": 1, "doc": 34}, "tensorgrad.tensor.Rename.__init__": {"qualname": 3, "fullname": 5, "annotation": 0, "default_value": 0, "signature": 46, "bases": 0, "doc": 27}, "tensorgrad.tensor.Rename.name": {"qualname": 2, "fullname": 4, "annotation": 0, "default_value": 0, "signature": 0, "bases": 0, "doc": 3}, "tensorgrad.tensor.Rename.tensor": {"qualname": 2, "fullname": 4, "annotation": 0, "default_value": 0, "signature": 0, "bases": 0, "doc": 3}, "tensorgrad.tensor.Rename.mapping": {"qualname": 2, "fullname": 4, "annotation": 0, "default_value": 0, "signature": 0, "bases": 0, "doc": 3}, "tensorgrad.tensor.Rename.depends_on": {"qualname": 3, "fullname": 5, "annotation": 0, "default_value": 0, "signature": 34, "bases": 0, "doc": 12}, "tensorgrad.tensor.Rename.merge_renames": {"qualname": 3, "fullname": 5, "annotation": 0, "default_value": 0, "signature": 50, "bases": 0, "doc": 30}, "tensorgrad.tensor.Rename.structural_graph": {"qualname": 3, "fullname": 5, "annotation": 0, "default_value": 0, "signature": 52, "bases": 0, "doc": 63}, "tensorgrad.tensor.Constant": {"qualname": 1, "fullname": 3, "annotation": 0, "default_value": 0, "signature": 0, "bases": 3, "doc": 13}, "tensorgrad.tensor.Constant.__init__": {"qualname": 3, "fullname": 5, "annotation": 0, "default_value": 0, "signature": 93, "bases": 0, "doc": 27}, "tensorgrad.tensor.Constant.name": {"qualname": 2, "fullname": 4, "annotation": 0, "default_value": 0, "signature": 0, "bases": 0, "doc": 3}, "tensorgrad.tensor.Constant.with_symmetries": {"qualname": 3, "fullname": 5, "annotation": 0, "default_value": 0, "signature": 52, "bases": 0, "doc": 3}, "tensorgrad.tensor.Constant.structural_graph": {"qualname": 3, "fullname": 5, "annotation": 0, "default_value": 0, "signature": 52, "bases": 0, "doc": 63}, "tensorgrad.tensor.Constant.depends_on": {"qualname": 3, "fullname": 5, "annotation": 0, "default_value": 0, "signature": 34, "bases": 0, "doc": 12}, "tensorgrad.tensor.Delta": {"qualname": 1, "fullname": 3, "annotation": 0, "default_value": 0, "signature": 0, "bases": 1, "doc": 84}, "tensorgrad.tensor.Delta.__init__": {"qualname": 3, "fullname": 5, "annotation": 0, "default_value": 0, "signature": 41, "bases": 0, "doc": 25}, "tensorgrad.tensor.Delta.size": {"qualname": 2, "fullname": 4, "annotation": 5, "default_value": 0, "signature": 0, "bases": 0, "doc": 3}, "tensorgrad.tensor.Delta.simplify_outer": {"qualname": 3, "fullname": 5, "annotation": 0, "default_value": 0, "signature": 58, "bases": 0, "doc": 13}, "tensorgrad.tensor.Delta.structural_graph": {"qualname": 3, "fullname": 5, "annotation": 0, "default_value": 0, "signature": 52, "bases": 0, "doc": 63}, "tensorgrad.tensor.Zero": {"qualname": 1, "fullname": 3, "annotation": 0, "default_value": 0, "signature": 0, "bases": 1, "doc": 15}, "tensorgrad.tensor.Ones": {"qualname": 1, "fullname": 3, "annotation": 0, "default_value": 0, "signature": 75, "bases": 0, "doc": 15}, "tensorgrad.tensor.FunctionSignature": {"qualname": 1, "fullname": 3, "annotation": 0, "default_value": 0, "signature": 0, "bases": 2, "doc": 611}, "tensorgrad.tensor.FunctionSignature.__init__": {"qualname": 3, "fullname": 5, "annotation": 0, "default_value": 0, "signature": 57, "bases": 0, "doc": 3}, "tensorgrad.tensor.FunctionSignature.name": {"qualname": 2, "fullname": 4, "annotation": 2, "default_value": 0, "signature": 0, "bases": 0, "doc": 3}, "tensorgrad.tensor.FunctionSignature.edges": {"qualname": 2, "fullname": 4, "annotation": 2, "default_value": 0, "signature": 0, "bases": 0, "doc": 3}, "tensorgrad.tensor.FunctionSignature.inputs": {"qualname": 2, "fullname": 4, "annotation": 3, "default_value": 0, "signature": 0, "bases": 0, "doc": 3}, "tensorgrad.tensor.FunctionSignature.derivative": {"qualname": 2, "fullname": 4, "annotation": 0, "default_value": 0, "signature": 67, "bases": 0, "doc": 36}, "tensorgrad.tensor.FunctionSignature.simplify": {"qualname": 2, "fullname": 4, "annotation": 0, "default_value": 0, "signature": 74, "bases": 0, "doc": 26}, "tensorgrad.tensor.function": {"qualname": 1, "fullname": 3, "annotation": 0, "default_value": 0, "signature": 111, "bases": 0, "doc": 59}, "tensorgrad.tensor.Function": {"qualname": 1, "fullname": 3, "annotation": 0, "default_value": 0, "signature": 0, "bases": 1, "doc": 42}, "tensorgrad.tensor.Function.__init__": {"qualname": 3, "fullname": 5, "annotation": 0, "default_value": 0, "signature": 91, "bases": 0, "doc": 62}, "tensorgrad.tensor.Function.shape_out": {"qualname": 3, "fullname": 5, "annotation": 0, "default_value": 0, "signature": 0, "bases": 0, "doc": 3}, "tensorgrad.tensor.Function.inputs": {"qualname": 2, "fullname": 4, "annotation": 0, "default_value": 0, "signature": 0, "bases": 0, "doc": 3}, "tensorgrad.tensor.Function.signature": {"qualname": 2, "fullname": 4, "annotation": 0, "default_value": 0, "signature": 0, "bases": 0, "doc": 3}, "tensorgrad.tensor.Function.structural_graph": {"qualname": 3, "fullname": 5, "annotation": 0, "default_value": 0, "signature": 52, "bases": 0, "doc": 63}, "tensorgrad.tensor.Function.depends_on": {"qualname": 3, "fullname": 5, "annotation": 0, "default_value": 0, "signature": 34, "bases": 0, "doc": 12}, "tensorgrad.tensor.Derivative": {"qualname": 1, "fullname": 3, "annotation": 0, "default_value": 0, "signature": 0, "bases": 1, "doc": 16}, "tensorgrad.tensor.Derivative.__init__": {"qualname": 3, "fullname": 5, "annotation": 0, "default_value": 0, "signature": 81, "bases": 0, "doc": 43}, "tensorgrad.tensor.Derivative.tensor": {"qualname": 2, "fullname": 4, "annotation": 0, "default_value": 0, "signature": 0, "bases": 0, "doc": 3}, "tensorgrad.tensor.Derivative.x": {"qualname": 2, "fullname": 4, "annotation": 0, "default_value": 0, "signature": 0, "bases": 0, "doc": 3}, "tensorgrad.tensor.Derivative.new_names": {"qualname": 3, "fullname": 5, "annotation": 0, "default_value": 0, "signature": 0, "bases": 0, "doc": 3}, "tensorgrad.tensor.Derivative.structural_graph": {"qualname": 3, "fullname": 5, "annotation": 0, "default_value": 0, "signature": 52, "bases": 0, "doc": 63}, "tensorgrad.tensor.Derivative.depends_on": {"qualname": 3, "fullname": 5, "annotation": 0, "default_value": 0, "signature": 34, "bases": 0, "doc": 12}, "tensorgrad.tensor.Product": {"qualname": 1, "fullname": 3, "annotation": 0, "default_value": 0, "signature": 0, "bases": 1, "doc": 12}, "tensorgrad.tensor.Product.__init__": {"qualname": 3, "fullname": 5, "annotation": 0, "default_value": 0, "signature": 30, "bases": 0, "doc": 19}, "tensorgrad.tensor.Product.tensors": {"qualname": 2, "fullname": 4, "annotation": 0, "default_value": 0, "signature": 0, "bases": 0, "doc": 3}, "tensorgrad.tensor.Product.merge": {"qualname": 2, "fullname": 4, "annotation": 0, "default_value": 0, "signature": 45, "bases": 0, "doc": 37}, "tensorgrad.tensor.Product.components": {"qualname": 2, "fullname": 4, "annotation": 0, "default_value": 0, "signature": 30, "bases": 0, "doc": 22}, "tensorgrad.tensor.Product.structural_graph": {"qualname": 3, "fullname": 5, "annotation": 0, "default_value": 0, "signature": 52, "bases": 0, "doc": 63}, "tensorgrad.tensor.Product.depends_on": {"qualname": 3, "fullname": 5, "annotation": 0, "default_value": 0, "signature": 34, "bases": 0, "doc": 12}, "tensorgrad.tensor.Sum": {"qualname": 1, "fullname": 3, "annotation": 0, "default_value": 0, "signature": 0, "bases": 1, "doc": 9}, "tensorgrad.tensor.Sum.__init__": {"qualname": 3, "fullname": 5, "annotation": 0, "default_value": 0, "signature": 64, "bases": 0, "doc": 35}, "tensorgrad.tensor.Sum.tensors": {"qualname": 2, "fullname": 4, "annotation": 0, "default_value": 0, "signature": 0, "bases": 0, "doc": 3}, "tensorgrad.tensor.Sum.weights": {"qualname": 2, "fullname": 4, "annotation": 0, "default_value": 0, "signature": 0, "bases": 0, "doc": 3}, "tensorgrad.tensor.Sum.structural_graph": {"qualname": 3, "fullname": 5, "annotation": 0, "default_value": 0, "signature": 52, "bases": 0, "doc": 63}, "tensorgrad.tensor.Sum.depends_on": {"qualname": 3, "fullname": 5, "annotation": 0, "default_value": 0, "signature": 34, "bases": 0, "doc": 12}, "tensorgrad.testutils": {"qualname": 0, "fullname": 2, "annotation": 0, "default_value": 0, "signature": 0, "bases": 0, "doc": 3}, "tensorgrad.testutils.rand_values": {"qualname": 2, "fullname": 4, "annotation": 0, "default_value": 0, "signature": 108, "bases": 0, "doc": 3}, "tensorgrad.testutils.assert_close": {"qualname": 2, "fullname": 4, "annotation": 0, "default_value": 0, "signature": 38, "bases": 0, "doc": 3}, "tensorgrad.testutils.broadcast_tensors": {"qualname": 2, "fullname": 4, "annotation": 0, "default_value": 0, "signature": 18, "bases": 0, "doc": 3}, "tensorgrad.testutils.generate_copy": {"qualname": 2, "fullname": 4, "annotation": 0, "default_value": 0, "signature": 32, "bases": 0, "doc": 3}, "tensorgrad.testutils.generate_random_tensor_expression": {"qualname": 4, "fullname": 6, "annotation": 0, "default_value": 0, "signature": 79, "bases": 0, "doc": 3}, "tensorgrad.testutils.make_random_tree": {"qualname": 3, "fullname": 5, "annotation": 0, "default_value": 0, "signature": 16, "bases": 0, "doc": 3}, "tensorgrad.testutils.atlas_generate_random_tensor_expression": {"qualname": 5, "fullname": 7, "annotation": 0, "default_value": 0, "signature": 7, "bases": 0, "doc": 3}, "tensorgrad.testutils.random_tensor_expr": {"qualname": 3, "fullname": 5, "annotation": 0, "default_value": 0, "signature": 91, "bases": 0, "doc": 3}, "tensorgrad.testutils.random_tensor_expr2": {"qualname": 3, "fullname": 5, "annotation": 0, "default_value": 0, "signature": 66, "bases": 0, "doc": 3}, "tensorgrad.utils": {"qualname": 0, "fullname": 2, "annotation": 0, "default_value": 0, "signature": 0, "bases": 0, "doc": 3}, "tensorgrad.utils.DisjointSets": {"qualname": 1, "fullname": 3, "annotation": 0, "default_value": 0, "signature": 0, "bases": 3, "doc": 111}, "tensorgrad.utils.DisjointSets.parent": {"qualname": 2, "fullname": 4, "annotation": 3, "default_value": 0, "signature": 0, "bases": 0, "doc": 3}, "tensorgrad.utils.DisjointSets.values": {"qualname": 2, "fullname": 4, "annotation": 3, "default_value": 0, "signature": 0, "bases": 0, "doc": 3}, "tensorgrad.utils.DisjointSets.find": {"qualname": 2, "fullname": 4, "annotation": 0, "default_value": 0, "signature": 28, "bases": 0, "doc": 3}, "tensorgrad.utils.DisjointSets.union": {"qualname": 2, "fullname": 4, "annotation": 0, "default_value": 0, "signature": 38, "bases": 0, "doc": 3}, "tensorgrad.utils.DisjointSets.get": {"qualname": 2, "fullname": 4, "annotation": 0, "default_value": 0, "signature": 47, "bases": 0, "doc": 3}, "tensorgrad.utils.DisjointSets.items": {"qualname": 2, "fullname": 4, "annotation": 0, "default_value": 0, "signature": 38, "bases": 0, "doc": 3}, "tensorgrad.utils.KeyStoringDict": {"qualname": 1, "fullname": 3, "annotation": 0, "default_value": 0, "signature": 0, "bases": 0, "doc": 46}, "tensorgrad.utils.KeyStoringDict.__init__": {"qualname": 3, "fullname": 5, "annotation": 0, "default_value": 0, "signature": 18, "bases": 0, "doc": 37}, "tensorgrad.utils.KeyStoringDict.get_with_key": {"qualname": 4, "fullname": 6, "annotation": 0, "default_value": 0, "signature": 26, "bases": 0, "doc": 15}, "tensorgrad.utils.KeyStoringDict.get": {"qualname": 2, "fullname": 4, "annotation": 0, "default_value": 0, "signature": 26, "bases": 0, "doc": 13}, "tensorgrad.utils.KeyStoringDict.pop": {"qualname": 2, "fullname": 4, "annotation": 0, "default_value": 0, "signature": 16, "bases": 0, "doc": 20}, "tensorgrad.utils.KeyStoringDict.update": {"qualname": 2, "fullname": 4, "annotation": 0, "default_value": 0, "signature": 21, "bases": 0, "doc": 9}, "tensorgrad.utils.KeyStoringDict.keys": {"qualname": 2, "fullname": 4, "annotation": 0, "default_value": 0, "signature": 11, "bases": 0, "doc": 10}, "tensorgrad.utils.KeyStoringDict.values": {"qualname": 2, "fullname": 4, "annotation": 0, "default_value": 0, "signature": 11, "bases": 0, "doc": 11}, "tensorgrad.utils.KeyStoringDict.items": {"qualname": 2, "fullname": 4, "annotation": 0, "default_value": 0, "signature": 11, "bases": 0, "doc": 12}, "tensorgrad.utils.KeyStoringDict.copy": {"qualname": 2, "fullname": 4, "annotation": 0, "default_value": 0, "signature": 11, "bases": 0, "doc": 10}}, "length": 246, "save": true}, "index": {"qualname": {"root": {"docs": {"tensorgrad.extras.evaluate.Context.__init__": {"tf": 1}, "tensorgrad.extras.expectation.Expectation.__init__": {"tf": 1}, "tensorgrad.extras.to_tikz.NodeRef.__init__": {"tf": 1}, "tensorgrad.extras.to_tikz.TikzGraph.__init__": {"tf": 1}, "tensorgrad.functions.Convolution.__init__": {"tf": 1}, "tensorgrad.tensor.Tensor.__init__": {"tf": 1}, "tensorgrad.tensor.Variable.__init__": {"tf": 1}, "tensorgrad.tensor.Rename.__init__": {"tf": 1}, "tensorgrad.tensor.Constant.__init__": {"tf": 1}, "tensorgrad.tensor.Delta.__init__": {"tf": 1}, "tensorgrad.tensor.FunctionSignature.__init__": {"tf": 1}, "tensorgrad.tensor.Function.__init__": {"tf": 1}, "tensorgrad.tensor.Derivative.__init__": {"tf": 1}, "tensorgrad.tensor.Product.__init__": {"tf": 1}, "tensorgrad.tensor.Sum.__init__": {"tf": 1}, "tensorgrad.utils.KeyStoringDict.__init__": {"tf": 1}}, "df": 16, "e": {"docs": {}, "df": 0, "v": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "e": {"docs": {"tensorgrad.extras.evaluate.evaluate": {"tf": 1}, "tensorgrad.extras.evaluate.Context.evaluate": {"tf": 1}, "tensorgrad.extras.evaluate.evaluate_function": {"tf": 1}}, "df": 3}}}}}}}, "x": {"docs": {}, "df": 0, "p": {"docs": {"tensorgrad.functions.exp": {"tf": 1}}, "df": 1, "e": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {"tensorgrad.extras.expectation.Expectation": {"tf": 1}, "tensorgrad.extras.expectation.Expectation.__init__": {"tf": 1}, "tensorgrad.extras.expectation.Expectation.tensor": {"tf": 1}, "tensorgrad.extras.expectation.Expectation.wrt": {"tf": 1}, "tensorgrad.extras.expectation.Expectation.mu": {"tf": 1}, "tensorgrad.extras.expectation.Expectation.covar_names": {"tf": 1}, "tensorgrad.extras.expectation.Expectation.covar": {"tf": 1}, "tensorgrad.extras.expectation.Expectation.structural_graph": {"tf": 1}, "tensorgrad.extras.expectation.Expectation.depends_on": {"tf": 1}}, "df": 9}}}}}}}}, "r": {"2": {"docs": {"tensorgrad.testutils.random_tensor_expr2": {"tf": 1}}, "df": 1}, "docs": {"tensorgrad.testutils.random_tensor_expr": {"tf": 1}}, "df": 1, "e": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {"tensorgrad.testutils.generate_random_tensor_expression": {"tf": 1}, "tensorgrad.testutils.atlas_generate_random_tensor_expression": {"tf": 1}}, "df": 2}}}}}}}}}, "m": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "t": {"docs": {"tensorgrad.extras.to_numpy.CodegenContext.emit": {"tf": 1}, "tensorgrad.extras.to_pytorch.CodegenContext.emit": {"tf": 1}}, "df": 2}}}, "d": {"docs": {}, "df": 0, "g": {"docs": {}, "df": 0, "e": {"docs": {"tensorgrad.extras.to_tikz.NodeRef.edge_style": {"tf": 1}, "tensorgrad.extras.to_tikz.NodeRef.edge_label": {"tf": 1}, "tensorgrad.extras.to_tikz.Namer.edge_mapping": {"tf": 1}, "tensorgrad.extras.to_tikz.Namer.edge": {"tf": 1}, "tensorgrad.extras.to_tikz.TikzGraph.add_edge": {"tf": 1}, "tensorgrad.tensor.Tensor.edge_structural_graph": {"tf": 1}}, "df": 6, "s": {"docs": {"tensorgrad.extras.to_tikz.TikzGraph.handle_free_edges": {"tf": 1}, "tensorgrad.tensor.Tensor.edges": {"tf": 1}, "tensorgrad.tensor.FunctionSignature.edges": {"tf": 1}}, "df": 3}}}}, "n": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "y": {"docs": {"tensorgrad.functions.cross_entropy": {"tf": 1}}, "df": 1}}}}}}}, "c": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "x": {"docs": {}, "df": 0, "t": {"docs": {"tensorgrad.extras.evaluate.Context": {"tf": 1}, "tensorgrad.extras.evaluate.Context.__init__": {"tf": 1}, "tensorgrad.extras.evaluate.Context.values": {"tf": 1}, "tensorgrad.extras.evaluate.Context.dims": {"tf": 1}, "tensorgrad.extras.evaluate.Context.evaluate": {"tf": 1}}, "df": 5}}}, "r": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "t": {"docs": {"tensorgrad.functions.contract": {"tf": 1}}, "df": 1}}}}}, "c": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {"tensorgrad.functions.concat": {"tf": 1}}, "df": 1}}}, "v": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {"tensorgrad.functions.Convolution": {"tf": 1}, "tensorgrad.functions.Convolution.__init__": {"tf": 1}, "tensorgrad.functions.Convolution.stride": {"tf": 1}}, "df": 3}}}}}}}}, "s": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "t": {"docs": {"tensorgrad.tensor.Constant": {"tf": 1}, "tensorgrad.tensor.Constant.__init__": {"tf": 1}, "tensorgrad.tensor.Constant.name": {"tf": 1}, "tensorgrad.tensor.Constant.with_symmetries": {"tf": 1}, "tensorgrad.tensor.Constant.structural_graph": {"tf": 1}, "tensorgrad.tensor.Constant.depends_on": {"tf": 1}}, "df": 6}}}}}}, "v": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "r": {"docs": {"tensorgrad.extras.expectation.Expectation.covar_names": {"tf": 1}, "tensorgrad.extras.expectation.Expectation.covar": {"tf": 1}}, "df": 2}}}, "m": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "t": {"docs": {"tensorgrad.extras.to_formula_old.component_to_matrix": {"tf": 1}}, "df": 1, "s": {"docs": {"tensorgrad.tensor.Product.components": {"tf": 1}}, "df": 1}}}}}}, "i": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "e": {"docs": {"tensorgrad.extras.to_numpy.compile_to_callable": {"tf": 1}, "tensorgrad.extras.to_pytorch.compile_to_callable": {"tf": 1}, "tensorgrad.imgtools.compile_latex": {"tf": 1}}, "df": 3}}}}, "b": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "e": {"docs": {"tensorgrad.imgtools.combine_images_vertically": {"tf": 1}}, "df": 1}}}}}, "d": {"docs": {}, "df": 0, "e": {"docs": {"tensorgrad.extras.to_numpy.permute_code": {"tf": 1}}, "df": 1, "g": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "x": {"docs": {}, "df": 0, "t": {"docs": {"tensorgrad.extras.to_numpy.CodegenContext": {"tf": 1}, "tensorgrad.extras.to_numpy.CodegenContext.lines": {"tf": 1}, "tensorgrad.extras.to_numpy.CodegenContext.cache": {"tf": 1}, "tensorgrad.extras.to_numpy.CodegenContext.seen_variables": {"tf": 1}, "tensorgrad.extras.to_numpy.CodegenContext.seen_symbols": {"tf": 1}, "tensorgrad.extras.to_numpy.CodegenContext.seen_names": {"tf": 1}, "tensorgrad.extras.to_numpy.CodegenContext.var_types": {"tf": 1}, "tensorgrad.extras.to_numpy.CodegenContext.emit": {"tf": 1}, "tensorgrad.extras.to_numpy.CodegenContext.fresh_name": {"tf": 1}, "tensorgrad.extras.to_numpy.CodegenContext.declare_dimension": {"tf": 1}, "tensorgrad.extras.to_numpy.CodegenContext.set_var_type": {"tf": 1}, "tensorgrad.extras.to_numpy.CodegenContext.get_var_type": {"tf": 1}, "tensorgrad.extras.to_pytorch.CodegenContext": {"tf": 1}, "tensorgrad.extras.to_pytorch.CodegenContext.lines": {"tf": 1}, "tensorgrad.extras.to_pytorch.CodegenContext.cache": {"tf": 1}, "tensorgrad.extras.to_pytorch.CodegenContext.seen_variables": {"tf": 1}, "tensorgrad.extras.to_pytorch.CodegenContext.seen_symbols": {"tf": 1}, "tensorgrad.extras.to_pytorch.CodegenContext.seen_names": {"tf": 1}, "tensorgrad.extras.to_pytorch.CodegenContext.emit": {"tf": 1}, "tensorgrad.extras.to_pytorch.CodegenContext.fresh_name": {"tf": 1}, "tensorgrad.extras.to_pytorch.CodegenContext.declare_dimension": {"tf": 1}}, "df": 21}}}}}}}}}}}}, "u": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {"tensorgrad.extras.to_tikz.Namer.counter": {"tf": 1}}, "df": 1}}}}}, "p": {"docs": {}, "df": 0, "y": {"docs": {"tensorgrad.testutils.generate_copy": {"tf": 1}, "tensorgrad.utils.KeyStoringDict.copy": {"tf": 1}}, "df": 2}}}, "a": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "b": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "e": {"docs": {"tensorgrad.extras.to_numpy.compile_to_callable": {"tf": 1}, "tensorgrad.extras.to_pytorch.compile_to_callable": {"tf": 1}}, "df": 2}}}}}}, "c": {"docs": {}, "df": 0, "h": {"docs": {}, "df": 0, "e": {"docs": {"tensorgrad.extras.to_numpy.CodegenContext.cache": {"tf": 1}, "tensorgrad.extras.to_pytorch.CodegenContext.cache": {"tf": 1}}, "df": 2}}}}, "h": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "e": {"docs": {"tensorgrad.extras.to_tikz.choose_layout": {"tf": 1}}, "df": 1}}}}}, "r": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "s": {"docs": {"tensorgrad.functions.cross_entropy": {"tf": 1}}, "df": 1}}}}, "l": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "e": {"docs": {"tensorgrad.testutils.assert_close": {"tf": 1}}, "df": 1}}}}}, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "t": {"docs": {"tensorgrad.extras.evaluate.Context.__init__": {"tf": 1}, "tensorgrad.extras.expectation.Expectation.__init__": {"tf": 1}, "tensorgrad.extras.to_tikz.NodeRef.__init__": {"tf": 1}, "tensorgrad.extras.to_tikz.TikzGraph.__init__": {"tf": 1}, "tensorgrad.functions.Convolution.__init__": {"tf": 1}, "tensorgrad.tensor.Tensor.__init__": {"tf": 1}, "tensorgrad.tensor.Variable.__init__": {"tf": 1}, "tensorgrad.tensor.Rename.__init__": {"tf": 1}, "tensorgrad.tensor.Constant.__init__": {"tf": 1}, "tensorgrad.tensor.Delta.__init__": {"tf": 1}, "tensorgrad.tensor.FunctionSignature.__init__": {"tf": 1}, "tensorgrad.tensor.Function.__init__": {"tf": 1}, "tensorgrad.tensor.Derivative.__init__": {"tf": 1}, "tensorgrad.tensor.Product.__init__": {"tf": 1}, "tensorgrad.tensor.Sum.__init__": {"tf": 1}, "tensorgrad.utils.KeyStoringDict.__init__": {"tf": 1}}, "df": 16}}, "d": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "x": {"docs": {"tensorgrad.extras.to_latex.to_latex_index_free": {"tf": 1}}, "df": 1, "e": {"docs": {}, "df": 0, "d": {"docs": {"tensorgrad.extras.to_latex.to_latex_indexed": {"tf": 1}}, "df": 1}}}}}, "v": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "e": {"docs": {"tensorgrad.functions.inverse": {"tf": 1}}, "df": 1}}}}}, "p": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "s": {"docs": {"tensorgrad.tensor.FunctionSignature.inputs": {"tf": 1}, "tensorgrad.tensor.Function.inputs": {"tf": 1}}, "df": 2}}}}}, "m": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "g": {"docs": {}, "df": 0, "e": {"docs": {"tensorgrad.imgtools.save_as_image": {"tf": 1}}, "df": 1, "s": {"docs": {"tensorgrad.imgtools.combine_images_vertically": {"tf": 1}}, "df": 1}}}}}, "s": {"docs": {"tensorgrad.tensor.Tensor.is_isomorphic": {"tf": 1}}, "df": 1, "o": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "h": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "c": {"docs": {"tensorgrad.tensor.Tensor.is_isomorphic": {"tf": 1}}, "df": 1}, "s": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "s": {"docs": {"tensorgrad.tensor.Tensor.isomorphisms": {"tf": 1}}, "df": 1}}}}}}}}}}}, "t": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "s": {"docs": {"tensorgrad.utils.DisjointSets.items": {"tf": 1}, "tensorgrad.utils.KeyStoringDict.items": {"tf": 1}}, "df": 2}}}}}, "v": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "s": {"docs": {"tensorgrad.extras.evaluate.Context.values": {"tf": 1}, "tensorgrad.testutils.rand_values": {"tf": 1}, "tensorgrad.utils.DisjointSets.values": {"tf": 1}, "tensorgrad.utils.KeyStoringDict.values": {"tf": 1}}, "df": 4}}}}, "r": {"docs": {"tensorgrad.extras.to_numpy.CodegenContext.var_types": {"tf": 1}, "tensorgrad.extras.to_numpy.CodegenContext.set_var_type": {"tf": 1}, "tensorgrad.extras.to_numpy.CodegenContext.get_var_type": {"tf": 1}}, "df": 3, "i": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "b": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "e": {"docs": {"tensorgrad.tensor.Variable": {"tf": 1}, "tensorgrad.tensor.Variable.__init__": {"tf": 1}, "tensorgrad.tensor.Variable.name": {"tf": 1}, "tensorgrad.tensor.Variable.with_symmetries": {"tf": 1}, "tensorgrad.tensor.Variable.structural_graph": {"tf": 1}, "tensorgrad.tensor.Variable.depends_on": {"tf": 1}}, "df": 6, "s": {"docs": {"tensorgrad.extras.to_numpy.CodegenContext.seen_variables": {"tf": 1}, "tensorgrad.extras.to_pytorch.CodegenContext.seen_variables": {"tf": 1}}, "df": 2}}}}}}}}, "e": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "y": {"docs": {"tensorgrad.imgtools.combine_images_vertically": {"tf": 1}}, "df": 1}}}}}}}}}}, "d": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "m": {"docs": {"tensorgrad.functions.parse_dim": {"tf": 1}}, "df": 1, "s": {"docs": {"tensorgrad.extras.evaluate.Context.dims": {"tf": 1}}, "df": 1}, "e": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {"tensorgrad.extras.to_numpy.CodegenContext.declare_dimension": {"tf": 1}, "tensorgrad.extras.to_pytorch.CodegenContext.declare_dimension": {"tf": 1}}, "df": 2}}}}}}, "t": {"docs": {}, "df": 0, "y": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "e": {"docs": {"tensorgrad.functions.DimType": {"tf": 1}}, "df": 1}}}}}, "s": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "h": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {"tensorgrad.extras.to_tikz.depth_tracking_dispatcher": {"tf": 1}, "tensorgrad.extras.to_tikz.depth_tracking_dispatcher.register": {"tf": 1}}, "df": 2}}}}}}}, "t": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "e": {"docs": {"tensorgrad.functions.pairwise_distance": {"tf": 1}}, "df": 1}}}}}, "j": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "s": {"docs": {"tensorgrad.utils.DisjointSets": {"tf": 1}, "tensorgrad.utils.DisjointSets.parent": {"tf": 1}, "tensorgrad.utils.DisjointSets.values": {"tf": 1}, "tensorgrad.utils.DisjointSets.find": {"tf": 1}, "tensorgrad.utils.DisjointSets.union": {"tf": 1}, "tensorgrad.utils.DisjointSets.get": {"tf": 1}, "tensorgrad.utils.DisjointSets.items": {"tf": 1}}, "df": 7}}}}}}}}}}, "a": {"docs": {}, "df": 0, "g": {"docs": {"tensorgrad.functions.diag": {"tf": 1}}, "df": 1}}}, "e": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "s": {"docs": {"tensorgrad.extras.expectation.Expectation.depends_on": {"tf": 1}, "tensorgrad.tensor.Tensor.depends_on": {"tf": 1}, "tensorgrad.tensor.Variable.depends_on": {"tf": 1}, "tensorgrad.tensor.Rename.depends_on": {"tf": 1}, "tensorgrad.tensor.Constant.depends_on": {"tf": 1}, "tensorgrad.tensor.Function.depends_on": {"tf": 1}, "tensorgrad.tensor.Derivative.depends_on": {"tf": 1}, "tensorgrad.tensor.Product.depends_on": {"tf": 1}, "tensorgrad.tensor.Sum.depends_on": {"tf": 1}}, "df": 9}}}}, "t": {"docs": {}, "df": 0, "h": {"docs": {"tensorgrad.extras.to_tikz.depth_tracking_dispatcher": {"tf": 1}, "tensorgrad.extras.to_tikz.depth_tracking_dispatcher.register": {"tf": 1}, "tensorgrad.extras.to_tikz.TikzGraph.depth": {"tf": 1}}, "df": 3}}}, "c": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "e": {"docs": {"tensorgrad.extras.to_numpy.CodegenContext.declare_dimension": {"tf": 1}, "tensorgrad.extras.to_pytorch.CodegenContext.declare_dimension": {"tf": 1}}, "df": 2}}}}}, "t": {"docs": {"tensorgrad.functions.det": {"tf": 1}}, "df": 1}, "l": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "a": {"docs": {"tensorgrad.tensor.Delta": {"tf": 1}, "tensorgrad.tensor.Delta.__init__": {"tf": 1}, "tensorgrad.tensor.Delta.size": {"tf": 1}, "tensorgrad.tensor.Delta.simplify_outer": {"tf": 1}, "tensorgrad.tensor.Delta.structural_graph": {"tf": 1}}, "df": 5}}}, "r": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "v": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "v": {"docs": {}, "df": 0, "e": {"docs": {"tensorgrad.tensor.FunctionSignature.derivative": {"tf": 1}, "tensorgrad.tensor.Derivative": {"tf": 1}, "tensorgrad.tensor.Derivative.__init__": {"tf": 1}, "tensorgrad.tensor.Derivative.tensor": {"tf": 1}, "tensorgrad.tensor.Derivative.x": {"tf": 1}, "tensorgrad.tensor.Derivative.new_names": {"tf": 1}, "tensorgrad.tensor.Derivative.structural_graph": {"tf": 1}, "tensorgrad.tensor.Derivative.depends_on": {"tf": 1}}, "df": 8}}}}}}}}}, "f": {"docs": {}, "df": 0, "s": {"docs": {"tensorgrad.extras.to_formula_old.dfs": {"tf": 1}}, "df": 1}}, "o": {"docs": {}, "df": 0, "t": {"docs": {"tensorgrad.functions.dot": {"tf": 1}, "tensorgrad.functions.multi_dot": {"tf": 1}}, "df": 2}}, "r": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "w": {"docs": {"tensorgrad.imgtools.draw_structural_graph": {"tf": 1}}, "df": 1}}}}, "f": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {"tensorgrad.extras.evaluate.evaluate_function": {"tf": 1}, "tensorgrad.extras.to_tikz.format_function": {"tf": 1}, "tensorgrad.tensor.function": {"tf": 1}, "tensorgrad.tensor.Function": {"tf": 1}, "tensorgrad.tensor.Function.__init__": {"tf": 1}, "tensorgrad.tensor.Function.shape_out": {"tf": 1}, "tensorgrad.tensor.Function.inputs": {"tf": 1}, "tensorgrad.tensor.Function.signature": {"tf": 1}, "tensorgrad.tensor.Function.structural_graph": {"tf": 1}, "tensorgrad.tensor.Function.depends_on": {"tf": 1}}, "df": 10, "s": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "g": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "e": {"docs": {"tensorgrad.tensor.FunctionSignature": {"tf": 1}, "tensorgrad.tensor.FunctionSignature.__init__": {"tf": 1}, "tensorgrad.tensor.FunctionSignature.name": {"tf": 1}, "tensorgrad.tensor.FunctionSignature.edges": {"tf": 1}, "tensorgrad.tensor.FunctionSignature.inputs": {"tf": 1}, "tensorgrad.tensor.FunctionSignature.derivative": {"tf": 1}, "tensorgrad.tensor.FunctionSignature.simplify": {"tf": 1}}, "df": 7}}}}}}}}}}}}}}}, "l": {"docs": {}, "df": 0, "l": {"docs": {"tensorgrad.tensor.Tensor.full_simplify": {"tf": 1}}, "df": 1}}}, "o": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "a": {"docs": {"tensorgrad.extras.to_formula_old.to_simple_matrix_formula": {"tf": 1}}, "df": 1}}}, "a": {"docs": {}, "df": 0, "t": {"docs": {"tensorgrad.extras.to_tikz.format_label": {"tf": 1}, "tensorgrad.extras.to_tikz.format_weight": {"tf": 1}, "tensorgrad.extras.to_tikz.format_function": {"tf": 1}}, "df": 3}}}}}, "r": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "e": {"docs": {"tensorgrad.extras.to_latex.to_latex_index_free": {"tf": 1}, "tensorgrad.extras.to_tikz.TikzGraph.handle_free_edges": {"tf": 1}}, "df": 2}, "s": {"docs": {}, "df": 0, "h": {"docs": {"tensorgrad.extras.to_numpy.CodegenContext.fresh_name": {"tf": 1}, "tensorgrad.extras.to_pytorch.CodegenContext.fresh_name": {"tf": 1}, "tensorgrad.extras.to_tikz.Namer.fresh_name": {"tf": 1}}, "df": 3}}}, "o": {"docs": {}, "df": 0, "b": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "s": {"2": {"docs": {"tensorgrad.functions.frobenius2": {"tf": 1}}, "df": 1}, "docs": {}, "df": 0}}}}}}}}, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "d": {"docs": {"tensorgrad.utils.DisjointSets.find": {"tf": 1}}, "df": 1}}}}, "t": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "r": {"docs": {"tensorgrad.extras.expectation.Expectation.tensor": {"tf": 1}, "tensorgrad.tensor.Tensor": {"tf": 1}, "tensorgrad.tensor.Tensor.__init__": {"tf": 1}, "tensorgrad.tensor.Tensor.edges": {"tf": 1}, "tensorgrad.tensor.Tensor.shape": {"tf": 1}, "tensorgrad.tensor.Tensor.order": {"tf": 1}, "tensorgrad.tensor.Tensor.grad": {"tf": 1}, "tensorgrad.tensor.Tensor.rename": {"tf": 1}, "tensorgrad.tensor.Tensor.simplify": {"tf": 1}, "tensorgrad.tensor.Tensor.full_simplify": {"tf": 1}, "tensorgrad.tensor.Tensor.weisfeiler_lehman": {"tf": 1}, "tensorgrad.tensor.Tensor.depends_on": {"tf": 1}, "tensorgrad.tensor.Tensor.structural_graph": {"tf": 1}, "tensorgrad.tensor.Tensor.edge_structural_graph": {"tf": 1}, "tensorgrad.tensor.Tensor.graph_to_string": {"tf": 1}, "tensorgrad.tensor.Tensor.is_isomorphic": {"tf": 1}, "tensorgrad.tensor.Tensor.isomorphisms": {"tf": 1}, "tensorgrad.tensor.Tensor.symmetries": {"tf": 1}, "tensorgrad.tensor.Rename.tensor": {"tf": 1}, "tensorgrad.tensor.Derivative.tensor": {"tf": 1}, "tensorgrad.testutils.generate_random_tensor_expression": {"tf": 1}, "tensorgrad.testutils.atlas_generate_random_tensor_expression": {"tf": 1}, "tensorgrad.testutils.random_tensor_expr": {"tf": 1}, "tensorgrad.testutils.random_tensor_expr2": {"tf": 1}}, "df": 24, "m": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "a": {"docs": {"tensorgrad.tensor.TensorMeta": {"tf": 1}}, "df": 1}}}}, "s": {"docs": {"tensorgrad.tensor.Product.tensors": {"tf": 1}, "tensorgrad.tensor.Sum.tensors": {"tf": 1}, "tensorgrad.testutils.broadcast_tensors": {"tf": 1}}, "df": 3}}}}}}, "o": {"docs": {"tensorgrad.extras.to_formula_old.to_simple_matrix_formula": {"tf": 1}, "tensorgrad.extras.to_formula_old.component_to_matrix": {"tf": 1}, "tensorgrad.extras.to_latex.to_latex_indexed": {"tf": 1}, "tensorgrad.extras.to_latex.to_latex_index_free": {"tf": 1}, "tensorgrad.extras.to_latex.to_latex": {"tf": 1}, "tensorgrad.extras.to_numpy.compile_to_callable": {"tf": 1}, "tensorgrad.extras.to_pytorch.compile_to_callable": {"tf": 1}, "tensorgrad.extras.to_tikz.to_tikz": {"tf": 1}, "tensorgrad.extras.to_tikz.TikzGraph.to_tikz": {"tf": 1}, "tensorgrad.tensor.Tensor.graph_to_string": {"tf": 1}}, "df": 10}, "y": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "e": {"docs": {"tensorgrad.extras.to_numpy.CodegenContext.set_var_type": {"tf": 1}, "tensorgrad.extras.to_numpy.CodegenContext.get_var_type": {"tf": 1}}, "df": 2, "s": {"docs": {"tensorgrad.extras.to_numpy.CodegenContext.var_types": {"tf": 1}}, "df": 1}}}}, "i": {"docs": {}, "df": 0, "k": {"docs": {}, "df": 0, "z": {"docs": {"tensorgrad.extras.to_tikz.to_tikz": {"tf": 1}, "tensorgrad.extras.to_tikz.TikzGraph.to_tikz": {"tf": 1}}, "df": 2, "g": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "h": {"docs": {"tensorgrad.extras.to_tikz.TikzGraph": {"tf": 1}, "tensorgrad.extras.to_tikz.TikzGraph.__init__": {"tf": 1}, "tensorgrad.extras.to_tikz.TikzGraph.lines": {"tf": 1}, "tensorgrad.extras.to_tikz.TikzGraph.namer": {"tf": 1}, "tensorgrad.extras.to_tikz.TikzGraph.depth": {"tf": 1}, "tensorgrad.extras.to_tikz.TikzGraph.added_node_names": {"tf": 1}, "tensorgrad.extras.to_tikz.TikzGraph.subgraph": {"tf": 1}, "tensorgrad.extras.to_tikz.TikzGraph.to_tikz": {"tf": 1}, "tensorgrad.extras.to_tikz.TikzGraph.add_node": {"tf": 1}, "tensorgrad.extras.to_tikz.TikzGraph.add_edge": {"tf": 1}, "tensorgrad.extras.to_tikz.TikzGraph.add_subgraph": {"tf": 1}, "tensorgrad.extras.to_tikz.TikzGraph.handle_free_edges": {"tf": 1}}, "df": 12}}}}}}}}, "r": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "k": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {"tensorgrad.extras.to_tikz.depth_tracking_dispatcher": {"tf": 1}, "tensorgrad.extras.to_tikz.depth_tracking_dispatcher.register": {"tf": 1}}, "df": 2}}}}, "e": {"docs": {"tensorgrad.functions.trace": {"tf": 1}}, "df": 1}}}, "e": {"docs": {}, "df": 0, "e": {"docs": {"tensorgrad.extras.to_tikz.tree_layout": {"tf": 1}, "tensorgrad.testutils.make_random_tree": {"tf": 1}}, "df": 2}}}, "a": {"docs": {}, "df": 0, "y": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "r": {"docs": {"tensorgrad.functions.taylor": {"tf": 1}}, "df": 1}}}}, "n": {"docs": {}, "df": 0, "h": {"docs": {"tensorgrad.functions.tanh": {"tf": 1}}, "df": 1}}}}, "w": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "t": {"docs": {"tensorgrad.extras.expectation.Expectation.wrt": {"tf": 1}}, "df": 1}}, "e": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "g": {"docs": {}, "df": 0, "h": {"docs": {}, "df": 0, "t": {"docs": {"tensorgrad.extras.to_tikz.format_weight": {"tf": 1}}, "df": 1, "s": {"docs": {"tensorgrad.tensor.Sum.weights": {"tf": 1}}, "df": 1}}}}, "s": {"docs": {}, "df": 0, "f": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {"tensorgrad.tensor.Tensor.weisfeiler_lehman": {"tf": 1}}, "df": 1}}}}}}}}}, "i": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "h": {"docs": {"tensorgrad.tensor.Variable.with_symmetries": {"tf": 1}, "tensorgrad.tensor.Constant.with_symmetries": {"tf": 1}, "tensorgrad.utils.KeyStoringDict.get_with_key": {"tf": 1}}, "df": 3}}}}, "m": {"docs": {}, "df": 0, "u": {"docs": {"tensorgrad.extras.expectation.Expectation.mu": {"tf": 1}}, "df": 1, "l": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {"tensorgrad.functions.multi_dot": {"tf": 1}}, "df": 1}}}}, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "x": {"docs": {"tensorgrad.extras.to_formula_old.to_simple_matrix_formula": {"tf": 1}, "tensorgrad.extras.to_formula_old.component_to_matrix": {"tf": 1}}, "df": 2}}}}, "p": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {"tensorgrad.extras.to_tikz.Namer.edge_mapping": {"tf": 1}, "tensorgrad.tensor.Rename.mapping": {"tf": 1}}, "df": 2}}}}}, "x": {"docs": {"tensorgrad.functions.max_grad": {"tf": 1}, "tensorgrad.functions.max": {"tf": 1}}, "df": 2, "i": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "m": {"docs": {"tensorgrad.functions.maximum": {"tf": 1}}, "df": 1}}}}}, "k": {"docs": {}, "df": 0, "e": {"docs": {"tensorgrad.testutils.make_random_tree": {"tf": 1}}, "df": 1}}}, "e": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "n": {"docs": {"tensorgrad.functions.mean": {"tf": 1}}, "df": 1}}, "r": {"docs": {}, "df": 0, "g": {"docs": {}, "df": 0, "e": {"docs": {"tensorgrad.tensor.Rename.merge_renames": {"tf": 1}, "tensorgrad.tensor.Product.merge": {"tf": 1}}, "df": 2}}}}}, "n": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "e": {"docs": {"tensorgrad.extras.to_numpy.CodegenContext.fresh_name": {"tf": 1}, "tensorgrad.extras.to_pytorch.CodegenContext.fresh_name": {"tf": 1}, "tensorgrad.extras.to_tikz.NodeRef.name": {"tf": 1}, "tensorgrad.extras.to_tikz.Namer.fresh_name": {"tf": 1}, "tensorgrad.tensor.Variable.name": {"tf": 1}, "tensorgrad.tensor.Rename.name": {"tf": 1}, "tensorgrad.tensor.Constant.name": {"tf": 1}, "tensorgrad.tensor.FunctionSignature.name": {"tf": 1}}, "df": 8, "s": {"docs": {"tensorgrad.extras.expectation.Expectation.covar_names": {"tf": 1}, "tensorgrad.extras.to_numpy.CodegenContext.seen_names": {"tf": 1}, "tensorgrad.extras.to_pytorch.CodegenContext.seen_names": {"tf": 1}, "tensorgrad.extras.to_tikz.TikzGraph.added_node_names": {"tf": 1}, "tensorgrad.tensor.Derivative.new_names": {"tf": 1}}, "df": 5}, "r": {"docs": {"tensorgrad.extras.to_tikz.Namer": {"tf": 1}, "tensorgrad.extras.to_tikz.Namer.counter": {"tf": 1}, "tensorgrad.extras.to_tikz.Namer.edge_mapping": {"tf": 1}, "tensorgrad.extras.to_tikz.Namer.fresh_name": {"tf": 1}, "tensorgrad.extras.to_tikz.Namer.edge": {"tf": 1}, "tensorgrad.extras.to_tikz.TikzGraph.namer": {"tf": 1}}, "df": 6}}}}, "o": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "e": {"docs": {"tensorgrad.extras.to_tikz.TikzGraph.added_node_names": {"tf": 1}, "tensorgrad.extras.to_tikz.TikzGraph.add_node": {"tf": 1}}, "df": 2, "r": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "f": {"docs": {"tensorgrad.extras.to_tikz.NodeRef": {"tf": 1}, "tensorgrad.extras.to_tikz.NodeRef.__init__": {"tf": 1}, "tensorgrad.extras.to_tikz.NodeRef.name": {"tf": 1}, "tensorgrad.extras.to_tikz.NodeRef.edge_style": {"tf": 1}, "tensorgrad.extras.to_tikz.NodeRef.edge_label": {"tf": 1}}, "df": 5}}}}}}, "e": {"docs": {}, "df": 0, "w": {"docs": {"tensorgrad.tensor.Derivative.new_names": {"tf": 1}}, "df": 1}}}, "s": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "l": {"docs": {"tensorgrad.extras.expectation.Expectation.structural_graph": {"tf": 1}, "tensorgrad.imgtools.draw_structural_graph": {"tf": 1}, "tensorgrad.tensor.Tensor.structural_graph": {"tf": 1}, "tensorgrad.tensor.Tensor.edge_structural_graph": {"tf": 1}, "tensorgrad.tensor.Variable.structural_graph": {"tf": 1}, "tensorgrad.tensor.Rename.structural_graph": {"tf": 1}, "tensorgrad.tensor.Constant.structural_graph": {"tf": 1}, "tensorgrad.tensor.Delta.structural_graph": {"tf": 1}, "tensorgrad.tensor.Function.structural_graph": {"tf": 1}, "tensorgrad.tensor.Derivative.structural_graph": {"tf": 1}, "tensorgrad.tensor.Product.structural_graph": {"tf": 1}, "tensorgrad.tensor.Sum.structural_graph": {"tf": 1}}, "df": 12}}}}}}}, "i": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "e": {"docs": {"tensorgrad.functions.Convolution.stride": {"tf": 1}}, "df": 1}}, "n": {"docs": {}, "df": 0, "g": {"docs": {"tensorgrad.tensor.Tensor.graph_to_string": {"tf": 1}}, "df": 1}}}}, "y": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "e": {"docs": {"tensorgrad.extras.to_tikz.NodeRef.edge_style": {"tf": 1}}, "df": 1}}}, "e": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "s": {"docs": {"tensorgrad.imgtools.save_steps_old": {"tf": 1}, "tensorgrad.imgtools.save_steps": {"tf": 1}}, "df": 2}}}}, "i": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "e": {"docs": {"tensorgrad.extras.to_formula_old.to_simple_matrix_formula": {"tf": 1}}, "df": 1}, "i": {"docs": {}, "df": 0, "f": {"docs": {}, "df": 0, "y": {"docs": {"tensorgrad.tensor.Tensor.simplify": {"tf": 1}, "tensorgrad.tensor.Tensor.full_simplify": {"tf": 1}, "tensorgrad.tensor.Delta.simplify_outer": {"tf": 1}, "tensorgrad.tensor.FunctionSignature.simplify": {"tf": 1}}, "df": 4}}}}}}, "g": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "d": {"docs": {"tensorgrad.functions.sigmoid": {"tf": 1}}, "df": 1}}}}, "n": {"docs": {"tensorgrad.functions.sign": {"tf": 1}}, "df": 1, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "e": {"docs": {"tensorgrad.tensor.Function.signature": {"tf": 1}}, "df": 1}}}}}}}, "z": {"docs": {}, "df": 0, "e": {"docs": {"tensorgrad.tensor.Delta.size": {"tf": 1}}, "df": 1}}}, "e": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "n": {"docs": {"tensorgrad.extras.to_numpy.CodegenContext.seen_variables": {"tf": 1}, "tensorgrad.extras.to_numpy.CodegenContext.seen_symbols": {"tf": 1}, "tensorgrad.extras.to_numpy.CodegenContext.seen_names": {"tf": 1}, "tensorgrad.extras.to_pytorch.CodegenContext.seen_variables": {"tf": 1}, "tensorgrad.extras.to_pytorch.CodegenContext.seen_symbols": {"tf": 1}, "tensorgrad.extras.to_pytorch.CodegenContext.seen_names": {"tf": 1}}, "df": 6}}, "t": {"docs": {"tensorgrad.extras.to_numpy.CodegenContext.set_var_type": {"tf": 1}}, "df": 1}}, "y": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "b": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "s": {"docs": {"tensorgrad.extras.to_numpy.CodegenContext.seen_symbols": {"tf": 1}, "tensorgrad.extras.to_pytorch.CodegenContext.seen_symbols": {"tf": 1}}, "df": 2}}}}, "m": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "z": {"docs": {}, "df": 0, "e": {"docs": {"tensorgrad.functions.symmetrize": {"tf": 1}}, "df": 1}}, "e": {"docs": {}, "df": 0, "s": {"docs": {"tensorgrad.tensor.Tensor.symmetries": {"tf": 1}, "tensorgrad.tensor.Variable.with_symmetries": {"tf": 1}, "tensorgrad.tensor.Constant.with_symmetries": {"tf": 1}}, "df": 3}}}}}}}}}, "u": {"docs": {}, "df": 0, "b": {"docs": {}, "df": 0, "g": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "h": {"docs": {"tensorgrad.extras.to_tikz.TikzGraph.subgraph": {"tf": 1}, "tensorgrad.extras.to_tikz.TikzGraph.add_subgraph": {"tf": 1}}, "df": 2}}}}}}, "m": {"docs": {"tensorgrad.functions.sum": {"tf": 1}, "tensorgrad.tensor.Sum": {"tf": 1}, "tensorgrad.tensor.Sum.__init__": {"tf": 1}, "tensorgrad.tensor.Sum.tensors": {"tf": 1}, "tensorgrad.tensor.Sum.weights": {"tf": 1}, "tensorgrad.tensor.Sum.structural_graph": {"tf": 1}, "tensorgrad.tensor.Sum.depends_on": {"tf": 1}}, "df": 7}}, "p": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {"tensorgrad.extras.to_tikz.spring_layout": {"tf": 1}}, "df": 1}}}}}, "q": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "t": {"docs": {"tensorgrad.functions.sqrt": {"tf": 1}}, "df": 1}}}, "o": {"docs": {}, "df": 0, "f": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "x": {"docs": {"tensorgrad.functions.softmax": {"tf": 1}}, "df": 1}}}}}}, "a": {"docs": {}, "df": 0, "v": {"docs": {}, "df": 0, "e": {"docs": {"tensorgrad.imgtools.save_as_image": {"tf": 1}, "tensorgrad.imgtools.save_steps_old": {"tf": 1}, "tensorgrad.imgtools.save_steps": {"tf": 1}}, "df": 3}}}, "h": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "e": {"docs": {"tensorgrad.tensor.Tensor.shape": {"tf": 1}, "tensorgrad.tensor.Function.shape_out": {"tf": 1}}, "df": 2}}}}}, "g": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "h": {"docs": {"tensorgrad.extras.expectation.Expectation.structural_graph": {"tf": 1}, "tensorgrad.functions.graph": {"tf": 1}, "tensorgrad.imgtools.draw_structural_graph": {"tf": 1}, "tensorgrad.tensor.Tensor.structural_graph": {"tf": 1}, "tensorgrad.tensor.Tensor.edge_structural_graph": {"tf": 1}, "tensorgrad.tensor.Tensor.graph_to_string": {"tf": 1}, "tensorgrad.tensor.Variable.structural_graph": {"tf": 1}, "tensorgrad.tensor.Rename.structural_graph": {"tf": 1}, "tensorgrad.tensor.Constant.structural_graph": {"tf": 1}, "tensorgrad.tensor.Delta.structural_graph": {"tf": 1}, "tensorgrad.tensor.Function.structural_graph": {"tf": 1}, "tensorgrad.tensor.Derivative.structural_graph": {"tf": 1}, "tensorgrad.tensor.Product.structural_graph": {"tf": 1}, "tensorgrad.tensor.Sum.structural_graph": {"tf": 1}}, "df": 14}}, "d": {"docs": {"tensorgrad.functions.max_grad": {"tf": 1}, "tensorgrad.tensor.Tensor.grad": {"tf": 1}}, "df": 2}}}, "e": {"docs": {}, "df": 0, "t": {"docs": {"tensorgrad.extras.to_numpy.CodegenContext.get_var_type": {"tf": 1}, "tensorgrad.utils.DisjointSets.get": {"tf": 1}, "tensorgrad.utils.KeyStoringDict.get_with_key": {"tf": 1}, "tensorgrad.utils.KeyStoringDict.get": {"tf": 1}}, "df": 4}, "n": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "e": {"docs": {"tensorgrad.testutils.generate_copy": {"tf": 1}, "tensorgrad.testutils.generate_random_tensor_expression": {"tf": 1}, "tensorgrad.testutils.atlas_generate_random_tensor_expression": {"tf": 1}}, "df": 3}}}}}}}, "t": {"0": {"docs": {"tensorgrad.functions.gt0": {"tf": 1}}, "df": 1}, "docs": {"tensorgrad.functions.gt": {"tf": 1}}, "df": 1}}, "o": {"docs": {}, "df": 0, "n": {"docs": {"tensorgrad.extras.expectation.Expectation.depends_on": {"tf": 1}, "tensorgrad.tensor.Tensor.depends_on": {"tf": 1}, "tensorgrad.tensor.Variable.depends_on": {"tf": 1}, "tensorgrad.tensor.Rename.depends_on": {"tf": 1}, "tensorgrad.tensor.Constant.depends_on": {"tf": 1}, "tensorgrad.tensor.Function.depends_on": {"tf": 1}, "tensorgrad.tensor.Derivative.depends_on": {"tf": 1}, "tensorgrad.tensor.Product.depends_on": {"tf": 1}, "tensorgrad.tensor.Sum.depends_on": {"tf": 1}}, "df": 9, "e": {"docs": {}, "df": 0, "s": {"docs": {"tensorgrad.tensor.Ones": {"tf": 1}}, "df": 1}}}, "l": {"docs": {}, "df": 0, "d": {"docs": {"tensorgrad.imgtools.save_steps_old": {"tf": 1}}, "df": 1}}, "r": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {"tensorgrad.tensor.Tensor.order": {"tf": 1}}, "df": 1}}}}, "u": {"docs": {}, "df": 0, "t": {"docs": {"tensorgrad.tensor.Function.shape_out": {"tf": 1}}, "df": 1, "e": {"docs": {}, "df": 0, "r": {"docs": {"tensorgrad.tensor.Delta.simplify_outer": {"tf": 1}}, "df": 1}}}}}, "l": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "x": {"docs": {"tensorgrad.extras.to_latex.to_latex_indexed": {"tf": 1}, "tensorgrad.extras.to_latex.to_latex_index_free": {"tf": 1}, "tensorgrad.extras.to_latex.to_latex": {"tf": 1}, "tensorgrad.imgtools.compile_latex": {"tf": 1}}, "df": 4}}}, "b": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "l": {"docs": {"tensorgrad.extras.to_tikz.NodeRef.edge_label": {"tf": 1}, "tensorgrad.extras.to_tikz.format_label": {"tf": 1}}, "df": 2}}}, "y": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "t": {"docs": {"tensorgrad.extras.to_tikz.tree_layout": {"tf": 1}, "tensorgrad.extras.to_tikz.spring_layout": {"tf": 1}, "tensorgrad.extras.to_tikz.choose_layout": {"tf": 1}}, "df": 3}}}}}, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "s": {"docs": {"tensorgrad.extras.to_numpy.CodegenContext.lines": {"tf": 1}, "tensorgrad.extras.to_pytorch.CodegenContext.lines": {"tf": 1}, "tensorgrad.extras.to_tikz.TikzGraph.lines": {"tf": 1}}, "df": 3}}}}, "o": {"docs": {}, "df": 0, "g": {"docs": {"tensorgrad.functions.log": {"tf": 1}}, "df": 1}}, "e": {"docs": {}, "df": 0, "h": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "n": {"docs": {"tensorgrad.tensor.Tensor.weisfeiler_lehman": {"tf": 1}}, "df": 1}}}}}}, "p": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "e": {"docs": {"tensorgrad.extras.to_numpy.permute_code": {"tf": 1}, "tensorgrad.extras.to_pytorch.permute": {"tf": 1}}, "df": 2}}}}}}, "r": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "f": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "x": {"docs": {"tensorgrad.extras.to_tikz.prefix": {"tf": 1}}, "df": 1}}}}, "o": {"docs": {}, "df": 0, "d": {"docs": {"tensorgrad.functions.prod": {"tf": 1}}, "df": 1, "u": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "t": {"docs": {"tensorgrad.tensor.Product": {"tf": 1}, "tensorgrad.tensor.Product.__init__": {"tf": 1}, "tensorgrad.tensor.Product.tensors": {"tf": 1}, "tensorgrad.tensor.Product.merge": {"tf": 1}, "tensorgrad.tensor.Product.components": {"tf": 1}, "tensorgrad.tensor.Product.structural_graph": {"tf": 1}, "tensorgrad.tensor.Product.depends_on": {"tf": 1}}, "df": 7}}}}}}, "a": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "e": {"docs": {"tensorgrad.functions.parse_dim": {"tf": 1}}, "df": 1}}, "e": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "t": {"docs": {"tensorgrad.utils.DisjointSets.parent": {"tf": 1}}, "df": 1}}}}, "i": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "w": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "e": {"docs": {"tensorgrad.functions.pairwise_distance": {"tf": 1}}, "df": 1}}}}}}}, "o": {"docs": {}, "df": 0, "w": {"docs": {"tensorgrad.functions.pow": {"tf": 1}}, "df": 1}, "p": {"docs": {"tensorgrad.utils.KeyStoringDict.pop": {"tf": 1}}, "df": 1}}}, "r": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "g": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {"tensorgrad.extras.to_tikz.depth_tracking_dispatcher.register": {"tf": 1}}, "df": 1}}}}}}, "l": {"docs": {}, "df": 0, "u": {"docs": {"tensorgrad.functions.relu": {"tf": 1}}, "df": 1}}, "p": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {"tensorgrad.functions.repeat": {"tf": 1}}, "df": 1}}}}, "s": {"docs": {}, "df": 0, "h": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "e": {"docs": {"tensorgrad.functions.Reshape": {"tf": 1}}, "df": 1}}}}}, "n": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "e": {"docs": {"tensorgrad.tensor.Tensor.rename": {"tf": 1}, "tensorgrad.tensor.Rename": {"tf": 1}, "tensorgrad.tensor.Rename.__init__": {"tf": 1}, "tensorgrad.tensor.Rename.name": {"tf": 1}, "tensorgrad.tensor.Rename.tensor": {"tf": 1}, "tensorgrad.tensor.Rename.mapping": {"tf": 1}, "tensorgrad.tensor.Rename.depends_on": {"tf": 1}, "tensorgrad.tensor.Rename.merge_renames": {"tf": 1}, "tensorgrad.tensor.Rename.structural_graph": {"tf": 1}}, "df": 9, "s": {"docs": {"tensorgrad.tensor.Rename.merge_renames": {"tf": 1}}, "df": 1}}}}}}, "a": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "d": {"docs": {"tensorgrad.testutils.rand_values": {"tf": 1}}, "df": 1, "o": {"docs": {}, "df": 0, "m": {"docs": {"tensorgrad.testutils.generate_random_tensor_expression": {"tf": 1}, "tensorgrad.testutils.make_random_tree": {"tf": 1}, "tensorgrad.testutils.atlas_generate_random_tensor_expression": {"tf": 1}, "tensorgrad.testutils.random_tensor_expr": {"tf": 1}, "tensorgrad.testutils.random_tensor_expr2": {"tf": 1}}, "df": 5}}}}}}, "a": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "d": {"docs": {"tensorgrad.extras.to_tikz.TikzGraph.add_node": {"tf": 1}, "tensorgrad.extras.to_tikz.TikzGraph.add_edge": {"tf": 1}, "tensorgrad.extras.to_tikz.TikzGraph.add_subgraph": {"tf": 1}}, "df": 3, "e": {"docs": {}, "df": 0, "d": {"docs": {"tensorgrad.extras.to_tikz.TikzGraph.added_node_names": {"tf": 1}}, "df": 1}}}}, "b": {"docs": {}, "df": 0, "s": {"docs": {"tensorgrad.functions.abs": {"tf": 1}}, "df": 1}}, "r": {"docs": {}, "df": 0, "g": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "x": {"docs": {"tensorgrad.functions.argmax": {"tf": 1}}, "df": 1}}}}}, "s": {"docs": {"tensorgrad.imgtools.save_as_image": {"tf": 1}}, "df": 1, "s": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "t": {"docs": {"tensorgrad.testutils.assert_close": {"tf": 1}}, "df": 1}}}}}, "t": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "s": {"docs": {"tensorgrad.testutils.atlas_generate_random_tensor_expression": {"tf": 1}}, "df": 1}}}}}, "h": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "e": {"docs": {"tensorgrad.extras.to_tikz.TikzGraph.handle_free_edges": {"tf": 1}}, "df": 1}}}}}}, "k": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "k": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {"tensorgrad.functions.kronecker": {"tf": 1}}, "df": 1}}}}}}}}, "e": {"docs": {}, "df": 0, "y": {"docs": {"tensorgrad.utils.KeyStoringDict.get_with_key": {"tf": 1}}, "df": 1, "s": {"docs": {"tensorgrad.utils.KeyStoringDict.keys": {"tf": 1}}, "df": 1, "t": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "t": {"docs": {"tensorgrad.utils.KeyStoringDict": {"tf": 1}, "tensorgrad.utils.KeyStoringDict.__init__": {"tf": 1}, "tensorgrad.utils.KeyStoringDict.get_with_key": {"tf": 1}, "tensorgrad.utils.KeyStoringDict.get": {"tf": 1}, "tensorgrad.utils.KeyStoringDict.pop": {"tf": 1}, "tensorgrad.utils.KeyStoringDict.update": {"tf": 1}, "tensorgrad.utils.KeyStoringDict.keys": {"tf": 1}, "tensorgrad.utils.KeyStoringDict.values": {"tf": 1}, "tensorgrad.utils.KeyStoringDict.items": {"tf": 1}, "tensorgrad.utils.KeyStoringDict.copy": {"tf": 1}}, "df": 10}}}}}}}}}}}}}}, "z": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "o": {"docs": {"tensorgrad.tensor.Zero": {"tf": 1}}, "df": 1}}}}, "x": {"docs": {"tensorgrad.tensor.Derivative.x": {"tf": 1}}, "df": 1}, "b": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "t": {"docs": {"tensorgrad.testutils.broadcast_tensors": {"tf": 1}}, "df": 1}}}}}}}}}, "u": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {"tensorgrad.utils.DisjointSets.union": {"tf": 1}}, "df": 1}}}}, "p": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "e": {"docs": {"tensorgrad.utils.KeyStoringDict.update": {"tf": 1}}, "df": 1}}}}}}}}, "fullname": {"root": {"docs": {"tensorgrad.extras.evaluate.Context.__init__": {"tf": 1}, "tensorgrad.extras.expectation.Expectation.__init__": {"tf": 1}, "tensorgrad.extras.to_tikz.NodeRef.__init__": {"tf": 1}, "tensorgrad.extras.to_tikz.TikzGraph.__init__": {"tf": 1}, "tensorgrad.functions.Convolution.__init__": {"tf": 1}, "tensorgrad.tensor.Tensor.__init__": {"tf": 1}, "tensorgrad.tensor.Variable.__init__": {"tf": 1}, "tensorgrad.tensor.Rename.__init__": {"tf": 1}, "tensorgrad.tensor.Constant.__init__": {"tf": 1}, "tensorgrad.tensor.Delta.__init__": {"tf": 1}, "tensorgrad.tensor.FunctionSignature.__init__": {"tf": 1}, "tensorgrad.tensor.Function.__init__": {"tf": 1}, "tensorgrad.tensor.Derivative.__init__": {"tf": 1}, "tensorgrad.tensor.Product.__init__": {"tf": 1}, "tensorgrad.tensor.Sum.__init__": {"tf": 1}, "tensorgrad.utils.KeyStoringDict.__init__": {"tf": 1}}, "df": 16, "t": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "r": {"docs": {"tensorgrad.extras.expectation.Expectation.tensor": {"tf": 1}, "tensorgrad.tensor": {"tf": 1}, "tensorgrad.tensor.TensorMeta": {"tf": 1}, "tensorgrad.tensor.Tensor": {"tf": 1.4142135623730951}, "tensorgrad.tensor.Tensor.__init__": {"tf": 1.4142135623730951}, "tensorgrad.tensor.Tensor.edges": {"tf": 1.4142135623730951}, "tensorgrad.tensor.Tensor.shape": {"tf": 1.4142135623730951}, "tensorgrad.tensor.Tensor.order": {"tf": 1.4142135623730951}, "tensorgrad.tensor.Tensor.grad": {"tf": 1.4142135623730951}, "tensorgrad.tensor.Tensor.rename": {"tf": 1.4142135623730951}, "tensorgrad.tensor.Tensor.simplify": {"tf": 1.4142135623730951}, "tensorgrad.tensor.Tensor.full_simplify": {"tf": 1.4142135623730951}, "tensorgrad.tensor.Tensor.weisfeiler_lehman": {"tf": 1.4142135623730951}, "tensorgrad.tensor.Tensor.depends_on": {"tf": 1.4142135623730951}, "tensorgrad.tensor.Tensor.structural_graph": {"tf": 1.4142135623730951}, "tensorgrad.tensor.Tensor.edge_structural_graph": {"tf": 1.4142135623730951}, "tensorgrad.tensor.Tensor.graph_to_string": {"tf": 1.4142135623730951}, "tensorgrad.tensor.Tensor.is_isomorphic": {"tf": 1.4142135623730951}, "tensorgrad.tensor.Tensor.isomorphisms": {"tf": 1.4142135623730951}, "tensorgrad.tensor.Tensor.symmetries": {"tf": 1.4142135623730951}, "tensorgrad.tensor.Variable": {"tf": 1}, "tensorgrad.tensor.Variable.__init__": {"tf": 1}, "tensorgrad.tensor.Variable.name": {"tf": 1}, "tensorgrad.tensor.Variable.with_symmetries": {"tf": 1}, "tensorgrad.tensor.Variable.structural_graph": {"tf": 1}, "tensorgrad.tensor.Variable.depends_on": {"tf": 1}, "tensorgrad.tensor.Rename": {"tf": 1}, "tensorgrad.tensor.Rename.__init__": {"tf": 1}, "tensorgrad.tensor.Rename.name": {"tf": 1}, "tensorgrad.tensor.Rename.tensor": {"tf": 1.4142135623730951}, "tensorgrad.tensor.Rename.mapping": {"tf": 1}, "tensorgrad.tensor.Rename.depends_on": {"tf": 1}, "tensorgrad.tensor.Rename.merge_renames": {"tf": 1}, "tensorgrad.tensor.Rename.structural_graph": {"tf": 1}, "tensorgrad.tensor.Constant": {"tf": 1}, "tensorgrad.tensor.Constant.__init__": {"tf": 1}, "tensorgrad.tensor.Constant.name": {"tf": 1}, "tensorgrad.tensor.Constant.with_symmetries": {"tf": 1}, "tensorgrad.tensor.Constant.structural_graph": {"tf": 1}, "tensorgrad.tensor.Constant.depends_on": {"tf": 1}, "tensorgrad.tensor.Delta": {"tf": 1}, "tensorgrad.tensor.Delta.__init__": {"tf": 1}, "tensorgrad.tensor.Delta.size": {"tf": 1}, "tensorgrad.tensor.Delta.simplify_outer": {"tf": 1}, "tensorgrad.tensor.Delta.structural_graph": {"tf": 1}, "tensorgrad.tensor.Zero": {"tf": 1}, "tensorgrad.tensor.Ones": {"tf": 1}, "tensorgrad.tensor.FunctionSignature": {"tf": 1}, "tensorgrad.tensor.FunctionSignature.__init__": {"tf": 1}, "tensorgrad.tensor.FunctionSignature.name": {"tf": 1}, "tensorgrad.tensor.FunctionSignature.edges": {"tf": 1}, "tensorgrad.tensor.FunctionSignature.inputs": {"tf": 1}, "tensorgrad.tensor.FunctionSignature.derivative": {"tf": 1}, "tensorgrad.tensor.FunctionSignature.simplify": {"tf": 1}, "tensorgrad.tensor.function": {"tf": 1}, "tensorgrad.tensor.Function": {"tf": 1}, "tensorgrad.tensor.Function.__init__": {"tf": 1}, "tensorgrad.tensor.Function.shape_out": {"tf": 1}, "tensorgrad.tensor.Function.inputs": {"tf": 1}, "tensorgrad.tensor.Function.signature": {"tf": 1}, "tensorgrad.tensor.Function.structural_graph": {"tf": 1}, "tensorgrad.tensor.Function.depends_on": {"tf": 1}, "tensorgrad.tensor.Derivative": {"tf": 1}, "tensorgrad.tensor.Derivative.__init__": {"tf": 1}, "tensorgrad.tensor.Derivative.tensor": {"tf": 1.4142135623730951}, "tensorgrad.tensor.Derivative.x": {"tf": 1}, "tensorgrad.tensor.Derivative.new_names": {"tf": 1}, "tensorgrad.tensor.Derivative.structural_graph": {"tf": 1}, "tensorgrad.tensor.Derivative.depends_on": {"tf": 1}, "tensorgrad.tensor.Product": {"tf": 1}, "tensorgrad.tensor.Product.__init__": {"tf": 1}, "tensorgrad.tensor.Product.tensors": {"tf": 1}, "tensorgrad.tensor.Product.merge": {"tf": 1}, "tensorgrad.tensor.Product.components": {"tf": 1}, "tensorgrad.tensor.Product.structural_graph": {"tf": 1}, "tensorgrad.tensor.Product.depends_on": {"tf": 1}, "tensorgrad.tensor.Sum": {"tf": 1}, "tensorgrad.tensor.Sum.__init__": {"tf": 1}, "tensorgrad.tensor.Sum.tensors": {"tf": 1}, "tensorgrad.tensor.Sum.weights": {"tf": 1}, "tensorgrad.tensor.Sum.structural_graph": {"tf": 1}, "tensorgrad.tensor.Sum.depends_on": {"tf": 1}, "tensorgrad.testutils.generate_random_tensor_expression": {"tf": 1}, "tensorgrad.testutils.atlas_generate_random_tensor_expression": {"tf": 1}, "tensorgrad.testutils.random_tensor_expr": {"tf": 1}, "tensorgrad.testutils.random_tensor_expr2": {"tf": 1}}, "df": 86, "g": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "d": {"docs": {"tensorgrad": {"tf": 1}, "tensorgrad.extras": {"tf": 1}, "tensorgrad.extras.evaluate": {"tf": 1}, "tensorgrad.extras.evaluate.evaluate": {"tf": 1}, "tensorgrad.extras.evaluate.Context": {"tf": 1}, "tensorgrad.extras.evaluate.Context.__init__": {"tf": 1}, "tensorgrad.extras.evaluate.Context.values": {"tf": 1}, "tensorgrad.extras.evaluate.Context.dims": {"tf": 1}, "tensorgrad.extras.evaluate.Context.evaluate": {"tf": 1}, "tensorgrad.extras.evaluate.evaluate_function": {"tf": 1}, "tensorgrad.extras.expectation": {"tf": 1}, "tensorgrad.extras.expectation.Expectation": {"tf": 1}, "tensorgrad.extras.expectation.Expectation.__init__": {"tf": 1}, "tensorgrad.extras.expectation.Expectation.tensor": {"tf": 1}, "tensorgrad.extras.expectation.Expectation.wrt": {"tf": 1}, "tensorgrad.extras.expectation.Expectation.mu": {"tf": 1}, "tensorgrad.extras.expectation.Expectation.covar_names": {"tf": 1}, "tensorgrad.extras.expectation.Expectation.covar": {"tf": 1}, "tensorgrad.extras.expectation.Expectation.structural_graph": {"tf": 1}, "tensorgrad.extras.expectation.Expectation.depends_on": {"tf": 1}, "tensorgrad.extras.to_formula_old": {"tf": 1}, "tensorgrad.extras.to_formula_old.to_simple_matrix_formula": {"tf": 1}, "tensorgrad.extras.to_formula_old.component_to_matrix": {"tf": 1}, "tensorgrad.extras.to_formula_old.dfs": {"tf": 1}, "tensorgrad.extras.to_latex": {"tf": 1}, "tensorgrad.extras.to_latex.to_latex_indexed": {"tf": 1}, "tensorgrad.extras.to_latex.to_latex_index_free": {"tf": 1}, "tensorgrad.extras.to_latex.to_latex": {"tf": 1}, "tensorgrad.extras.to_numpy": {"tf": 1}, "tensorgrad.extras.to_numpy.compile_to_callable": {"tf": 1}, "tensorgrad.extras.to_numpy.CodegenContext": {"tf": 1}, "tensorgrad.extras.to_numpy.CodegenContext.lines": {"tf": 1}, "tensorgrad.extras.to_numpy.CodegenContext.cache": {"tf": 1}, "tensorgrad.extras.to_numpy.CodegenContext.seen_variables": {"tf": 1}, "tensorgrad.extras.to_numpy.CodegenContext.seen_symbols": {"tf": 1}, "tensorgrad.extras.to_numpy.CodegenContext.seen_names": {"tf": 1}, "tensorgrad.extras.to_numpy.CodegenContext.var_types": {"tf": 1}, "tensorgrad.extras.to_numpy.CodegenContext.emit": {"tf": 1}, "tensorgrad.extras.to_numpy.CodegenContext.fresh_name": {"tf": 1}, "tensorgrad.extras.to_numpy.CodegenContext.declare_dimension": {"tf": 1}, "tensorgrad.extras.to_numpy.CodegenContext.set_var_type": {"tf": 1}, "tensorgrad.extras.to_numpy.CodegenContext.get_var_type": {"tf": 1}, "tensorgrad.extras.to_numpy.permute_code": {"tf": 1}, "tensorgrad.extras.to_pytorch": {"tf": 1}, "tensorgrad.extras.to_pytorch.compile_to_callable": {"tf": 1}, "tensorgrad.extras.to_pytorch.CodegenContext": {"tf": 1}, "tensorgrad.extras.to_pytorch.CodegenContext.lines": {"tf": 1}, "tensorgrad.extras.to_pytorch.CodegenContext.cache": {"tf": 1}, "tensorgrad.extras.to_pytorch.CodegenContext.seen_variables": {"tf": 1}, "tensorgrad.extras.to_pytorch.CodegenContext.seen_symbols": {"tf": 1}, "tensorgrad.extras.to_pytorch.CodegenContext.seen_names": {"tf": 1}, "tensorgrad.extras.to_pytorch.CodegenContext.emit": {"tf": 1}, "tensorgrad.extras.to_pytorch.CodegenContext.fresh_name": {"tf": 1}, "tensorgrad.extras.to_pytorch.CodegenContext.declare_dimension": {"tf": 1}, "tensorgrad.extras.to_pytorch.permute": {"tf": 1}, "tensorgrad.extras.to_tikz": {"tf": 1}, "tensorgrad.extras.to_tikz.to_tikz": {"tf": 1}, "tensorgrad.extras.to_tikz.NodeRef": {"tf": 1}, "tensorgrad.extras.to_tikz.NodeRef.__init__": {"tf": 1}, "tensorgrad.extras.to_tikz.NodeRef.name": {"tf": 1}, "tensorgrad.extras.to_tikz.NodeRef.edge_style": {"tf": 1}, "tensorgrad.extras.to_tikz.NodeRef.edge_label": {"tf": 1}, "tensorgrad.extras.to_tikz.Namer": {"tf": 1}, "tensorgrad.extras.to_tikz.Namer.counter": {"tf": 1}, "tensorgrad.extras.to_tikz.Namer.edge_mapping": {"tf": 1}, "tensorgrad.extras.to_tikz.Namer.fresh_name": {"tf": 1}, "tensorgrad.extras.to_tikz.Namer.edge": {"tf": 1}, "tensorgrad.extras.to_tikz.depth_tracking_dispatcher": {"tf": 1}, "tensorgrad.extras.to_tikz.depth_tracking_dispatcher.register": {"tf": 1}, "tensorgrad.extras.to_tikz.TikzGraph": {"tf": 1}, "tensorgrad.extras.to_tikz.TikzGraph.__init__": {"tf": 1}, "tensorgrad.extras.to_tikz.TikzGraph.lines": {"tf": 1}, "tensorgrad.extras.to_tikz.TikzGraph.namer": {"tf": 1}, "tensorgrad.extras.to_tikz.TikzGraph.depth": {"tf": 1}, "tensorgrad.extras.to_tikz.TikzGraph.added_node_names": {"tf": 1}, "tensorgrad.extras.to_tikz.TikzGraph.subgraph": {"tf": 1}, "tensorgrad.extras.to_tikz.TikzGraph.to_tikz": {"tf": 1}, "tensorgrad.extras.to_tikz.TikzGraph.add_node": {"tf": 1}, "tensorgrad.extras.to_tikz.TikzGraph.add_edge": {"tf": 1}, "tensorgrad.extras.to_tikz.TikzGraph.add_subgraph": {"tf": 1}, "tensorgrad.extras.to_tikz.TikzGraph.handle_free_edges": {"tf": 1}, "tensorgrad.extras.to_tikz.format_label": {"tf": 1}, "tensorgrad.extras.to_tikz.format_weight": {"tf": 1}, "tensorgrad.extras.to_tikz.format_function": {"tf": 1}, "tensorgrad.extras.to_tikz.tree_layout": {"tf": 1}, "tensorgrad.extras.to_tikz.spring_layout": {"tf": 1}, "tensorgrad.extras.to_tikz.choose_layout": {"tf": 1}, "tensorgrad.extras.to_tikz.prefix": {"tf": 1}, "tensorgrad.functions": {"tf": 1}, "tensorgrad.functions.DimType": {"tf": 1}, "tensorgrad.functions.taylor": {"tf": 1}, "tensorgrad.functions.frobenius2": {"tf": 1}, "tensorgrad.functions.symmetrize": {"tf": 1}, "tensorgrad.functions.graph": {"tf": 1}, "tensorgrad.functions.kronecker": {"tf": 1}, "tensorgrad.functions.diag": {"tf": 1}, "tensorgrad.functions.trace": {"tf": 1}, "tensorgrad.functions.parse_dim": {"tf": 1}, "tensorgrad.functions.sum": {"tf": 1}, "tensorgrad.functions.prod": {"tf": 1}, "tensorgrad.functions.mean": {"tf": 1}, "tensorgrad.functions.dot": {"tf": 1}, "tensorgrad.functions.multi_dot": {"tf": 1}, "tensorgrad.functions.contract": {"tf": 1}, "tensorgrad.functions.pow": {"tf": 1}, "tensorgrad.functions.sqrt": {"tf": 1}, "tensorgrad.functions.inverse": {"tf": 1}, "tensorgrad.functions.exp": {"tf": 1}, "tensorgrad.functions.log": {"tf": 1}, "tensorgrad.functions.tanh": {"tf": 1}, "tensorgrad.functions.sigmoid": {"tf": 1}, "tensorgrad.functions.softmax": {"tf": 1}, "tensorgrad.functions.pairwise_distance": {"tf": 1}, "tensorgrad.functions.cross_entropy": {"tf": 1}, "tensorgrad.functions.sign": {"tf": 1}, "tensorgrad.functions.gt0": {"tf": 1}, "tensorgrad.functions.gt": {"tf": 1}, "tensorgrad.functions.maximum": {"tf": 1}, "tensorgrad.functions.relu": {"tf": 1}, "tensorgrad.functions.abs": {"tf": 1}, "tensorgrad.functions.argmax": {"tf": 1}, "tensorgrad.functions.max_grad": {"tf": 1}, "tensorgrad.functions.max": {"tf": 1}, "tensorgrad.functions.concat": {"tf": 1}, "tensorgrad.functions.repeat": {"tf": 1}, "tensorgrad.functions.det": {"tf": 1}, "tensorgrad.functions.Convolution": {"tf": 1}, "tensorgrad.functions.Convolution.__init__": {"tf": 1}, "tensorgrad.functions.Convolution.stride": {"tf": 1}, "tensorgrad.functions.Reshape": {"tf": 1}, "tensorgrad.imgtools": {"tf": 1}, "tensorgrad.imgtools.compile_latex": {"tf": 1}, "tensorgrad.imgtools.combine_images_vertically": {"tf": 1}, "tensorgrad.imgtools.save_as_image": {"tf": 1}, "tensorgrad.imgtools.save_steps_old": {"tf": 1}, "tensorgrad.imgtools.save_steps": {"tf": 1}, "tensorgrad.imgtools.draw_structural_graph": {"tf": 1}, "tensorgrad.tensor": {"tf": 1}, "tensorgrad.tensor.TensorMeta": {"tf": 1}, "tensorgrad.tensor.Tensor": {"tf": 1}, "tensorgrad.tensor.Tensor.__init__": {"tf": 1}, "tensorgrad.tensor.Tensor.edges": {"tf": 1}, "tensorgrad.tensor.Tensor.shape": {"tf": 1}, "tensorgrad.tensor.Tensor.order": {"tf": 1}, "tensorgrad.tensor.Tensor.grad": {"tf": 1}, "tensorgrad.tensor.Tensor.rename": {"tf": 1}, "tensorgrad.tensor.Tensor.simplify": {"tf": 1}, "tensorgrad.tensor.Tensor.full_simplify": {"tf": 1}, "tensorgrad.tensor.Tensor.weisfeiler_lehman": {"tf": 1}, "tensorgrad.tensor.Tensor.depends_on": {"tf": 1}, "tensorgrad.tensor.Tensor.structural_graph": {"tf": 1}, "tensorgrad.tensor.Tensor.edge_structural_graph": {"tf": 1}, "tensorgrad.tensor.Tensor.graph_to_string": {"tf": 1}, "tensorgrad.tensor.Tensor.is_isomorphic": {"tf": 1}, "tensorgrad.tensor.Tensor.isomorphisms": {"tf": 1}, "tensorgrad.tensor.Tensor.symmetries": {"tf": 1}, "tensorgrad.tensor.Variable": {"tf": 1}, "tensorgrad.tensor.Variable.__init__": {"tf": 1}, "tensorgrad.tensor.Variable.name": {"tf": 1}, "tensorgrad.tensor.Variable.with_symmetries": {"tf": 1}, "tensorgrad.tensor.Variable.structural_graph": {"tf": 1}, "tensorgrad.tensor.Variable.depends_on": {"tf": 1}, "tensorgrad.tensor.Rename": {"tf": 1}, "tensorgrad.tensor.Rename.__init__": {"tf": 1}, "tensorgrad.tensor.Rename.name": {"tf": 1}, "tensorgrad.tensor.Rename.tensor": {"tf": 1}, "tensorgrad.tensor.Rename.mapping": {"tf": 1}, "tensorgrad.tensor.Rename.depends_on": {"tf": 1}, "tensorgrad.tensor.Rename.merge_renames": {"tf": 1}, "tensorgrad.tensor.Rename.structural_graph": {"tf": 1}, "tensorgrad.tensor.Constant": {"tf": 1}, "tensorgrad.tensor.Constant.__init__": {"tf": 1}, "tensorgrad.tensor.Constant.name": {"tf": 1}, "tensorgrad.tensor.Constant.with_symmetries": {"tf": 1}, "tensorgrad.tensor.Constant.structural_graph": {"tf": 1}, "tensorgrad.tensor.Constant.depends_on": {"tf": 1}, "tensorgrad.tensor.Delta": {"tf": 1}, "tensorgrad.tensor.Delta.__init__": {"tf": 1}, "tensorgrad.tensor.Delta.size": {"tf": 1}, "tensorgrad.tensor.Delta.simplify_outer": {"tf": 1}, "tensorgrad.tensor.Delta.structural_graph": {"tf": 1}, "tensorgrad.tensor.Zero": {"tf": 1}, "tensorgrad.tensor.Ones": {"tf": 1}, "tensorgrad.tensor.FunctionSignature": {"tf": 1}, "tensorgrad.tensor.FunctionSignature.__init__": {"tf": 1}, "tensorgrad.tensor.FunctionSignature.name": {"tf": 1}, "tensorgrad.tensor.FunctionSignature.edges": {"tf": 1}, "tensorgrad.tensor.FunctionSignature.inputs": {"tf": 1}, "tensorgrad.tensor.FunctionSignature.derivative": {"tf": 1}, "tensorgrad.tensor.FunctionSignature.simplify": {"tf": 1}, "tensorgrad.tensor.function": {"tf": 1}, "tensorgrad.tensor.Function": {"tf": 1}, "tensorgrad.tensor.Function.__init__": {"tf": 1}, "tensorgrad.tensor.Function.shape_out": {"tf": 1}, "tensorgrad.tensor.Function.inputs": {"tf": 1}, "tensorgrad.tensor.Function.signature": {"tf": 1}, "tensorgrad.tensor.Function.structural_graph": {"tf": 1}, "tensorgrad.tensor.Function.depends_on": {"tf": 1}, "tensorgrad.tensor.Derivative": {"tf": 1}, "tensorgrad.tensor.Derivative.__init__": {"tf": 1}, "tensorgrad.tensor.Derivative.tensor": {"tf": 1}, "tensorgrad.tensor.Derivative.x": {"tf": 1}, "tensorgrad.tensor.Derivative.new_names": {"tf": 1}, "tensorgrad.tensor.Derivative.structural_graph": {"tf": 1}, "tensorgrad.tensor.Derivative.depends_on": {"tf": 1}, "tensorgrad.tensor.Product": {"tf": 1}, "tensorgrad.tensor.Product.__init__": {"tf": 1}, "tensorgrad.tensor.Product.tensors": {"tf": 1}, "tensorgrad.tensor.Product.merge": {"tf": 1}, "tensorgrad.tensor.Product.components": {"tf": 1}, "tensorgrad.tensor.Product.structural_graph": {"tf": 1}, "tensorgrad.tensor.Product.depends_on": {"tf": 1}, "tensorgrad.tensor.Sum": {"tf": 1}, "tensorgrad.tensor.Sum.__init__": {"tf": 1}, "tensorgrad.tensor.Sum.tensors": {"tf": 1}, "tensorgrad.tensor.Sum.weights": {"tf": 1}, "tensorgrad.tensor.Sum.structural_graph": {"tf": 1}, "tensorgrad.tensor.Sum.depends_on": {"tf": 1}, "tensorgrad.testutils": {"tf": 1}, "tensorgrad.testutils.rand_values": {"tf": 1}, "tensorgrad.testutils.assert_close": {"tf": 1}, "tensorgrad.testutils.broadcast_tensors": {"tf": 1}, "tensorgrad.testutils.generate_copy": {"tf": 1}, "tensorgrad.testutils.generate_random_tensor_expression": {"tf": 1}, "tensorgrad.testutils.make_random_tree": {"tf": 1}, "tensorgrad.testutils.atlas_generate_random_tensor_expression": {"tf": 1}, "tensorgrad.testutils.random_tensor_expr": {"tf": 1}, "tensorgrad.testutils.random_tensor_expr2": {"tf": 1}, "tensorgrad.utils": {"tf": 1}, "tensorgrad.utils.DisjointSets": {"tf": 1}, "tensorgrad.utils.DisjointSets.parent": {"tf": 1}, "tensorgrad.utils.DisjointSets.values": {"tf": 1}, "tensorgrad.utils.DisjointSets.find": {"tf": 1}, "tensorgrad.utils.DisjointSets.union": {"tf": 1}, "tensorgrad.utils.DisjointSets.get": {"tf": 1}, "tensorgrad.utils.DisjointSets.items": {"tf": 1}, "tensorgrad.utils.KeyStoringDict": {"tf": 1}, "tensorgrad.utils.KeyStoringDict.__init__": {"tf": 1}, "tensorgrad.utils.KeyStoringDict.get_with_key": {"tf": 1}, "tensorgrad.utils.KeyStoringDict.get": {"tf": 1}, "tensorgrad.utils.KeyStoringDict.pop": {"tf": 1}, "tensorgrad.utils.KeyStoringDict.update": {"tf": 1}, "tensorgrad.utils.KeyStoringDict.keys": {"tf": 1}, "tensorgrad.utils.KeyStoringDict.values": {"tf": 1}, "tensorgrad.utils.KeyStoringDict.items": {"tf": 1}, "tensorgrad.utils.KeyStoringDict.copy": {"tf": 1}}, "df": 246}}}}, "m": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "a": {"docs": {"tensorgrad.tensor.TensorMeta": {"tf": 1}}, "df": 1}}}}, "s": {"docs": {"tensorgrad.tensor.Product.tensors": {"tf": 1}, "tensorgrad.tensor.Sum.tensors": {"tf": 1}, "tensorgrad.testutils.broadcast_tensors": {"tf": 1}}, "df": 3}}}}}, "s": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "s": {"docs": {"tensorgrad.testutils": {"tf": 1}, "tensorgrad.testutils.rand_values": {"tf": 1}, "tensorgrad.testutils.assert_close": {"tf": 1}, "tensorgrad.testutils.broadcast_tensors": {"tf": 1}, "tensorgrad.testutils.generate_copy": {"tf": 1}, "tensorgrad.testutils.generate_random_tensor_expression": {"tf": 1}, "tensorgrad.testutils.make_random_tree": {"tf": 1}, "tensorgrad.testutils.atlas_generate_random_tensor_expression": {"tf": 1}, "tensorgrad.testutils.random_tensor_expr": {"tf": 1}, "tensorgrad.testutils.random_tensor_expr2": {"tf": 1}}, "df": 10}}}}}}}}, "o": {"docs": {"tensorgrad.extras.to_formula_old": {"tf": 1}, "tensorgrad.extras.to_formula_old.to_simple_matrix_formula": {"tf": 1.4142135623730951}, "tensorgrad.extras.to_formula_old.component_to_matrix": {"tf": 1.4142135623730951}, "tensorgrad.extras.to_formula_old.dfs": {"tf": 1}, "tensorgrad.extras.to_latex": {"tf": 1}, "tensorgrad.extras.to_latex.to_latex_indexed": {"tf": 1.4142135623730951}, "tensorgrad.extras.to_latex.to_latex_index_free": {"tf": 1.4142135623730951}, "tensorgrad.extras.to_latex.to_latex": {"tf": 1.4142135623730951}, "tensorgrad.extras.to_numpy": {"tf": 1}, "tensorgrad.extras.to_numpy.compile_to_callable": {"tf": 1.4142135623730951}, "tensorgrad.extras.to_numpy.CodegenContext": {"tf": 1}, "tensorgrad.extras.to_numpy.CodegenContext.lines": {"tf": 1}, "tensorgrad.extras.to_numpy.CodegenContext.cache": {"tf": 1}, "tensorgrad.extras.to_numpy.CodegenContext.seen_variables": {"tf": 1}, "tensorgrad.extras.to_numpy.CodegenContext.seen_symbols": {"tf": 1}, "tensorgrad.extras.to_numpy.CodegenContext.seen_names": {"tf": 1}, "tensorgrad.extras.to_numpy.CodegenContext.var_types": {"tf": 1}, "tensorgrad.extras.to_numpy.CodegenContext.emit": {"tf": 1}, "tensorgrad.extras.to_numpy.CodegenContext.fresh_name": {"tf": 1}, "tensorgrad.extras.to_numpy.CodegenContext.declare_dimension": {"tf": 1}, "tensorgrad.extras.to_numpy.CodegenContext.set_var_type": {"tf": 1}, "tensorgrad.extras.to_numpy.CodegenContext.get_var_type": {"tf": 1}, "tensorgrad.extras.to_numpy.permute_code": {"tf": 1}, "tensorgrad.extras.to_pytorch": {"tf": 1}, "tensorgrad.extras.to_pytorch.compile_to_callable": {"tf": 1.4142135623730951}, "tensorgrad.extras.to_pytorch.CodegenContext": {"tf": 1}, "tensorgrad.extras.to_pytorch.CodegenContext.lines": {"tf": 1}, "tensorgrad.extras.to_pytorch.CodegenContext.cache": {"tf": 1}, "tensorgrad.extras.to_pytorch.CodegenContext.seen_variables": {"tf": 1}, "tensorgrad.extras.to_pytorch.CodegenContext.seen_symbols": {"tf": 1}, "tensorgrad.extras.to_pytorch.CodegenContext.seen_names": {"tf": 1}, "tensorgrad.extras.to_pytorch.CodegenContext.emit": {"tf": 1}, "tensorgrad.extras.to_pytorch.CodegenContext.fresh_name": {"tf": 1}, "tensorgrad.extras.to_pytorch.CodegenContext.declare_dimension": {"tf": 1}, "tensorgrad.extras.to_pytorch.permute": {"tf": 1}, "tensorgrad.extras.to_tikz": {"tf": 1}, "tensorgrad.extras.to_tikz.to_tikz": {"tf": 1.4142135623730951}, "tensorgrad.extras.to_tikz.NodeRef": {"tf": 1}, "tensorgrad.extras.to_tikz.NodeRef.__init__": {"tf": 1}, "tensorgrad.extras.to_tikz.NodeRef.name": {"tf": 1}, "tensorgrad.extras.to_tikz.NodeRef.edge_style": {"tf": 1}, "tensorgrad.extras.to_tikz.NodeRef.edge_label": {"tf": 1}, "tensorgrad.extras.to_tikz.Namer": {"tf": 1}, "tensorgrad.extras.to_tikz.Namer.counter": {"tf": 1}, "tensorgrad.extras.to_tikz.Namer.edge_mapping": {"tf": 1}, "tensorgrad.extras.to_tikz.Namer.fresh_name": {"tf": 1}, "tensorgrad.extras.to_tikz.Namer.edge": {"tf": 1}, "tensorgrad.extras.to_tikz.depth_tracking_dispatcher": {"tf": 1}, "tensorgrad.extras.to_tikz.depth_tracking_dispatcher.register": {"tf": 1}, "tensorgrad.extras.to_tikz.TikzGraph": {"tf": 1}, "tensorgrad.extras.to_tikz.TikzGraph.__init__": {"tf": 1}, "tensorgrad.extras.to_tikz.TikzGraph.lines": {"tf": 1}, "tensorgrad.extras.to_tikz.TikzGraph.namer": {"tf": 1}, "tensorgrad.extras.to_tikz.TikzGraph.depth": {"tf": 1}, "tensorgrad.extras.to_tikz.TikzGraph.added_node_names": {"tf": 1}, "tensorgrad.extras.to_tikz.TikzGraph.subgraph": {"tf": 1}, "tensorgrad.extras.to_tikz.TikzGraph.to_tikz": {"tf": 1.4142135623730951}, "tensorgrad.extras.to_tikz.TikzGraph.add_node": {"tf": 1}, "tensorgrad.extras.to_tikz.TikzGraph.add_edge": {"tf": 1}, "tensorgrad.extras.to_tikz.TikzGraph.add_subgraph": {"tf": 1}, "tensorgrad.extras.to_tikz.TikzGraph.handle_free_edges": {"tf": 1}, "tensorgrad.extras.to_tikz.format_label": {"tf": 1}, "tensorgrad.extras.to_tikz.format_weight": {"tf": 1}, "tensorgrad.extras.to_tikz.format_function": {"tf": 1}, "tensorgrad.extras.to_tikz.tree_layout": {"tf": 1}, "tensorgrad.extras.to_tikz.spring_layout": {"tf": 1}, "tensorgrad.extras.to_tikz.choose_layout": {"tf": 1}, "tensorgrad.extras.to_tikz.prefix": {"tf": 1}, "tensorgrad.tensor.Tensor.graph_to_string": {"tf": 1}}, "df": 69}, "y": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "e": {"docs": {"tensorgrad.extras.to_numpy.CodegenContext.set_var_type": {"tf": 1}, "tensorgrad.extras.to_numpy.CodegenContext.get_var_type": {"tf": 1}}, "df": 2, "s": {"docs": {"tensorgrad.extras.to_numpy.CodegenContext.var_types": {"tf": 1}}, "df": 1}}}}, "i": {"docs": {}, "df": 0, "k": {"docs": {}, "df": 0, "z": {"docs": {"tensorgrad.extras.to_tikz": {"tf": 1}, "tensorgrad.extras.to_tikz.to_tikz": {"tf": 1.4142135623730951}, "tensorgrad.extras.to_tikz.NodeRef": {"tf": 1}, "tensorgrad.extras.to_tikz.NodeRef.__init__": {"tf": 1}, "tensorgrad.extras.to_tikz.NodeRef.name": {"tf": 1}, "tensorgrad.extras.to_tikz.NodeRef.edge_style": {"tf": 1}, "tensorgrad.extras.to_tikz.NodeRef.edge_label": {"tf": 1}, "tensorgrad.extras.to_tikz.Namer": {"tf": 1}, "tensorgrad.extras.to_tikz.Namer.counter": {"tf": 1}, "tensorgrad.extras.to_tikz.Namer.edge_mapping": {"tf": 1}, "tensorgrad.extras.to_tikz.Namer.fresh_name": {"tf": 1}, "tensorgrad.extras.to_tikz.Namer.edge": {"tf": 1}, "tensorgrad.extras.to_tikz.depth_tracking_dispatcher": {"tf": 1}, "tensorgrad.extras.to_tikz.depth_tracking_dispatcher.register": {"tf": 1}, "tensorgrad.extras.to_tikz.TikzGraph": {"tf": 1}, "tensorgrad.extras.to_tikz.TikzGraph.__init__": {"tf": 1}, "tensorgrad.extras.to_tikz.TikzGraph.lines": {"tf": 1}, "tensorgrad.extras.to_tikz.TikzGraph.namer": {"tf": 1}, "tensorgrad.extras.to_tikz.TikzGraph.depth": {"tf": 1}, "tensorgrad.extras.to_tikz.TikzGraph.added_node_names": {"tf": 1}, "tensorgrad.extras.to_tikz.TikzGraph.subgraph": {"tf": 1}, "tensorgrad.extras.to_tikz.TikzGraph.to_tikz": {"tf": 1.4142135623730951}, "tensorgrad.extras.to_tikz.TikzGraph.add_node": {"tf": 1}, "tensorgrad.extras.to_tikz.TikzGraph.add_edge": {"tf": 1}, "tensorgrad.extras.to_tikz.TikzGraph.add_subgraph": {"tf": 1}, "tensorgrad.extras.to_tikz.TikzGraph.handle_free_edges": {"tf": 1}, "tensorgrad.extras.to_tikz.format_label": {"tf": 1}, "tensorgrad.extras.to_tikz.format_weight": {"tf": 1}, "tensorgrad.extras.to_tikz.format_function": {"tf": 1}, "tensorgrad.extras.to_tikz.tree_layout": {"tf": 1}, "tensorgrad.extras.to_tikz.spring_layout": {"tf": 1}, "tensorgrad.extras.to_tikz.choose_layout": {"tf": 1}, "tensorgrad.extras.to_tikz.prefix": {"tf": 1}}, "df": 33, "g": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "h": {"docs": {"tensorgrad.extras.to_tikz.TikzGraph": {"tf": 1}, "tensorgrad.extras.to_tikz.TikzGraph.__init__": {"tf": 1}, "tensorgrad.extras.to_tikz.TikzGraph.lines": {"tf": 1}, "tensorgrad.extras.to_tikz.TikzGraph.namer": {"tf": 1}, "tensorgrad.extras.to_tikz.TikzGraph.depth": {"tf": 1}, "tensorgrad.extras.to_tikz.TikzGraph.added_node_names": {"tf": 1}, "tensorgrad.extras.to_tikz.TikzGraph.subgraph": {"tf": 1}, "tensorgrad.extras.to_tikz.TikzGraph.to_tikz": {"tf": 1}, "tensorgrad.extras.to_tikz.TikzGraph.add_node": {"tf": 1}, "tensorgrad.extras.to_tikz.TikzGraph.add_edge": {"tf": 1}, "tensorgrad.extras.to_tikz.TikzGraph.add_subgraph": {"tf": 1}, "tensorgrad.extras.to_tikz.TikzGraph.handle_free_edges": {"tf": 1}}, "df": 12}}}}}}}}, "r": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "k": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {"tensorgrad.extras.to_tikz.depth_tracking_dispatcher": {"tf": 1}, "tensorgrad.extras.to_tikz.depth_tracking_dispatcher.register": {"tf": 1}}, "df": 2}}}}, "e": {"docs": {"tensorgrad.functions.trace": {"tf": 1}}, "df": 1}}}, "e": {"docs": {}, "df": 0, "e": {"docs": {"tensorgrad.extras.to_tikz.tree_layout": {"tf": 1}, "tensorgrad.testutils.make_random_tree": {"tf": 1}}, "df": 2}}}, "a": {"docs": {}, "df": 0, "y": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "r": {"docs": {"tensorgrad.functions.taylor": {"tf": 1}}, "df": 1}}}}, "n": {"docs": {}, "df": 0, "h": {"docs": {"tensorgrad.functions.tanh": {"tf": 1}}, "df": 1}}}}, "e": {"docs": {}, "df": 0, "x": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "s": {"docs": {"tensorgrad.extras": {"tf": 1}, "tensorgrad.extras.evaluate": {"tf": 1}, "tensorgrad.extras.evaluate.evaluate": {"tf": 1}, "tensorgrad.extras.evaluate.Context": {"tf": 1}, "tensorgrad.extras.evaluate.Context.__init__": {"tf": 1}, "tensorgrad.extras.evaluate.Context.values": {"tf": 1}, "tensorgrad.extras.evaluate.Context.dims": {"tf": 1}, "tensorgrad.extras.evaluate.Context.evaluate": {"tf": 1}, "tensorgrad.extras.evaluate.evaluate_function": {"tf": 1}, "tensorgrad.extras.expectation": {"tf": 1}, "tensorgrad.extras.expectation.Expectation": {"tf": 1}, "tensorgrad.extras.expectation.Expectation.__init__": {"tf": 1}, "tensorgrad.extras.expectation.Expectation.tensor": {"tf": 1}, "tensorgrad.extras.expectation.Expectation.wrt": {"tf": 1}, "tensorgrad.extras.expectation.Expectation.mu": {"tf": 1}, "tensorgrad.extras.expectation.Expectation.covar_names": {"tf": 1}, "tensorgrad.extras.expectation.Expectation.covar": {"tf": 1}, "tensorgrad.extras.expectation.Expectation.structural_graph": {"tf": 1}, "tensorgrad.extras.expectation.Expectation.depends_on": {"tf": 1}, "tensorgrad.extras.to_formula_old": {"tf": 1}, "tensorgrad.extras.to_formula_old.to_simple_matrix_formula": {"tf": 1}, "tensorgrad.extras.to_formula_old.component_to_matrix": {"tf": 1}, "tensorgrad.extras.to_formula_old.dfs": {"tf": 1}, "tensorgrad.extras.to_latex": {"tf": 1}, "tensorgrad.extras.to_latex.to_latex_indexed": {"tf": 1}, "tensorgrad.extras.to_latex.to_latex_index_free": {"tf": 1}, "tensorgrad.extras.to_latex.to_latex": {"tf": 1}, "tensorgrad.extras.to_numpy": {"tf": 1}, "tensorgrad.extras.to_numpy.compile_to_callable": {"tf": 1}, "tensorgrad.extras.to_numpy.CodegenContext": {"tf": 1}, "tensorgrad.extras.to_numpy.CodegenContext.lines": {"tf": 1}, "tensorgrad.extras.to_numpy.CodegenContext.cache": {"tf": 1}, "tensorgrad.extras.to_numpy.CodegenContext.seen_variables": {"tf": 1}, "tensorgrad.extras.to_numpy.CodegenContext.seen_symbols": {"tf": 1}, "tensorgrad.extras.to_numpy.CodegenContext.seen_names": {"tf": 1}, "tensorgrad.extras.to_numpy.CodegenContext.var_types": {"tf": 1}, "tensorgrad.extras.to_numpy.CodegenContext.emit": {"tf": 1}, "tensorgrad.extras.to_numpy.CodegenContext.fresh_name": {"tf": 1}, "tensorgrad.extras.to_numpy.CodegenContext.declare_dimension": {"tf": 1}, "tensorgrad.extras.to_numpy.CodegenContext.set_var_type": {"tf": 1}, "tensorgrad.extras.to_numpy.CodegenContext.get_var_type": {"tf": 1}, "tensorgrad.extras.to_numpy.permute_code": {"tf": 1}, "tensorgrad.extras.to_pytorch": {"tf": 1}, "tensorgrad.extras.to_pytorch.compile_to_callable": {"tf": 1}, "tensorgrad.extras.to_pytorch.CodegenContext": {"tf": 1}, "tensorgrad.extras.to_pytorch.CodegenContext.lines": {"tf": 1}, "tensorgrad.extras.to_pytorch.CodegenContext.cache": {"tf": 1}, "tensorgrad.extras.to_pytorch.CodegenContext.seen_variables": {"tf": 1}, "tensorgrad.extras.to_pytorch.CodegenContext.seen_symbols": {"tf": 1}, "tensorgrad.extras.to_pytorch.CodegenContext.seen_names": {"tf": 1}, "tensorgrad.extras.to_pytorch.CodegenContext.emit": {"tf": 1}, "tensorgrad.extras.to_pytorch.CodegenContext.fresh_name": {"tf": 1}, "tensorgrad.extras.to_pytorch.CodegenContext.declare_dimension": {"tf": 1}, "tensorgrad.extras.to_pytorch.permute": {"tf": 1}, "tensorgrad.extras.to_tikz": {"tf": 1}, "tensorgrad.extras.to_tikz.to_tikz": {"tf": 1}, "tensorgrad.extras.to_tikz.NodeRef": {"tf": 1}, "tensorgrad.extras.to_tikz.NodeRef.__init__": {"tf": 1}, "tensorgrad.extras.to_tikz.NodeRef.name": {"tf": 1}, "tensorgrad.extras.to_tikz.NodeRef.edge_style": {"tf": 1}, "tensorgrad.extras.to_tikz.NodeRef.edge_label": {"tf": 1}, "tensorgrad.extras.to_tikz.Namer": {"tf": 1}, "tensorgrad.extras.to_tikz.Namer.counter": {"tf": 1}, "tensorgrad.extras.to_tikz.Namer.edge_mapping": {"tf": 1}, "tensorgrad.extras.to_tikz.Namer.fresh_name": {"tf": 1}, "tensorgrad.extras.to_tikz.Namer.edge": {"tf": 1}, "tensorgrad.extras.to_tikz.depth_tracking_dispatcher": {"tf": 1}, "tensorgrad.extras.to_tikz.depth_tracking_dispatcher.register": {"tf": 1}, "tensorgrad.extras.to_tikz.TikzGraph": {"tf": 1}, "tensorgrad.extras.to_tikz.TikzGraph.__init__": {"tf": 1}, "tensorgrad.extras.to_tikz.TikzGraph.lines": {"tf": 1}, "tensorgrad.extras.to_tikz.TikzGraph.namer": {"tf": 1}, "tensorgrad.extras.to_tikz.TikzGraph.depth": {"tf": 1}, "tensorgrad.extras.to_tikz.TikzGraph.added_node_names": {"tf": 1}, "tensorgrad.extras.to_tikz.TikzGraph.subgraph": {"tf": 1}, "tensorgrad.extras.to_tikz.TikzGraph.to_tikz": {"tf": 1}, "tensorgrad.extras.to_tikz.TikzGraph.add_node": {"tf": 1}, "tensorgrad.extras.to_tikz.TikzGraph.add_edge": {"tf": 1}, "tensorgrad.extras.to_tikz.TikzGraph.add_subgraph": {"tf": 1}, "tensorgrad.extras.to_tikz.TikzGraph.handle_free_edges": {"tf": 1}, "tensorgrad.extras.to_tikz.format_label": {"tf": 1}, "tensorgrad.extras.to_tikz.format_weight": {"tf": 1}, "tensorgrad.extras.to_tikz.format_function": {"tf": 1}, "tensorgrad.extras.to_tikz.tree_layout": {"tf": 1}, "tensorgrad.extras.to_tikz.spring_layout": {"tf": 1}, "tensorgrad.extras.to_tikz.choose_layout": {"tf": 1}, "tensorgrad.extras.to_tikz.prefix": {"tf": 1}}, "df": 87}}}}, "p": {"docs": {"tensorgrad.functions.exp": {"tf": 1}}, "df": 1, "e": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {"tensorgrad.extras.expectation": {"tf": 1}, "tensorgrad.extras.expectation.Expectation": {"tf": 1.4142135623730951}, "tensorgrad.extras.expectation.Expectation.__init__": {"tf": 1.4142135623730951}, "tensorgrad.extras.expectation.Expectation.tensor": {"tf": 1.4142135623730951}, "tensorgrad.extras.expectation.Expectation.wrt": {"tf": 1.4142135623730951}, "tensorgrad.extras.expectation.Expectation.mu": {"tf": 1.4142135623730951}, "tensorgrad.extras.expectation.Expectation.covar_names": {"tf": 1.4142135623730951}, "tensorgrad.extras.expectation.Expectation.covar": {"tf": 1.4142135623730951}, "tensorgrad.extras.expectation.Expectation.structural_graph": {"tf": 1.4142135623730951}, "tensorgrad.extras.expectation.Expectation.depends_on": {"tf": 1.4142135623730951}}, "df": 10}}}}}}}}, "r": {"2": {"docs": {"tensorgrad.testutils.random_tensor_expr2": {"tf": 1}}, "df": 1}, "docs": {"tensorgrad.testutils.random_tensor_expr": {"tf": 1}}, "df": 1, "e": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {"tensorgrad.testutils.generate_random_tensor_expression": {"tf": 1}, "tensorgrad.testutils.atlas_generate_random_tensor_expression": {"tf": 1}}, "df": 2}}}}}}}}}, "v": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "e": {"docs": {"tensorgrad.extras.evaluate": {"tf": 1}, "tensorgrad.extras.evaluate.evaluate": {"tf": 1.4142135623730951}, "tensorgrad.extras.evaluate.Context": {"tf": 1}, "tensorgrad.extras.evaluate.Context.__init__": {"tf": 1}, "tensorgrad.extras.evaluate.Context.values": {"tf": 1}, "tensorgrad.extras.evaluate.Context.dims": {"tf": 1}, "tensorgrad.extras.evaluate.Context.evaluate": {"tf": 1.4142135623730951}, "tensorgrad.extras.evaluate.evaluate_function": {"tf": 1.4142135623730951}}, "df": 8}}}}}}}, "m": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "t": {"docs": {"tensorgrad.extras.to_numpy.CodegenContext.emit": {"tf": 1}, "tensorgrad.extras.to_pytorch.CodegenContext.emit": {"tf": 1}}, "df": 2}}}, "d": {"docs": {}, "df": 0, "g": {"docs": {}, "df": 0, "e": {"docs": {"tensorgrad.extras.to_tikz.NodeRef.edge_style": {"tf": 1}, "tensorgrad.extras.to_tikz.NodeRef.edge_label": {"tf": 1}, "tensorgrad.extras.to_tikz.Namer.edge_mapping": {"tf": 1}, "tensorgrad.extras.to_tikz.Namer.edge": {"tf": 1}, "tensorgrad.extras.to_tikz.TikzGraph.add_edge": {"tf": 1}, "tensorgrad.tensor.Tensor.edge_structural_graph": {"tf": 1}}, "df": 6, "s": {"docs": {"tensorgrad.extras.to_tikz.TikzGraph.handle_free_edges": {"tf": 1}, "tensorgrad.tensor.Tensor.edges": {"tf": 1}, "tensorgrad.tensor.FunctionSignature.edges": {"tf": 1}}, "df": 3}}}}, "n": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "y": {"docs": {"tensorgrad.functions.cross_entropy": {"tf": 1}}, "df": 1}}}}}}}, "c": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "x": {"docs": {}, "df": 0, "t": {"docs": {"tensorgrad.extras.evaluate.Context": {"tf": 1}, "tensorgrad.extras.evaluate.Context.__init__": {"tf": 1}, "tensorgrad.extras.evaluate.Context.values": {"tf": 1}, "tensorgrad.extras.evaluate.Context.dims": {"tf": 1}, "tensorgrad.extras.evaluate.Context.evaluate": {"tf": 1}}, "df": 5}}}, "r": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "t": {"docs": {"tensorgrad.functions.contract": {"tf": 1}}, "df": 1}}}}}, "c": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {"tensorgrad.functions.concat": {"tf": 1}}, "df": 1}}}, "v": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {"tensorgrad.functions.Convolution": {"tf": 1}, "tensorgrad.functions.Convolution.__init__": {"tf": 1}, "tensorgrad.functions.Convolution.stride": {"tf": 1}}, "df": 3}}}}}}}}, "s": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "t": {"docs": {"tensorgrad.tensor.Constant": {"tf": 1}, "tensorgrad.tensor.Constant.__init__": {"tf": 1}, "tensorgrad.tensor.Constant.name": {"tf": 1}, "tensorgrad.tensor.Constant.with_symmetries": {"tf": 1}, "tensorgrad.tensor.Constant.structural_graph": {"tf": 1}, "tensorgrad.tensor.Constant.depends_on": {"tf": 1}}, "df": 6}}}}}}, "v": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "r": {"docs": {"tensorgrad.extras.expectation.Expectation.covar_names": {"tf": 1}, "tensorgrad.extras.expectation.Expectation.covar": {"tf": 1}}, "df": 2}}}, "m": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "t": {"docs": {"tensorgrad.extras.to_formula_old.component_to_matrix": {"tf": 1}}, "df": 1, "s": {"docs": {"tensorgrad.tensor.Product.components": {"tf": 1}}, "df": 1}}}}}}, "i": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "e": {"docs": {"tensorgrad.extras.to_numpy.compile_to_callable": {"tf": 1}, "tensorgrad.extras.to_pytorch.compile_to_callable": {"tf": 1}, "tensorgrad.imgtools.compile_latex": {"tf": 1}}, "df": 3}}}}, "b": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "e": {"docs": {"tensorgrad.imgtools.combine_images_vertically": {"tf": 1}}, "df": 1}}}}}, "d": {"docs": {}, "df": 0, "e": {"docs": {"tensorgrad.extras.to_numpy.permute_code": {"tf": 1}}, "df": 1, "g": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "x": {"docs": {}, "df": 0, "t": {"docs": {"tensorgrad.extras.to_numpy.CodegenContext": {"tf": 1}, "tensorgrad.extras.to_numpy.CodegenContext.lines": {"tf": 1}, "tensorgrad.extras.to_numpy.CodegenContext.cache": {"tf": 1}, "tensorgrad.extras.to_numpy.CodegenContext.seen_variables": {"tf": 1}, "tensorgrad.extras.to_numpy.CodegenContext.seen_symbols": {"tf": 1}, "tensorgrad.extras.to_numpy.CodegenContext.seen_names": {"tf": 1}, "tensorgrad.extras.to_numpy.CodegenContext.var_types": {"tf": 1}, "tensorgrad.extras.to_numpy.CodegenContext.emit": {"tf": 1}, "tensorgrad.extras.to_numpy.CodegenContext.fresh_name": {"tf": 1}, "tensorgrad.extras.to_numpy.CodegenContext.declare_dimension": {"tf": 1}, "tensorgrad.extras.to_numpy.CodegenContext.set_var_type": {"tf": 1}, "tensorgrad.extras.to_numpy.CodegenContext.get_var_type": {"tf": 1}, "tensorgrad.extras.to_pytorch.CodegenContext": {"tf": 1}, "tensorgrad.extras.to_pytorch.CodegenContext.lines": {"tf": 1}, "tensorgrad.extras.to_pytorch.CodegenContext.cache": {"tf": 1}, "tensorgrad.extras.to_pytorch.CodegenContext.seen_variables": {"tf": 1}, "tensorgrad.extras.to_pytorch.CodegenContext.seen_symbols": {"tf": 1}, "tensorgrad.extras.to_pytorch.CodegenContext.seen_names": {"tf": 1}, "tensorgrad.extras.to_pytorch.CodegenContext.emit": {"tf": 1}, "tensorgrad.extras.to_pytorch.CodegenContext.fresh_name": {"tf": 1}, "tensorgrad.extras.to_pytorch.CodegenContext.declare_dimension": {"tf": 1}}, "df": 21}}}}}}}}}}}}, "u": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {"tensorgrad.extras.to_tikz.Namer.counter": {"tf": 1}}, "df": 1}}}}}, "p": {"docs": {}, "df": 0, "y": {"docs": {"tensorgrad.testutils.generate_copy": {"tf": 1}, "tensorgrad.utils.KeyStoringDict.copy": {"tf": 1}}, "df": 2}}}, "a": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "b": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "e": {"docs": {"tensorgrad.extras.to_numpy.compile_to_callable": {"tf": 1}, "tensorgrad.extras.to_pytorch.compile_to_callable": {"tf": 1}}, "df": 2}}}}}}, "c": {"docs": {}, "df": 0, "h": {"docs": {}, "df": 0, "e": {"docs": {"tensorgrad.extras.to_numpy.CodegenContext.cache": {"tf": 1}, "tensorgrad.extras.to_pytorch.CodegenContext.cache": {"tf": 1}}, "df": 2}}}}, "h": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "e": {"docs": {"tensorgrad.extras.to_tikz.choose_layout": {"tf": 1}}, "df": 1}}}}}, "r": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "s": {"docs": {"tensorgrad.functions.cross_entropy": {"tf": 1}}, "df": 1}}}}, "l": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "e": {"docs": {"tensorgrad.testutils.assert_close": {"tf": 1}}, "df": 1}}}}}, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "t": {"docs": {"tensorgrad.extras.evaluate.Context.__init__": {"tf": 1}, "tensorgrad.extras.expectation.Expectation.__init__": {"tf": 1}, "tensorgrad.extras.to_tikz.NodeRef.__init__": {"tf": 1}, "tensorgrad.extras.to_tikz.TikzGraph.__init__": {"tf": 1}, "tensorgrad.functions.Convolution.__init__": {"tf": 1}, "tensorgrad.tensor.Tensor.__init__": {"tf": 1}, "tensorgrad.tensor.Variable.__init__": {"tf": 1}, "tensorgrad.tensor.Rename.__init__": {"tf": 1}, "tensorgrad.tensor.Constant.__init__": {"tf": 1}, "tensorgrad.tensor.Delta.__init__": {"tf": 1}, "tensorgrad.tensor.FunctionSignature.__init__": {"tf": 1}, "tensorgrad.tensor.Function.__init__": {"tf": 1}, "tensorgrad.tensor.Derivative.__init__": {"tf": 1}, "tensorgrad.tensor.Product.__init__": {"tf": 1}, "tensorgrad.tensor.Sum.__init__": {"tf": 1}, "tensorgrad.utils.KeyStoringDict.__init__": {"tf": 1}}, "df": 16}}, "d": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "x": {"docs": {"tensorgrad.extras.to_latex.to_latex_index_free": {"tf": 1}}, "df": 1, "e": {"docs": {}, "df": 0, "d": {"docs": {"tensorgrad.extras.to_latex.to_latex_indexed": {"tf": 1}}, "df": 1}}}}}, "v": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "e": {"docs": {"tensorgrad.functions.inverse": {"tf": 1}}, "df": 1}}}}}, "p": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "s": {"docs": {"tensorgrad.tensor.FunctionSignature.inputs": {"tf": 1}, "tensorgrad.tensor.Function.inputs": {"tf": 1}}, "df": 2}}}}}, "m": {"docs": {}, "df": 0, "g": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "s": {"docs": {"tensorgrad.imgtools": {"tf": 1}, "tensorgrad.imgtools.compile_latex": {"tf": 1}, "tensorgrad.imgtools.combine_images_vertically": {"tf": 1}, "tensorgrad.imgtools.save_as_image": {"tf": 1}, "tensorgrad.imgtools.save_steps_old": {"tf": 1}, "tensorgrad.imgtools.save_steps": {"tf": 1}, "tensorgrad.imgtools.draw_structural_graph": {"tf": 1}}, "df": 7}}}}}}, "a": {"docs": {}, "df": 0, "g": {"docs": {}, "df": 0, "e": {"docs": {"tensorgrad.imgtools.save_as_image": {"tf": 1}}, "df": 1, "s": {"docs": {"tensorgrad.imgtools.combine_images_vertically": {"tf": 1}}, "df": 1}}}}}, "s": {"docs": {"tensorgrad.tensor.Tensor.is_isomorphic": {"tf": 1}}, "df": 1, "o": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "h": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "c": {"docs": {"tensorgrad.tensor.Tensor.is_isomorphic": {"tf": 1}}, "df": 1}, "s": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "s": {"docs": {"tensorgrad.tensor.Tensor.isomorphisms": {"tf": 1}}, "df": 1}}}}}}}}}}}, "t": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "s": {"docs": {"tensorgrad.utils.DisjointSets.items": {"tf": 1}, "tensorgrad.utils.KeyStoringDict.items": {"tf": 1}}, "df": 2}}}}}, "v": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "s": {"docs": {"tensorgrad.extras.evaluate.Context.values": {"tf": 1}, "tensorgrad.testutils.rand_values": {"tf": 1}, "tensorgrad.utils.DisjointSets.values": {"tf": 1}, "tensorgrad.utils.KeyStoringDict.values": {"tf": 1}}, "df": 4}}}}, "r": {"docs": {"tensorgrad.extras.to_numpy.CodegenContext.var_types": {"tf": 1}, "tensorgrad.extras.to_numpy.CodegenContext.set_var_type": {"tf": 1}, "tensorgrad.extras.to_numpy.CodegenContext.get_var_type": {"tf": 1}}, "df": 3, "i": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "b": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "e": {"docs": {"tensorgrad.tensor.Variable": {"tf": 1}, "tensorgrad.tensor.Variable.__init__": {"tf": 1}, "tensorgrad.tensor.Variable.name": {"tf": 1}, "tensorgrad.tensor.Variable.with_symmetries": {"tf": 1}, "tensorgrad.tensor.Variable.structural_graph": {"tf": 1}, "tensorgrad.tensor.Variable.depends_on": {"tf": 1}}, "df": 6, "s": {"docs": {"tensorgrad.extras.to_numpy.CodegenContext.seen_variables": {"tf": 1}, "tensorgrad.extras.to_pytorch.CodegenContext.seen_variables": {"tf": 1}}, "df": 2}}}}}}}}, "e": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "y": {"docs": {"tensorgrad.imgtools.combine_images_vertically": {"tf": 1}}, "df": 1}}}}}}}}}}, "d": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "m": {"docs": {"tensorgrad.functions.parse_dim": {"tf": 1}}, "df": 1, "s": {"docs": {"tensorgrad.extras.evaluate.Context.dims": {"tf": 1}}, "df": 1}, "e": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {"tensorgrad.extras.to_numpy.CodegenContext.declare_dimension": {"tf": 1}, "tensorgrad.extras.to_pytorch.CodegenContext.declare_dimension": {"tf": 1}}, "df": 2}}}}}}, "t": {"docs": {}, "df": 0, "y": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "e": {"docs": {"tensorgrad.functions.DimType": {"tf": 1}}, "df": 1}}}}}, "s": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "h": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {"tensorgrad.extras.to_tikz.depth_tracking_dispatcher": {"tf": 1}, "tensorgrad.extras.to_tikz.depth_tracking_dispatcher.register": {"tf": 1}}, "df": 2}}}}}}}, "t": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "e": {"docs": {"tensorgrad.functions.pairwise_distance": {"tf": 1}}, "df": 1}}}}}, "j": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "s": {"docs": {"tensorgrad.utils.DisjointSets": {"tf": 1}, "tensorgrad.utils.DisjointSets.parent": {"tf": 1}, "tensorgrad.utils.DisjointSets.values": {"tf": 1}, "tensorgrad.utils.DisjointSets.find": {"tf": 1}, "tensorgrad.utils.DisjointSets.union": {"tf": 1}, "tensorgrad.utils.DisjointSets.get": {"tf": 1}, "tensorgrad.utils.DisjointSets.items": {"tf": 1}}, "df": 7}}}}}}}}}}, "a": {"docs": {}, "df": 0, "g": {"docs": {"tensorgrad.functions.diag": {"tf": 1}}, "df": 1}}}, "e": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "s": {"docs": {"tensorgrad.extras.expectation.Expectation.depends_on": {"tf": 1}, "tensorgrad.tensor.Tensor.depends_on": {"tf": 1}, "tensorgrad.tensor.Variable.depends_on": {"tf": 1}, "tensorgrad.tensor.Rename.depends_on": {"tf": 1}, "tensorgrad.tensor.Constant.depends_on": {"tf": 1}, "tensorgrad.tensor.Function.depends_on": {"tf": 1}, "tensorgrad.tensor.Derivative.depends_on": {"tf": 1}, "tensorgrad.tensor.Product.depends_on": {"tf": 1}, "tensorgrad.tensor.Sum.depends_on": {"tf": 1}}, "df": 9}}}}, "t": {"docs": {}, "df": 0, "h": {"docs": {"tensorgrad.extras.to_tikz.depth_tracking_dispatcher": {"tf": 1}, "tensorgrad.extras.to_tikz.depth_tracking_dispatcher.register": {"tf": 1}, "tensorgrad.extras.to_tikz.TikzGraph.depth": {"tf": 1}}, "df": 3}}}, "c": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "e": {"docs": {"tensorgrad.extras.to_numpy.CodegenContext.declare_dimension": {"tf": 1}, "tensorgrad.extras.to_pytorch.CodegenContext.declare_dimension": {"tf": 1}}, "df": 2}}}}}, "t": {"docs": {"tensorgrad.functions.det": {"tf": 1}}, "df": 1}, "l": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "a": {"docs": {"tensorgrad.tensor.Delta": {"tf": 1}, "tensorgrad.tensor.Delta.__init__": {"tf": 1}, "tensorgrad.tensor.Delta.size": {"tf": 1}, "tensorgrad.tensor.Delta.simplify_outer": {"tf": 1}, "tensorgrad.tensor.Delta.structural_graph": {"tf": 1}}, "df": 5}}}, "r": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "v": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "v": {"docs": {}, "df": 0, "e": {"docs": {"tensorgrad.tensor.FunctionSignature.derivative": {"tf": 1}, "tensorgrad.tensor.Derivative": {"tf": 1}, "tensorgrad.tensor.Derivative.__init__": {"tf": 1}, "tensorgrad.tensor.Derivative.tensor": {"tf": 1}, "tensorgrad.tensor.Derivative.x": {"tf": 1}, "tensorgrad.tensor.Derivative.new_names": {"tf": 1}, "tensorgrad.tensor.Derivative.structural_graph": {"tf": 1}, "tensorgrad.tensor.Derivative.depends_on": {"tf": 1}}, "df": 8}}}}}}}}}, "f": {"docs": {}, "df": 0, "s": {"docs": {"tensorgrad.extras.to_formula_old.dfs": {"tf": 1}}, "df": 1}}, "o": {"docs": {}, "df": 0, "t": {"docs": {"tensorgrad.functions.dot": {"tf": 1}, "tensorgrad.functions.multi_dot": {"tf": 1}}, "df": 2}}, "r": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "w": {"docs": {"tensorgrad.imgtools.draw_structural_graph": {"tf": 1}}, "df": 1}}}}, "f": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {"tensorgrad.extras.evaluate.evaluate_function": {"tf": 1}, "tensorgrad.extras.to_tikz.format_function": {"tf": 1}, "tensorgrad.tensor.function": {"tf": 1}, "tensorgrad.tensor.Function": {"tf": 1}, "tensorgrad.tensor.Function.__init__": {"tf": 1}, "tensorgrad.tensor.Function.shape_out": {"tf": 1}, "tensorgrad.tensor.Function.inputs": {"tf": 1}, "tensorgrad.tensor.Function.signature": {"tf": 1}, "tensorgrad.tensor.Function.structural_graph": {"tf": 1}, "tensorgrad.tensor.Function.depends_on": {"tf": 1}}, "df": 10, "s": {"docs": {"tensorgrad.functions": {"tf": 1}, "tensorgrad.functions.DimType": {"tf": 1}, "tensorgrad.functions.taylor": {"tf": 1}, "tensorgrad.functions.frobenius2": {"tf": 1}, "tensorgrad.functions.symmetrize": {"tf": 1}, "tensorgrad.functions.graph": {"tf": 1}, "tensorgrad.functions.kronecker": {"tf": 1}, "tensorgrad.functions.diag": {"tf": 1}, "tensorgrad.functions.trace": {"tf": 1}, "tensorgrad.functions.parse_dim": {"tf": 1}, "tensorgrad.functions.sum": {"tf": 1}, "tensorgrad.functions.prod": {"tf": 1}, "tensorgrad.functions.mean": {"tf": 1}, "tensorgrad.functions.dot": {"tf": 1}, "tensorgrad.functions.multi_dot": {"tf": 1}, "tensorgrad.functions.contract": {"tf": 1}, "tensorgrad.functions.pow": {"tf": 1}, "tensorgrad.functions.sqrt": {"tf": 1}, "tensorgrad.functions.inverse": {"tf": 1}, "tensorgrad.functions.exp": {"tf": 1}, "tensorgrad.functions.log": {"tf": 1}, "tensorgrad.functions.tanh": {"tf": 1}, "tensorgrad.functions.sigmoid": {"tf": 1}, "tensorgrad.functions.softmax": {"tf": 1}, "tensorgrad.functions.pairwise_distance": {"tf": 1}, "tensorgrad.functions.cross_entropy": {"tf": 1}, "tensorgrad.functions.sign": {"tf": 1}, "tensorgrad.functions.gt0": {"tf": 1}, "tensorgrad.functions.gt": {"tf": 1}, "tensorgrad.functions.maximum": {"tf": 1}, "tensorgrad.functions.relu": {"tf": 1}, "tensorgrad.functions.abs": {"tf": 1}, "tensorgrad.functions.argmax": {"tf": 1}, "tensorgrad.functions.max_grad": {"tf": 1}, "tensorgrad.functions.max": {"tf": 1}, "tensorgrad.functions.concat": {"tf": 1}, "tensorgrad.functions.repeat": {"tf": 1}, "tensorgrad.functions.det": {"tf": 1}, "tensorgrad.functions.Convolution": {"tf": 1}, "tensorgrad.functions.Convolution.__init__": {"tf": 1}, "tensorgrad.functions.Convolution.stride": {"tf": 1}, "tensorgrad.functions.Reshape": {"tf": 1}}, "df": 42, "i": {"docs": {}, "df": 0, "g": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "e": {"docs": {"tensorgrad.tensor.FunctionSignature": {"tf": 1}, "tensorgrad.tensor.FunctionSignature.__init__": {"tf": 1}, "tensorgrad.tensor.FunctionSignature.name": {"tf": 1}, "tensorgrad.tensor.FunctionSignature.edges": {"tf": 1}, "tensorgrad.tensor.FunctionSignature.inputs": {"tf": 1}, "tensorgrad.tensor.FunctionSignature.derivative": {"tf": 1}, "tensorgrad.tensor.FunctionSignature.simplify": {"tf": 1}}, "df": 7}}}}}}}}}}}}}}}, "l": {"docs": {}, "df": 0, "l": {"docs": {"tensorgrad.tensor.Tensor.full_simplify": {"tf": 1}}, "df": 1}}}, "o": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "a": {"docs": {"tensorgrad.extras.to_formula_old": {"tf": 1}, "tensorgrad.extras.to_formula_old.to_simple_matrix_formula": {"tf": 1.4142135623730951}, "tensorgrad.extras.to_formula_old.component_to_matrix": {"tf": 1}, "tensorgrad.extras.to_formula_old.dfs": {"tf": 1}}, "df": 4}}}, "a": {"docs": {}, "df": 0, "t": {"docs": {"tensorgrad.extras.to_tikz.format_label": {"tf": 1}, "tensorgrad.extras.to_tikz.format_weight": {"tf": 1}, "tensorgrad.extras.to_tikz.format_function": {"tf": 1}}, "df": 3}}}}}, "r": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "e": {"docs": {"tensorgrad.extras.to_latex.to_latex_index_free": {"tf": 1}, "tensorgrad.extras.to_tikz.TikzGraph.handle_free_edges": {"tf": 1}}, "df": 2}, "s": {"docs": {}, "df": 0, "h": {"docs": {"tensorgrad.extras.to_numpy.CodegenContext.fresh_name": {"tf": 1}, "tensorgrad.extras.to_pytorch.CodegenContext.fresh_name": {"tf": 1}, "tensorgrad.extras.to_tikz.Namer.fresh_name": {"tf": 1}}, "df": 3}}}, "o": {"docs": {}, "df": 0, "b": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "s": {"2": {"docs": {"tensorgrad.functions.frobenius2": {"tf": 1}}, "df": 1}, "docs": {}, "df": 0}}}}}}}}, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "d": {"docs": {"tensorgrad.utils.DisjointSets.find": {"tf": 1}}, "df": 1}}}}, "w": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "t": {"docs": {"tensorgrad.extras.expectation.Expectation.wrt": {"tf": 1}}, "df": 1}}, "e": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "g": {"docs": {}, "df": 0, "h": {"docs": {}, "df": 0, "t": {"docs": {"tensorgrad.extras.to_tikz.format_weight": {"tf": 1}}, "df": 1, "s": {"docs": {"tensorgrad.tensor.Sum.weights": {"tf": 1}}, "df": 1}}}}, "s": {"docs": {}, "df": 0, "f": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {"tensorgrad.tensor.Tensor.weisfeiler_lehman": {"tf": 1}}, "df": 1}}}}}}}}}, "i": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "h": {"docs": {"tensorgrad.tensor.Variable.with_symmetries": {"tf": 1}, "tensorgrad.tensor.Constant.with_symmetries": {"tf": 1}, "tensorgrad.utils.KeyStoringDict.get_with_key": {"tf": 1}}, "df": 3}}}}, "m": {"docs": {}, "df": 0, "u": {"docs": {"tensorgrad.extras.expectation.Expectation.mu": {"tf": 1}}, "df": 1, "l": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {"tensorgrad.functions.multi_dot": {"tf": 1}}, "df": 1}}}}, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "x": {"docs": {"tensorgrad.extras.to_formula_old.to_simple_matrix_formula": {"tf": 1}, "tensorgrad.extras.to_formula_old.component_to_matrix": {"tf": 1}}, "df": 2}}}}, "p": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {"tensorgrad.extras.to_tikz.Namer.edge_mapping": {"tf": 1}, "tensorgrad.tensor.Rename.mapping": {"tf": 1}}, "df": 2}}}}}, "x": {"docs": {"tensorgrad.functions.max_grad": {"tf": 1}, "tensorgrad.functions.max": {"tf": 1}}, "df": 2, "i": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "m": {"docs": {"tensorgrad.functions.maximum": {"tf": 1}}, "df": 1}}}}}, "k": {"docs": {}, "df": 0, "e": {"docs": {"tensorgrad.testutils.make_random_tree": {"tf": 1}}, "df": 1}}}, "e": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "n": {"docs": {"tensorgrad.functions.mean": {"tf": 1}}, "df": 1}}, "r": {"docs": {}, "df": 0, "g": {"docs": {}, "df": 0, "e": {"docs": {"tensorgrad.tensor.Rename.merge_renames": {"tf": 1}, "tensorgrad.tensor.Product.merge": {"tf": 1}}, "df": 2}}}}}, "n": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "e": {"docs": {"tensorgrad.extras.to_numpy.CodegenContext.fresh_name": {"tf": 1}, "tensorgrad.extras.to_pytorch.CodegenContext.fresh_name": {"tf": 1}, "tensorgrad.extras.to_tikz.NodeRef.name": {"tf": 1}, "tensorgrad.extras.to_tikz.Namer.fresh_name": {"tf": 1}, "tensorgrad.tensor.Variable.name": {"tf": 1}, "tensorgrad.tensor.Rename.name": {"tf": 1}, "tensorgrad.tensor.Constant.name": {"tf": 1}, "tensorgrad.tensor.FunctionSignature.name": {"tf": 1}}, "df": 8, "s": {"docs": {"tensorgrad.extras.expectation.Expectation.covar_names": {"tf": 1}, "tensorgrad.extras.to_numpy.CodegenContext.seen_names": {"tf": 1}, "tensorgrad.extras.to_pytorch.CodegenContext.seen_names": {"tf": 1}, "tensorgrad.extras.to_tikz.TikzGraph.added_node_names": {"tf": 1}, "tensorgrad.tensor.Derivative.new_names": {"tf": 1}}, "df": 5}, "r": {"docs": {"tensorgrad.extras.to_tikz.Namer": {"tf": 1}, "tensorgrad.extras.to_tikz.Namer.counter": {"tf": 1}, "tensorgrad.extras.to_tikz.Namer.edge_mapping": {"tf": 1}, "tensorgrad.extras.to_tikz.Namer.fresh_name": {"tf": 1}, "tensorgrad.extras.to_tikz.Namer.edge": {"tf": 1}, "tensorgrad.extras.to_tikz.TikzGraph.namer": {"tf": 1}}, "df": 6}}}}, "u": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "y": {"docs": {"tensorgrad.extras.to_numpy": {"tf": 1}, "tensorgrad.extras.to_numpy.compile_to_callable": {"tf": 1}, "tensorgrad.extras.to_numpy.CodegenContext": {"tf": 1}, "tensorgrad.extras.to_numpy.CodegenContext.lines": {"tf": 1}, "tensorgrad.extras.to_numpy.CodegenContext.cache": {"tf": 1}, "tensorgrad.extras.to_numpy.CodegenContext.seen_variables": {"tf": 1}, "tensorgrad.extras.to_numpy.CodegenContext.seen_symbols": {"tf": 1}, "tensorgrad.extras.to_numpy.CodegenContext.seen_names": {"tf": 1}, "tensorgrad.extras.to_numpy.CodegenContext.var_types": {"tf": 1}, "tensorgrad.extras.to_numpy.CodegenContext.emit": {"tf": 1}, "tensorgrad.extras.to_numpy.CodegenContext.fresh_name": {"tf": 1}, "tensorgrad.extras.to_numpy.CodegenContext.declare_dimension": {"tf": 1}, "tensorgrad.extras.to_numpy.CodegenContext.set_var_type": {"tf": 1}, "tensorgrad.extras.to_numpy.CodegenContext.get_var_type": {"tf": 1}, "tensorgrad.extras.to_numpy.permute_code": {"tf": 1}}, "df": 15}}}}, "o": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "e": {"docs": {"tensorgrad.extras.to_tikz.TikzGraph.added_node_names": {"tf": 1}, "tensorgrad.extras.to_tikz.TikzGraph.add_node": {"tf": 1}}, "df": 2, "r": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "f": {"docs": {"tensorgrad.extras.to_tikz.NodeRef": {"tf": 1}, "tensorgrad.extras.to_tikz.NodeRef.__init__": {"tf": 1}, "tensorgrad.extras.to_tikz.NodeRef.name": {"tf": 1}, "tensorgrad.extras.to_tikz.NodeRef.edge_style": {"tf": 1}, "tensorgrad.extras.to_tikz.NodeRef.edge_label": {"tf": 1}}, "df": 5}}}}}}, "e": {"docs": {}, "df": 0, "w": {"docs": {"tensorgrad.tensor.Derivative.new_names": {"tf": 1}}, "df": 1}}}, "s": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "l": {"docs": {"tensorgrad.extras.expectation.Expectation.structural_graph": {"tf": 1}, "tensorgrad.imgtools.draw_structural_graph": {"tf": 1}, "tensorgrad.tensor.Tensor.structural_graph": {"tf": 1}, "tensorgrad.tensor.Tensor.edge_structural_graph": {"tf": 1}, "tensorgrad.tensor.Variable.structural_graph": {"tf": 1}, "tensorgrad.tensor.Rename.structural_graph": {"tf": 1}, "tensorgrad.tensor.Constant.structural_graph": {"tf": 1}, "tensorgrad.tensor.Delta.structural_graph": {"tf": 1}, "tensorgrad.tensor.Function.structural_graph": {"tf": 1}, "tensorgrad.tensor.Derivative.structural_graph": {"tf": 1}, "tensorgrad.tensor.Product.structural_graph": {"tf": 1}, "tensorgrad.tensor.Sum.structural_graph": {"tf": 1}}, "df": 12}}}}}}}, "i": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "e": {"docs": {"tensorgrad.functions.Convolution.stride": {"tf": 1}}, "df": 1}}, "n": {"docs": {}, "df": 0, "g": {"docs": {"tensorgrad.tensor.Tensor.graph_to_string": {"tf": 1}}, "df": 1}}}}, "y": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "e": {"docs": {"tensorgrad.extras.to_tikz.NodeRef.edge_style": {"tf": 1}}, "df": 1}}}, "e": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "s": {"docs": {"tensorgrad.imgtools.save_steps_old": {"tf": 1}, "tensorgrad.imgtools.save_steps": {"tf": 1}}, "df": 2}}}}, "i": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "e": {"docs": {"tensorgrad.extras.to_formula_old.to_simple_matrix_formula": {"tf": 1}}, "df": 1}, "i": {"docs": {}, "df": 0, "f": {"docs": {}, "df": 0, "y": {"docs": {"tensorgrad.tensor.Tensor.simplify": {"tf": 1}, "tensorgrad.tensor.Tensor.full_simplify": {"tf": 1}, "tensorgrad.tensor.Delta.simplify_outer": {"tf": 1}, "tensorgrad.tensor.FunctionSignature.simplify": {"tf": 1}}, "df": 4}}}}}}, "g": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "d": {"docs": {"tensorgrad.functions.sigmoid": {"tf": 1}}, "df": 1}}}}, "n": {"docs": {"tensorgrad.functions.sign": {"tf": 1}}, "df": 1, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "e": {"docs": {"tensorgrad.tensor.Function.signature": {"tf": 1}}, "df": 1}}}}}}}, "z": {"docs": {}, "df": 0, "e": {"docs": {"tensorgrad.tensor.Delta.size": {"tf": 1}}, "df": 1}}}, "e": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "n": {"docs": {"tensorgrad.extras.to_numpy.CodegenContext.seen_variables": {"tf": 1}, "tensorgrad.extras.to_numpy.CodegenContext.seen_symbols": {"tf": 1}, "tensorgrad.extras.to_numpy.CodegenContext.seen_names": {"tf": 1}, "tensorgrad.extras.to_pytorch.CodegenContext.seen_variables": {"tf": 1}, "tensorgrad.extras.to_pytorch.CodegenContext.seen_symbols": {"tf": 1}, "tensorgrad.extras.to_pytorch.CodegenContext.seen_names": {"tf": 1}}, "df": 6}}, "t": {"docs": {"tensorgrad.extras.to_numpy.CodegenContext.set_var_type": {"tf": 1}}, "df": 1}}, "y": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "b": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "s": {"docs": {"tensorgrad.extras.to_numpy.CodegenContext.seen_symbols": {"tf": 1}, "tensorgrad.extras.to_pytorch.CodegenContext.seen_symbols": {"tf": 1}}, "df": 2}}}}, "m": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "z": {"docs": {}, "df": 0, "e": {"docs": {"tensorgrad.functions.symmetrize": {"tf": 1}}, "df": 1}}, "e": {"docs": {}, "df": 0, "s": {"docs": {"tensorgrad.tensor.Tensor.symmetries": {"tf": 1}, "tensorgrad.tensor.Variable.with_symmetries": {"tf": 1}, "tensorgrad.tensor.Constant.with_symmetries": {"tf": 1}}, "df": 3}}}}}}}}}, "u": {"docs": {}, "df": 0, "b": {"docs": {}, "df": 0, "g": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "h": {"docs": {"tensorgrad.extras.to_tikz.TikzGraph.subgraph": {"tf": 1}, "tensorgrad.extras.to_tikz.TikzGraph.add_subgraph": {"tf": 1}}, "df": 2}}}}}}, "m": {"docs": {"tensorgrad.functions.sum": {"tf": 1}, "tensorgrad.tensor.Sum": {"tf": 1}, "tensorgrad.tensor.Sum.__init__": {"tf": 1}, "tensorgrad.tensor.Sum.tensors": {"tf": 1}, "tensorgrad.tensor.Sum.weights": {"tf": 1}, "tensorgrad.tensor.Sum.structural_graph": {"tf": 1}, "tensorgrad.tensor.Sum.depends_on": {"tf": 1}}, "df": 7}}, "p": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {"tensorgrad.extras.to_tikz.spring_layout": {"tf": 1}}, "df": 1}}}}}, "q": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "t": {"docs": {"tensorgrad.functions.sqrt": {"tf": 1}}, "df": 1}}}, "o": {"docs": {}, "df": 0, "f": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "x": {"docs": {"tensorgrad.functions.softmax": {"tf": 1}}, "df": 1}}}}}}, "a": {"docs": {}, "df": 0, "v": {"docs": {}, "df": 0, "e": {"docs": {"tensorgrad.imgtools.save_as_image": {"tf": 1}, "tensorgrad.imgtools.save_steps_old": {"tf": 1}, "tensorgrad.imgtools.save_steps": {"tf": 1}}, "df": 3}}}, "h": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "e": {"docs": {"tensorgrad.tensor.Tensor.shape": {"tf": 1}, "tensorgrad.tensor.Function.shape_out": {"tf": 1}}, "df": 2}}}}}, "g": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "h": {"docs": {"tensorgrad.extras.expectation.Expectation.structural_graph": {"tf": 1}, "tensorgrad.functions.graph": {"tf": 1}, "tensorgrad.imgtools.draw_structural_graph": {"tf": 1}, "tensorgrad.tensor.Tensor.structural_graph": {"tf": 1}, "tensorgrad.tensor.Tensor.edge_structural_graph": {"tf": 1}, "tensorgrad.tensor.Tensor.graph_to_string": {"tf": 1}, "tensorgrad.tensor.Variable.structural_graph": {"tf": 1}, "tensorgrad.tensor.Rename.structural_graph": {"tf": 1}, "tensorgrad.tensor.Constant.structural_graph": {"tf": 1}, "tensorgrad.tensor.Delta.structural_graph": {"tf": 1}, "tensorgrad.tensor.Function.structural_graph": {"tf": 1}, "tensorgrad.tensor.Derivative.structural_graph": {"tf": 1}, "tensorgrad.tensor.Product.structural_graph": {"tf": 1}, "tensorgrad.tensor.Sum.structural_graph": {"tf": 1}}, "df": 14}}, "d": {"docs": {"tensorgrad.functions.max_grad": {"tf": 1}, "tensorgrad.tensor.Tensor.grad": {"tf": 1}}, "df": 2}}}, "e": {"docs": {}, "df": 0, "t": {"docs": {"tensorgrad.extras.to_numpy.CodegenContext.get_var_type": {"tf": 1}, "tensorgrad.utils.DisjointSets.get": {"tf": 1}, "tensorgrad.utils.KeyStoringDict.get_with_key": {"tf": 1}, "tensorgrad.utils.KeyStoringDict.get": {"tf": 1}}, "df": 4}, "n": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "e": {"docs": {"tensorgrad.testutils.generate_copy": {"tf": 1}, "tensorgrad.testutils.generate_random_tensor_expression": {"tf": 1}, "tensorgrad.testutils.atlas_generate_random_tensor_expression": {"tf": 1}}, "df": 3}}}}}}}, "t": {"0": {"docs": {"tensorgrad.functions.gt0": {"tf": 1}}, "df": 1}, "docs": {"tensorgrad.functions.gt": {"tf": 1}}, "df": 1}}, "o": {"docs": {}, "df": 0, "n": {"docs": {"tensorgrad.extras.expectation.Expectation.depends_on": {"tf": 1}, "tensorgrad.tensor.Tensor.depends_on": {"tf": 1}, "tensorgrad.tensor.Variable.depends_on": {"tf": 1}, "tensorgrad.tensor.Rename.depends_on": {"tf": 1}, "tensorgrad.tensor.Constant.depends_on": {"tf": 1}, "tensorgrad.tensor.Function.depends_on": {"tf": 1}, "tensorgrad.tensor.Derivative.depends_on": {"tf": 1}, "tensorgrad.tensor.Product.depends_on": {"tf": 1}, "tensorgrad.tensor.Sum.depends_on": {"tf": 1}}, "df": 9, "e": {"docs": {}, "df": 0, "s": {"docs": {"tensorgrad.tensor.Ones": {"tf": 1}}, "df": 1}}}, "l": {"docs": {}, "df": 0, "d": {"docs": {"tensorgrad.extras.to_formula_old": {"tf": 1}, "tensorgrad.extras.to_formula_old.to_simple_matrix_formula": {"tf": 1}, "tensorgrad.extras.to_formula_old.component_to_matrix": {"tf": 1}, "tensorgrad.extras.to_formula_old.dfs": {"tf": 1}, "tensorgrad.imgtools.save_steps_old": {"tf": 1}}, "df": 5}}, "r": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {"tensorgrad.tensor.Tensor.order": {"tf": 1}}, "df": 1}}}}, "u": {"docs": {}, "df": 0, "t": {"docs": {"tensorgrad.tensor.Function.shape_out": {"tf": 1}}, "df": 1, "e": {"docs": {}, "df": 0, "r": {"docs": {"tensorgrad.tensor.Delta.simplify_outer": {"tf": 1}}, "df": 1}}}}}, "l": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "x": {"docs": {"tensorgrad.extras.to_latex": {"tf": 1}, "tensorgrad.extras.to_latex.to_latex_indexed": {"tf": 1.4142135623730951}, "tensorgrad.extras.to_latex.to_latex_index_free": {"tf": 1.4142135623730951}, "tensorgrad.extras.to_latex.to_latex": {"tf": 1.4142135623730951}, "tensorgrad.imgtools.compile_latex": {"tf": 1}}, "df": 5}}}, "b": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "l": {"docs": {"tensorgrad.extras.to_tikz.NodeRef.edge_label": {"tf": 1}, "tensorgrad.extras.to_tikz.format_label": {"tf": 1}}, "df": 2}}}, "y": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "t": {"docs": {"tensorgrad.extras.to_tikz.tree_layout": {"tf": 1}, "tensorgrad.extras.to_tikz.spring_layout": {"tf": 1}, "tensorgrad.extras.to_tikz.choose_layout": {"tf": 1}}, "df": 3}}}}}, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "s": {"docs": {"tensorgrad.extras.to_numpy.CodegenContext.lines": {"tf": 1}, "tensorgrad.extras.to_pytorch.CodegenContext.lines": {"tf": 1}, "tensorgrad.extras.to_tikz.TikzGraph.lines": {"tf": 1}}, "df": 3}}}}, "o": {"docs": {}, "df": 0, "g": {"docs": {"tensorgrad.functions.log": {"tf": 1}}, "df": 1}}, "e": {"docs": {}, "df": 0, "h": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "n": {"docs": {"tensorgrad.tensor.Tensor.weisfeiler_lehman": {"tf": 1}}, "df": 1}}}}}}, "p": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "e": {"docs": {"tensorgrad.extras.to_numpy.permute_code": {"tf": 1}, "tensorgrad.extras.to_pytorch.permute": {"tf": 1}}, "df": 2}}}}}}, "y": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "h": {"docs": {"tensorgrad.extras.to_pytorch": {"tf": 1}, "tensorgrad.extras.to_pytorch.compile_to_callable": {"tf": 1}, "tensorgrad.extras.to_pytorch.CodegenContext": {"tf": 1}, "tensorgrad.extras.to_pytorch.CodegenContext.lines": {"tf": 1}, "tensorgrad.extras.to_pytorch.CodegenContext.cache": {"tf": 1}, "tensorgrad.extras.to_pytorch.CodegenContext.seen_variables": {"tf": 1}, "tensorgrad.extras.to_pytorch.CodegenContext.seen_symbols": {"tf": 1}, "tensorgrad.extras.to_pytorch.CodegenContext.seen_names": {"tf": 1}, "tensorgrad.extras.to_pytorch.CodegenContext.emit": {"tf": 1}, "tensorgrad.extras.to_pytorch.CodegenContext.fresh_name": {"tf": 1}, "tensorgrad.extras.to_pytorch.CodegenContext.declare_dimension": {"tf": 1}, "tensorgrad.extras.to_pytorch.permute": {"tf": 1}}, "df": 12}}}}}}, "r": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "f": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "x": {"docs": {"tensorgrad.extras.to_tikz.prefix": {"tf": 1}}, "df": 1}}}}, "o": {"docs": {}, "df": 0, "d": {"docs": {"tensorgrad.functions.prod": {"tf": 1}}, "df": 1, "u": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "t": {"docs": {"tensorgrad.tensor.Product": {"tf": 1}, "tensorgrad.tensor.Product.__init__": {"tf": 1}, "tensorgrad.tensor.Product.tensors": {"tf": 1}, "tensorgrad.tensor.Product.merge": {"tf": 1}, "tensorgrad.tensor.Product.components": {"tf": 1}, "tensorgrad.tensor.Product.structural_graph": {"tf": 1}, "tensorgrad.tensor.Product.depends_on": {"tf": 1}}, "df": 7}}}}}}, "a": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "e": {"docs": {"tensorgrad.functions.parse_dim": {"tf": 1}}, "df": 1}}, "e": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "t": {"docs": {"tensorgrad.utils.DisjointSets.parent": {"tf": 1}}, "df": 1}}}}, "i": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "w": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "e": {"docs": {"tensorgrad.functions.pairwise_distance": {"tf": 1}}, "df": 1}}}}}}}, "o": {"docs": {}, "df": 0, "w": {"docs": {"tensorgrad.functions.pow": {"tf": 1}}, "df": 1}, "p": {"docs": {"tensorgrad.utils.KeyStoringDict.pop": {"tf": 1}}, "df": 1}}}, "r": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "g": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {"tensorgrad.extras.to_tikz.depth_tracking_dispatcher.register": {"tf": 1}}, "df": 1}}}}}}, "l": {"docs": {}, "df": 0, "u": {"docs": {"tensorgrad.functions.relu": {"tf": 1}}, "df": 1}}, "p": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {"tensorgrad.functions.repeat": {"tf": 1}}, "df": 1}}}}, "s": {"docs": {}, "df": 0, "h": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "e": {"docs": {"tensorgrad.functions.Reshape": {"tf": 1}}, "df": 1}}}}}, "n": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "e": {"docs": {"tensorgrad.tensor.Tensor.rename": {"tf": 1}, "tensorgrad.tensor.Rename": {"tf": 1}, "tensorgrad.tensor.Rename.__init__": {"tf": 1}, "tensorgrad.tensor.Rename.name": {"tf": 1}, "tensorgrad.tensor.Rename.tensor": {"tf": 1}, "tensorgrad.tensor.Rename.mapping": {"tf": 1}, "tensorgrad.tensor.Rename.depends_on": {"tf": 1}, "tensorgrad.tensor.Rename.merge_renames": {"tf": 1}, "tensorgrad.tensor.Rename.structural_graph": {"tf": 1}}, "df": 9, "s": {"docs": {"tensorgrad.tensor.Rename.merge_renames": {"tf": 1}}, "df": 1}}}}}}, "a": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "d": {"docs": {"tensorgrad.testutils.rand_values": {"tf": 1}}, "df": 1, "o": {"docs": {}, "df": 0, "m": {"docs": {"tensorgrad.testutils.generate_random_tensor_expression": {"tf": 1}, "tensorgrad.testutils.make_random_tree": {"tf": 1}, "tensorgrad.testutils.atlas_generate_random_tensor_expression": {"tf": 1}, "tensorgrad.testutils.random_tensor_expr": {"tf": 1}, "tensorgrad.testutils.random_tensor_expr2": {"tf": 1}}, "df": 5}}}}}}, "a": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "d": {"docs": {"tensorgrad.extras.to_tikz.TikzGraph.add_node": {"tf": 1}, "tensorgrad.extras.to_tikz.TikzGraph.add_edge": {"tf": 1}, "tensorgrad.extras.to_tikz.TikzGraph.add_subgraph": {"tf": 1}}, "df": 3, "e": {"docs": {}, "df": 0, "d": {"docs": {"tensorgrad.extras.to_tikz.TikzGraph.added_node_names": {"tf": 1}}, "df": 1}}}}, "b": {"docs": {}, "df": 0, "s": {"docs": {"tensorgrad.functions.abs": {"tf": 1}}, "df": 1}}, "r": {"docs": {}, "df": 0, "g": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "x": {"docs": {"tensorgrad.functions.argmax": {"tf": 1}}, "df": 1}}}}}, "s": {"docs": {"tensorgrad.imgtools.save_as_image": {"tf": 1}}, "df": 1, "s": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "t": {"docs": {"tensorgrad.testutils.assert_close": {"tf": 1}}, "df": 1}}}}}, "t": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "s": {"docs": {"tensorgrad.testutils.atlas_generate_random_tensor_expression": {"tf": 1}}, "df": 1}}}}}, "h": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "e": {"docs": {"tensorgrad.extras.to_tikz.TikzGraph.handle_free_edges": {"tf": 1}}, "df": 1}}}}}}, "k": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "k": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {"tensorgrad.functions.kronecker": {"tf": 1}}, "df": 1}}}}}}}}, "e": {"docs": {}, "df": 0, "y": {"docs": {"tensorgrad.utils.KeyStoringDict.get_with_key": {"tf": 1}}, "df": 1, "s": {"docs": {"tensorgrad.utils.KeyStoringDict.keys": {"tf": 1}}, "df": 1, "t": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "t": {"docs": {"tensorgrad.utils.KeyStoringDict": {"tf": 1}, "tensorgrad.utils.KeyStoringDict.__init__": {"tf": 1}, "tensorgrad.utils.KeyStoringDict.get_with_key": {"tf": 1}, "tensorgrad.utils.KeyStoringDict.get": {"tf": 1}, "tensorgrad.utils.KeyStoringDict.pop": {"tf": 1}, "tensorgrad.utils.KeyStoringDict.update": {"tf": 1}, "tensorgrad.utils.KeyStoringDict.keys": {"tf": 1}, "tensorgrad.utils.KeyStoringDict.values": {"tf": 1}, "tensorgrad.utils.KeyStoringDict.items": {"tf": 1}, "tensorgrad.utils.KeyStoringDict.copy": {"tf": 1}}, "df": 10}}}}}}}}}}}}}}, "z": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "o": {"docs": {"tensorgrad.tensor.Zero": {"tf": 1}}, "df": 1}}}}, "x": {"docs": {"tensorgrad.tensor.Derivative.x": {"tf": 1}}, "df": 1}, "b": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "t": {"docs": {"tensorgrad.testutils.broadcast_tensors": {"tf": 1}}, "df": 1}}}}}}}}}, "u": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "s": {"docs": {"tensorgrad.utils": {"tf": 1}, "tensorgrad.utils.DisjointSets": {"tf": 1}, "tensorgrad.utils.DisjointSets.parent": {"tf": 1}, "tensorgrad.utils.DisjointSets.values": {"tf": 1}, "tensorgrad.utils.DisjointSets.find": {"tf": 1}, "tensorgrad.utils.DisjointSets.union": {"tf": 1}, "tensorgrad.utils.DisjointSets.get": {"tf": 1}, "tensorgrad.utils.DisjointSets.items": {"tf": 1}, "tensorgrad.utils.KeyStoringDict": {"tf": 1}, "tensorgrad.utils.KeyStoringDict.__init__": {"tf": 1}, "tensorgrad.utils.KeyStoringDict.get_with_key": {"tf": 1}, "tensorgrad.utils.KeyStoringDict.get": {"tf": 1}, "tensorgrad.utils.KeyStoringDict.pop": {"tf": 1}, "tensorgrad.utils.KeyStoringDict.update": {"tf": 1}, "tensorgrad.utils.KeyStoringDict.keys": {"tf": 1}, "tensorgrad.utils.KeyStoringDict.values": {"tf": 1}, "tensorgrad.utils.KeyStoringDict.items": {"tf": 1}, "tensorgrad.utils.KeyStoringDict.copy": {"tf": 1}}, "df": 18}}}}, "n": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {"tensorgrad.utils.DisjointSets.union": {"tf": 1}}, "df": 1}}}}, "p": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "e": {"docs": {"tensorgrad.utils.KeyStoringDict.update": {"tf": 1}}, "df": 1}}}}}}}}, "annotation": {"root": {"docs": {"tensorgrad.extras.to_tikz.NodeRef.name": {"tf": 1}, "tensorgrad.extras.to_tikz.NodeRef.edge_style": {"tf": 1}, "tensorgrad.extras.to_tikz.NodeRef.edge_label": {"tf": 1}, "tensorgrad.tensor.Tensor.edges": {"tf": 1}, "tensorgrad.tensor.Tensor.shape": {"tf": 1}, "tensorgrad.tensor.Tensor.order": {"tf": 1}, "tensorgrad.tensor.Tensor.weisfeiler_lehman": {"tf": 1}, "tensorgrad.tensor.Tensor.symmetries": {"tf": 1}, "tensorgrad.tensor.Delta.size": {"tf": 1}, "tensorgrad.tensor.FunctionSignature.name": {"tf": 1}, "tensorgrad.tensor.FunctionSignature.edges": {"tf": 1}, "tensorgrad.tensor.FunctionSignature.inputs": {"tf": 1.4142135623730951}, "tensorgrad.utils.DisjointSets.parent": {"tf": 1}, "tensorgrad.utils.DisjointSets.values": {"tf": 1}}, "df": 14, "s": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "r": {"docs": {"tensorgrad.extras.to_tikz.NodeRef.name": {"tf": 1}, "tensorgrad.extras.to_tikz.NodeRef.edge_style": {"tf": 1}, "tensorgrad.extras.to_tikz.NodeRef.edge_label": {"tf": 1}, "tensorgrad.tensor.Tensor.weisfeiler_lehman": {"tf": 1}, "tensorgrad.tensor.FunctionSignature.name": {"tf": 1}}, "df": 5}}, "e": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "[": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "r": {"docs": {"tensorgrad.tensor.Tensor.edges": {"tf": 1}, "tensorgrad.tensor.FunctionSignature.edges": {"tf": 1}}, "df": 2}}}, "f": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "z": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "[": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "r": {"docs": {"tensorgrad.tensor.Tensor.symmetries": {"tf": 1}}, "df": 1}}}}}}}}}}}}}}}}, "y": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "y": {"docs": {"tensorgrad.tensor.Tensor.shape": {"tf": 1}, "tensorgrad.tensor.Delta.size": {"tf": 1}}, "df": 2}}, "b": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "l": {"docs": {"tensorgrad.tensor.Tensor.shape": {"tf": 1.4142135623730951}, "tensorgrad.tensor.Delta.size": {"tf": 1.4142135623730951}}, "df": 2}}}}}}, "d": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "[": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "r": {"docs": {"tensorgrad.tensor.Tensor.shape": {"tf": 1}}, "df": 1}}}, "~": {"docs": {}, "df": 0, "k": {"docs": {"tensorgrad.utils.DisjointSets.parent": {"tf": 1}, "tensorgrad.utils.DisjointSets.values": {"tf": 1}}, "df": 2}}}}}}}, "c": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "e": {"docs": {"tensorgrad.tensor.Tensor.shape": {"tf": 1}, "tensorgrad.tensor.Delta.size": {"tf": 1}}, "df": 2}}}}, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "t": {"docs": {"tensorgrad.tensor.Tensor.order": {"tf": 1}}, "df": 1}}}, "t": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "[": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "[": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "r": {"docs": {"tensorgrad.tensor.FunctionSignature.inputs": {"tf": 1}}, "df": 1}}}}}}}}}}}}}, "k": {"docs": {"tensorgrad.utils.DisjointSets.parent": {"tf": 1}}, "df": 1}, "v": {"docs": {"tensorgrad.utils.DisjointSets.values": {"tf": 1}}, "df": 1}}}, "default_value": {"root": {"0": {"docs": {"tensorgrad.extras.to_tikz.prefix": {"tf": 1}}, "df": 1, "p": {"docs": {}, "df": 0, "t": {"docs": {"tensorgrad.extras.to_tikz.prefix": {"tf": 1.4142135623730951}}, "df": 1}}}, "1": {"docs": {"tensorgrad.extras.to_tikz.prefix": {"tf": 1}}, "df": 1, "e": {"docs": {}, "df": 0, "m": {"docs": {"tensorgrad.extras.to_tikz.tree_layout": {"tf": 1.4142135623730951}}, "df": 1}}, "p": {"docs": {}, "df": 0, "t": {"docs": {"tensorgrad.extras.to_tikz.prefix": {"tf": 1}}, "df": 1}}}, "2": {"docs": {"tensorgrad.extras.to_tikz.prefix": {"tf": 1}}, "df": 1, "p": {"docs": {}, "df": 0, "t": {"docs": {"tensorgrad.extras.to_tikz.prefix": {"tf": 2}}, "df": 1}}}, "3": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "t": {"docs": {"tensorgrad.extras.to_tikz.prefix": {"tf": 1.7320508075688772}}, "df": 1}}}, "4": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "t": {"docs": {"tensorgrad.extras.to_tikz.prefix": {"tf": 2}}, "df": 1}}}, "5": {"docs": {"tensorgrad.extras.to_tikz.prefix": {"tf": 1}}, "df": 1, "}": {"docs": {}, "df": 0, "\\": {"docs": {}, "df": 0, "\\": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "f": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "t": {"docs": {"tensorgrad.extras.to_tikz.prefix": {"tf": 1}}, "df": 1}}}}}}}}}}}}}, "e": {"docs": {}, "df": 0, "x": {"docs": {"tensorgrad.extras.to_tikz.prefix": {"tf": 1}}, "df": 1}}}, "6": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "t": {"docs": {"tensorgrad.extras.to_tikz.prefix": {"tf": 1}}, "df": 1}}}, "8": {"5": {"docs": {"tensorgrad.extras.to_tikz.prefix": {"tf": 1}}, "df": 1}, "docs": {}, "df": 0}, "docs": {"tensorgrad.extras.to_tikz.NodeRef.edge_style": {"tf": 1.4142135623730951}, "tensorgrad.extras.to_tikz.NodeRef.edge_label": {"tf": 1.4142135623730951}, "tensorgrad.extras.to_tikz.tree_layout": {"tf": 1.4142135623730951}, "tensorgrad.extras.to_tikz.spring_layout": {"tf": 1.4142135623730951}, "tensorgrad.extras.to_tikz.prefix": {"tf": 2.23606797749979}}, "df": 5, "x": {"2": {"7": {"docs": {"tensorgrad.extras.to_tikz.NodeRef.edge_style": {"tf": 1.4142135623730951}, "tensorgrad.extras.to_tikz.NodeRef.edge_label": {"tf": 1.4142135623730951}, "tensorgrad.extras.to_tikz.tree_layout": {"tf": 1.4142135623730951}, "tensorgrad.extras.to_tikz.spring_layout": {"tf": 1.4142135623730951}, "tensorgrad.extras.to_tikz.prefix": {"tf": 1.4142135623730951}}, "df": 5}, "docs": {}, "df": 0}, "docs": {}, "df": 0}, "t": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "e": {"docs": {"tensorgrad.extras.to_tikz.tree_layout": {"tf": 1}}, "df": 1}}}, "h": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "k": {"docs": {"tensorgrad.extras.to_tikz.prefix": {"tf": 3.1622776601683795}}, "df": 1}}}}, "e": {"docs": {}, "df": 0, "x": {"docs": {}, "df": 0, "t": {"docs": {"tensorgrad.extras.to_tikz.prefix": {"tf": 1.4142135623730951}}, "df": 1}}}, "y": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {"tensorgrad.functions.DimType": {"tf": 1.4142135623730951}}, "df": 1}}}}}}, "l": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "y": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "t": {"docs": {"tensorgrad.extras.to_tikz.tree_layout": {"tf": 1}, "tensorgrad.extras.to_tikz.spring_layout": {"tf": 1}}, "df": 2}}}, "e": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "d": {"docs": {"tensorgrad.extras.to_tikz.prefix": {"tf": 1}}, "df": 1}}}}}, "b": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "l": {"docs": {"tensorgrad.extras.to_tikz.prefix": {"tf": 1}}, "df": 1}}}}, "e": {"docs": {}, "df": 0, "f": {"docs": {}, "df": 0, "t": {"docs": {"tensorgrad.extras.to_tikz.tree_layout": {"tf": 1}}, "df": 1}}}}, "n": {"docs": {"tensorgrad.extras.to_tikz.tree_layout": {"tf": 2.449489742783178}, "tensorgrad.extras.to_tikz.spring_layout": {"tf": 1.7320508075688772}, "tensorgrad.extras.to_tikz.prefix": {"tf": 5.744562646538029}}, "df": 3, "o": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "e": {"docs": {"tensorgrad.extras.to_tikz.tree_layout": {"tf": 1}, "tensorgrad.extras.to_tikz.prefix": {"tf": 1}}, "df": 2, "s": {"docs": {"tensorgrad.extras.to_tikz.tree_layout": {"tf": 1.4142135623730951}, "tensorgrad.extras.to_tikz.spring_layout": {"tf": 1.4142135623730951}, "tensorgrad.extras.to_tikz.prefix": {"tf": 1}}, "df": 3}}}, "n": {"docs": {}, "df": 0, "e": {"docs": {"tensorgrad.extras.to_tikz.prefix": {"tf": 1}}, "df": 1}}}}, "c": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "s": {"docs": {"tensorgrad.extras.to_tikz.tree_layout": {"tf": 1}}, "df": 1}}}}}}}}, "n": {"docs": {}, "df": 0, "v": {"docs": {"tensorgrad.extras.to_tikz.prefix": {"tf": 1}}, "df": 1}}, "r": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "s": {"docs": {"tensorgrad.extras.to_tikz.prefix": {"tf": 1.7320508075688772}}, "df": 1}}}}}}, "i": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "e": {"docs": {"tensorgrad.extras.to_tikz.prefix": {"tf": 2.449489742783178}}, "df": 1}}}}}}, "g": {"docs": {}, "df": 0, "o": {"docs": {"tensorgrad.extras.to_tikz.tree_layout": {"tf": 1}}, "df": 1}, "r": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "h": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "w": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {"tensorgrad.extras.to_tikz.prefix": {"tf": 1}}, "df": 1}}}}}}}}}, "y": {"docs": {"tensorgrad.extras.to_tikz.prefix": {"tf": 1}}, "df": 1}}, "e": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "!": {"2": {"0": {"docs": {"tensorgrad.extras.to_tikz.prefix": {"tf": 1}}, "df": 1}, "docs": {}, "df": 0}, "5": {"0": {"docs": {}, "df": 0, "!": {"docs": {}, "df": 0, "b": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "k": {"docs": {"tensorgrad.extras.to_tikz.prefix": {"tf": 1}}, "df": 1}}}}}}}, "docs": {}, "df": 0}, "docs": {}, "df": 0}}}}}, "e": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "}": {"docs": {}, "df": 0, "\\": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "\\": {"docs": {}, "df": 0, "\\": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "g": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "b": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "y": {"docs": {}, "df": 0, "{": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "s": {"docs": {"tensorgrad.extras.to_tikz.prefix": {"tf": 1}}, "df": 1}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}, "d": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "w": {"docs": {}, "df": 0, "n": {"docs": {"tensorgrad.extras.to_tikz.tree_layout": {"tf": 1}}, "df": 1}}, "c": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "[": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "k": {"docs": {}, "df": 0, "z": {"docs": {}, "df": 0, "]": {"docs": {}, "df": 0, "{": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "}": {"docs": {}, "df": 0, "\\": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "\\": {"docs": {}, "df": 0, "\\": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "k": {"docs": {}, "df": 0, "z": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "b": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "y": {"docs": {}, "df": 0, "{": {"docs": {}, "df": 0, "g": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "h": {"docs": {}, "df": 0, "s": {"docs": {"tensorgrad.extras.to_tikz.prefix": {"tf": 1}}, "df": 1}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}, "e": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "s": {"docs": {"tensorgrad.extras.to_tikz.prefix": {"tf": 1}}, "df": 1}}}}}}}}}, "g": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "e": {"0": {"docs": {"tensorgrad.extras.to_tikz.prefix": {"tf": 1}}, "df": 1}, "1": {"docs": {"tensorgrad.extras.to_tikz.prefix": {"tf": 1}}, "df": 1}, "2": {"docs": {"tensorgrad.extras.to_tikz.prefix": {"tf": 1}}, "df": 1}, "3": {"docs": {"tensorgrad.extras.to_tikz.prefix": {"tf": 1}}, "df": 1}, "4": {"docs": {"tensorgrad.extras.to_tikz.prefix": {"tf": 1}}, "df": 1}, "docs": {}, "df": 0}}}}, "r": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "v": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "v": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "+": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "b": {"docs": {}, "df": 0, "g": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "h": {"docs": {"tensorgrad.extras.to_tikz.prefix": {"tf": 1}}, "df": 1}}}}}}}}}}}}}}}}}}, "r": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "w": {"docs": {"tensorgrad.extras.to_tikz.prefix": {"tf": 3.872983346207417}}, "df": 1}}}, "i": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "d": {"docs": {"tensorgrad.extras.to_tikz.prefix": {"tf": 1}}, "df": 1}}}}}, "s": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "e": {"docs": {"tensorgrad.extras.to_tikz.prefix": {"tf": 1}}, "df": 1}}}}}}}, "a": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "h": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "d": {"docs": {"tensorgrad.extras.to_tikz.prefix": {"tf": 1}}, "df": 1}}}}}}, "a": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "g": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "d": {"docs": {"tensorgrad.extras.to_tikz.tree_layout": {"tf": 1}}, "df": 1}}}}}}, "r": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "w": {"docs": {}, "df": 0, "s": {"docs": {"tensorgrad.extras.to_tikz.prefix": {"tf": 1}}, "df": 1}}}}}, "p": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "d": {"docs": {"tensorgrad.extras.to_tikz.prefix": {"tf": 1}}, "df": 1}}}}}}, "f": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "h": {"docs": {"tensorgrad.extras.to_tikz.tree_layout": {"tf": 1}, "tensorgrad.extras.to_tikz.spring_layout": {"tf": 1}}, "df": 2}}}}, "o": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "}": {"docs": {}, "df": 0, "\\": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "\\": {"docs": {}, "df": 0, "\\": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "k": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "g": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "[": {"docs": {}, "df": 0, "t": {"1": {"docs": {}, "df": 0, "]": {"docs": {}, "df": 0, "{": {"docs": {}, "df": 0, "f": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "}": {"docs": {}, "df": 0, "\\": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "\\": {"docs": {}, "df": 0, "\\": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "k": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "g": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "{": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "}": {"docs": {}, "df": 0, "\\": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "\\": {"docs": {}, "df": 0, "\\": {"docs": {}, "df": 0, "b": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "g": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "{": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "}": {"docs": {}, "df": 0, "\\": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "\\": {"docs": {}, "df": 0, "\\": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "k": {"docs": {}, "df": 0, "z": {"docs": {}, "df": 0, "[": {"docs": {}, "df": 0, "\\": {"docs": {}, "df": 0, "n": {"docs": {"tensorgrad.extras.to_tikz.prefix": {"tf": 1}}, "df": 1}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}, "docs": {}, "df": 0}}}}}}}}}}}}}}}}}}}}, "n": {"docs": {}, "df": 0, "t": {"docs": {"tensorgrad.extras.to_tikz.prefix": {"tf": 1.7320508075688772}}, "df": 1, "s": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "z": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "{": {"5": {"docs": {}, "df": 0, "}": {"docs": {}, "df": 0, "{": {"5": {"docs": {"tensorgrad.extras.to_tikz.prefix": {"tf": 1}}, "df": 1}, "docs": {}, "df": 0}}}, "docs": {}, "df": 0}}}}}}}}, "i": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "l": {"docs": {"tensorgrad.extras.to_tikz.prefix": {"tf": 3.605551275463989}}, "df": 1}}}, "u": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {"tensorgrad.extras.to_tikz.prefix": {"tf": 1}}, "df": 1, "+": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "b": {"docs": {}, "df": 0, "g": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "h": {"docs": {"tensorgrad.extras.to_tikz.prefix": {"tf": 1}}, "df": 1}}}}}}}}}}}}}}}}}, "s": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "b": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {"tensorgrad.extras.to_tikz.tree_layout": {"tf": 1}}, "df": 1}}}}}, "z": {"docs": {}, "df": 0, "e": {"docs": {"tensorgrad.extras.to_tikz.prefix": {"tf": 1}}, "df": 1}}}, "e": {"docs": {}, "df": 0, "p": {"docs": {"tensorgrad.extras.to_tikz.tree_layout": {"tf": 1.4142135623730951}, "tensorgrad.extras.to_tikz.prefix": {"tf": 3.7416573867739413}}, "df": 2}}, "p": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {"tensorgrad.extras.to_tikz.spring_layout": {"tf": 1}}, "df": 1}}}}}, "h": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "s": {"docs": {"tensorgrad.extras.to_tikz.prefix": {"tf": 1}}, "df": 1}}}, "r": {"docs": {}, "df": 0, "p": {"docs": {"tensorgrad.extras.to_tikz.prefix": {"tf": 1}}, "df": 1}}}}, "f": {"docs": {}, "df": 0, "f": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "y": {"docs": {"tensorgrad.extras.to_tikz.prefix": {"tf": 1}}, "df": 1}}}}}}}, "t": {"docs": {}, "df": 0, "y": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "e": {"docs": {"tensorgrad.extras.to_tikz.prefix": {"tf": 4.358898943540674}}, "df": 1}}}, "a": {"docs": {}, "df": 0, "r": {"docs": {"tensorgrad.extras.to_tikz.prefix": {"tf": 1.4142135623730951}}, "df": 1}}, "r": {"docs": {"tensorgrad.functions.DimType": {"tf": 1}}, "df": 1}}, "c": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "e": {"docs": {"tensorgrad.extras.to_tikz.prefix": {"tf": 1}}, "df": 1}}}}, "u": {"docs": {}, "df": 0, "b": {"docs": {}, "df": 0, "g": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "h": {"docs": {"tensorgrad.extras.to_tikz.prefix": {"tf": 1.4142135623730951}}, "df": 1}}}}}}}, "m": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "\\": {"docs": {}, "df": 0, "\\": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "h": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "}": {"docs": {}, "df": 0, "\\": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "]": {"docs": {}, "df": 0, "\\": {"docs": {}, "df": 0, "n": {"docs": {"tensorgrad.extras.to_tikz.prefix": {"tf": 1}}, "df": 1}}}}}}}}}}}}}}}}}}}}, "b": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "h": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "d": {"docs": {"tensorgrad.extras.to_tikz.tree_layout": {"tf": 1}, "tensorgrad.extras.to_tikz.spring_layout": {"tf": 1}}, "df": 2}}}}}, "l": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "k": {"docs": {"tensorgrad.extras.to_tikz.prefix": {"tf": 3}}, "df": 1}}}, "u": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "!": {"2": {"0": {"docs": {"tensorgrad.extras.to_tikz.prefix": {"tf": 1}}, "df": 1}, "docs": {}, "df": 0}, "5": {"0": {"docs": {}, "df": 0, "!": {"docs": {}, "df": 0, "b": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "k": {"docs": {"tensorgrad.extras.to_tikz.prefix": {"tf": 1}}, "df": 1}}}}}}}, "docs": {}, "df": 0}, "docs": {}, "df": 0}}}}}, "e": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "g": {"docs": {}, "df": 0, "e": {"docs": {"tensorgrad.extras.to_tikz.prefix": {"tf": 1.4142135623730951}}, "df": 1, "s": {"docs": {"tensorgrad.extras.to_tikz.tree_layout": {"tf": 1}, "tensorgrad.extras.to_tikz.spring_layout": {"tf": 1}}, "df": 2}}}}, "v": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "y": {"docs": {"tensorgrad.extras.to_tikz.prefix": {"tf": 2}}, "df": 1}}}}, "x": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "+": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "b": {"docs": {}, "df": 0, "g": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "h": {"docs": {"tensorgrad.extras.to_tikz.prefix": {"tf": 1}}, "df": 1}}}}}}}}}}}}}}}}}}}}, "q": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "s": {"docs": {"tensorgrad.extras.to_tikz.prefix": {"tf": 1.4142135623730951}}, "df": 1}}}}}}, "m": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "a": {"docs": {"tensorgrad.extras.to_tikz.prefix": {"tf": 1}}, "df": 1}}}, "a": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "k": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {}, "df": 0, "s": {"docs": {"tensorgrad.extras.to_tikz.prefix": {"tf": 1}}, "df": 1}}}}}}}, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "m": {"docs": {"tensorgrad.extras.to_tikz.prefix": {"tf": 1}}, "df": 1}}}}}, "d": {"docs": {}, "df": 0, "w": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "y": {"docs": {"tensorgrad.extras.to_tikz.prefix": {"tf": 1}}, "df": 1}}}}}}, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {"tensorgrad.extras.to_tikz.prefix": {"tf": 3.7416573867739413}}, "df": 1}}}}, "d": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "y": {"docs": {"tensorgrad.extras.to_tikz.prefix": {"tf": 1}}, "df": 1}}}}}}}, "t": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "b": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "[": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "r": {"docs": {"tensorgrad.functions.DimType": {"tf": 1}}, "df": 1}}}}}}}}}}}}, "z": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "o": {"docs": {"tensorgrad.extras.to_tikz.prefix": {"tf": 1}}, "df": 1}}}}, "r": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "e": {"docs": {"tensorgrad.extras.to_tikz.prefix": {"tf": 2}}, "df": 1}}}}}}}, "s": {"docs": {}, "df": 0, "h": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "e": {"docs": {"tensorgrad.extras.to_tikz.prefix": {"tf": 1}}, "df": 1}}}}}, "d": {"docs": {}, "df": 0, "!": {"2": {"0": {"docs": {"tensorgrad.extras.to_tikz.prefix": {"tf": 1}}, "df": 1}, "docs": {}, "df": 0}, "5": {"0": {"docs": {}, "df": 0, "!": {"docs": {}, "df": 0, "b": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "k": {"docs": {"tensorgrad.extras.to_tikz.prefix": {"tf": 1}}, "df": 1}}}}}}}, "docs": {}, "df": 0}, "docs": {}, "df": 0}}}, "o": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "d": {"docs": {"tensorgrad.extras.to_tikz.prefix": {"tf": 1.4142135623730951}}, "df": 1}}}}}}}, "w": {"docs": {}, "df": 0, "h": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "e": {"docs": {"tensorgrad.extras.to_tikz.prefix": {"tf": 2.23606797749979}}, "df": 1}}}}}, "v": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "r": {"docs": {"tensorgrad.extras.to_tikz.prefix": {"tf": 1}}, "df": 1}}, "e": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "y": {"docs": {"tensorgrad.extras.to_tikz.prefix": {"tf": 3}}, "df": 1}}}}, "p": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "!": {"2": {"0": {"docs": {"tensorgrad.extras.to_tikz.prefix": {"tf": 1.4142135623730951}}, "df": 1}, "docs": {}, "df": 0}, "5": {"0": {"docs": {}, "df": 0, "!": {"docs": {}, "df": 0, "b": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "k": {"docs": {"tensorgrad.extras.to_tikz.prefix": {"tf": 1.4142135623730951}}, "df": 1}}}}}}}, "docs": {}, "df": 0}, "docs": {}, "df": 0}}}}}}, "o": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "s": {"docs": {"tensorgrad.extras.to_tikz.prefix": {"tf": 1}}, "df": 1}}}}}, "i": {"docs": {}, "df": 0, "n": {"docs": {"tensorgrad.extras.to_tikz.prefix": {"tf": 1.4142135623730951}}, "df": 1}}}, "o": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "!": {"2": {"0": {"docs": {"tensorgrad.extras.to_tikz.prefix": {"tf": 1}}, "df": 1}, "docs": {}, "df": 0}, "5": {"0": {"docs": {}, "df": 0, "!": {"docs": {}, "df": 0, "b": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "k": {"docs": {"tensorgrad.extras.to_tikz.prefix": {"tf": 1}}, "df": 1}}}}}}}, "docs": {}, "df": 0}, "docs": {}, "df": 0}}}}}}, "p": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "y": {"docs": {"tensorgrad.extras.to_tikz.prefix": {"tf": 1.4142135623730951}}, "df": 1}}}}}}}, "u": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "[": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "y": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "e": {"docs": {"tensorgrad.functions.DimType": {"tf": 1}}, "df": 1}}}}}}}}}}}}}}}}, "signature": {"root": {"0": {"0": {"0": {"1": {"docs": {"tensorgrad.testutils.assert_close": {"tf": 1}}, "df": 1}, "docs": {}, "df": 0}, "docs": {}, "df": 0}, "5": {"docs": {"tensorgrad.testutils.assert_close": {"tf": 1}}, "df": 1}, "docs": {"tensorgrad.extras.to_tikz.TikzGraph.__init__": {"tf": 1}, "tensorgrad.testutils.assert_close": {"tf": 1}}, "df": 2}, "1": {"0": {"docs": {"tensorgrad.imgtools.combine_images_vertically": {"tf": 1}}, "df": 1}, "docs": {"tensorgrad.extras.to_tikz.TikzGraph.add_edge": {"tf": 1}, "tensorgrad.functions.Convolution.__init__": {"tf": 1}}, "df": 2, "e": {"docs": {"tensorgrad.testutils.assert_close": {"tf": 1}}, "df": 1}}, "2": {"docs": {"tensorgrad.imgtools.combine_images_vertically": {"tf": 1}}, "df": 1}, "3": {"9": {"docs": {"tensorgrad.extras.to_tikz.NodeRef.__init__": {"tf": 2}, "tensorgrad.extras.to_tikz.Namer.fresh_name": {"tf": 1.4142135623730951}, "tensorgrad.functions.parse_dim": {"tf": 1.4142135623730951}, "tensorgrad.imgtools.compile_latex": {"tf": 1.4142135623730951}, "tensorgrad.imgtools.combine_images_vertically": {"tf": 2.449489742783178}, "tensorgrad.imgtools.save_steps": {"tf": 1.4142135623730951}}, "df": 6}, "docs": {}, "df": 0}, "4": {"docs": {"tensorgrad.testutils.random_tensor_expr": {"tf": 1.4142135623730951}, "tensorgrad.testutils.random_tensor_expr2": {"tf": 1.4142135623730951}}, "df": 2}, "5": {"0": {"docs": {"tensorgrad.imgtools.draw_structural_graph": {"tf": 1}}, "df": 1}, "docs": {"tensorgrad.imgtools.combine_images_vertically": {"tf": 1}}, "df": 1}, "docs": {"tensorgrad.extras.evaluate.evaluate": {"tf": 9.797958971132712}, "tensorgrad.extras.evaluate.Context.__init__": {"tf": 8.774964387392123}, "tensorgrad.extras.evaluate.Context.evaluate": {"tf": 5.656854249492381}, "tensorgrad.extras.evaluate.evaluate_function": {"tf": 6.6332495807108}, "tensorgrad.extras.expectation.Expectation.__init__": {"tf": 11.135528725660043}, "tensorgrad.extras.expectation.Expectation.structural_graph": {"tf": 6.557438524302}, "tensorgrad.extras.expectation.Expectation.depends_on": {"tf": 5.291502622129181}, "tensorgrad.extras.to_formula_old.to_simple_matrix_formula": {"tf": 3.1622776601683795}, "tensorgrad.extras.to_formula_old.component_to_matrix": {"tf": 3.7416573867739413}, "tensorgrad.extras.to_formula_old.dfs": {"tf": 4.69041575982343}, "tensorgrad.extras.to_latex.to_latex_indexed": {"tf": 4.898979485566356}, "tensorgrad.extras.to_latex.to_latex_index_free": {"tf": 4.898979485566356}, "tensorgrad.extras.to_latex.to_latex": {"tf": 6.164414002968976}, "tensorgrad.extras.to_numpy.compile_to_callable": {"tf": 6.557438524302}, "tensorgrad.extras.to_numpy.CodegenContext.emit": {"tf": 4.242640687119285}, "tensorgrad.extras.to_numpy.CodegenContext.fresh_name": {"tf": 4.242640687119285}, "tensorgrad.extras.to_numpy.CodegenContext.declare_dimension": {"tf": 3.7416573867739413}, "tensorgrad.extras.to_numpy.CodegenContext.set_var_type": {"tf": 4.242640687119285}, "tensorgrad.extras.to_numpy.CodegenContext.get_var_type": {"tf": 3.7416573867739413}, "tensorgrad.extras.to_numpy.permute_code": {"tf": 6.48074069840786}, "tensorgrad.extras.to_pytorch.compile_to_callable": {"tf": 6.557438524302}, "tensorgrad.extras.to_pytorch.CodegenContext.emit": {"tf": 4.242640687119285}, "tensorgrad.extras.to_pytorch.CodegenContext.fresh_name": {"tf": 4.242640687119285}, "tensorgrad.extras.to_pytorch.CodegenContext.declare_dimension": {"tf": 3.7416573867739413}, "tensorgrad.extras.to_pytorch.permute": {"tf": 6.48074069840786}, "tensorgrad.extras.to_tikz.to_tikz": {"tf": 3.1622776601683795}, "tensorgrad.extras.to_tikz.NodeRef.__init__": {"tf": 6.6332495807108}, "tensorgrad.extras.to_tikz.Namer.fresh_name": {"tf": 4.47213595499958}, "tensorgrad.extras.to_tikz.Namer.edge": {"tf": 3.7416573867739413}, "tensorgrad.extras.to_tikz.depth_tracking_dispatcher.register": {"tf": 4.69041575982343}, "tensorgrad.extras.to_tikz.TikzGraph.__init__": {"tf": 6.6332495807108}, "tensorgrad.extras.to_tikz.TikzGraph.subgraph": {"tf": 3.1622776601683795}, "tensorgrad.extras.to_tikz.TikzGraph.to_tikz": {"tf": 3.7416573867739413}, "tensorgrad.extras.to_tikz.TikzGraph.add_node": {"tf": 8.246211251235321}, "tensorgrad.extras.to_tikz.TikzGraph.add_edge": {"tf": 8.426149773176359}, "tensorgrad.extras.to_tikz.TikzGraph.add_subgraph": {"tf": 8.774964387392123}, "tensorgrad.extras.to_tikz.TikzGraph.handle_free_edges": {"tf": 4.242640687119285}, "tensorgrad.extras.to_tikz.format_label": {"tf": 3.1622776601683795}, "tensorgrad.extras.to_tikz.format_weight": {"tf": 3.7416573867739413}, "tensorgrad.extras.to_tikz.format_function": {"tf": 3.1622776601683795}, "tensorgrad.extras.to_tikz.choose_layout": {"tf": 3.1622776601683795}, "tensorgrad.functions.taylor": {"tf": 8.717797887081348}, "tensorgrad.functions.frobenius2": {"tf": 5.656854249492381}, "tensorgrad.functions.symmetrize": {"tf": 9}, "tensorgrad.functions.graph": {"tf": 6.6332495807108}, "tensorgrad.functions.kronecker": {"tf": 5.830951894845301}, "tensorgrad.functions.diag": {"tf": 6.855654600401044}, "tensorgrad.functions.trace": {"tf": 5.656854249492381}, "tensorgrad.functions.parse_dim": {"tf": 8.774964387392123}, "tensorgrad.functions.sum": {"tf": 9}, "tensorgrad.functions.prod": {"tf": 5.830951894845301}, "tensorgrad.functions.mean": {"tf": 9}, "tensorgrad.functions.dot": {"tf": 8.602325267042627}, "tensorgrad.functions.multi_dot": {"tf": 7.54983443527075}, "tensorgrad.functions.contract": {"tf": 8.602325267042627}, "tensorgrad.functions.pow": {"tf": 7.14142842854285}, "tensorgrad.functions.sqrt": {"tf": 5.656854249492381}, "tensorgrad.functions.inverse": {"tf": 7.280109889280518}, "tensorgrad.functions.exp": {"tf": 5.656854249492381}, "tensorgrad.functions.log": {"tf": 5.656854249492381}, "tensorgrad.functions.tanh": {"tf": 5.656854249492381}, "tensorgrad.functions.sigmoid": {"tf": 5.656854249492381}, "tensorgrad.functions.softmax": {"tf": 8.12403840463596}, "tensorgrad.functions.pairwise_distance": {"tf": 9.1104335791443}, "tensorgrad.functions.cross_entropy": {"tf": 9.1104335791443}, "tensorgrad.functions.sign": {"tf": 5.656854249492381}, "tensorgrad.functions.gt0": {"tf": 5.656854249492381}, "tensorgrad.functions.gt": {"tf": 7.0710678118654755}, "tensorgrad.functions.maximum": {"tf": 7.0710678118654755}, "tensorgrad.functions.relu": {"tf": 5.656854249492381}, "tensorgrad.functions.abs": {"tf": 5.656854249492381}, "tensorgrad.functions.argmax": {"tf": 6.324555320336759}, "tensorgrad.functions.max_grad": {"tf": 8.12403840463596}, "tensorgrad.functions.max": {"tf": 9}, "tensorgrad.functions.concat": {"tf": 5.656854249492381}, "tensorgrad.functions.repeat": {"tf": 8.888194417315589}, "tensorgrad.functions.det": {"tf": 8.12403840463596}, "tensorgrad.functions.Convolution.__init__": {"tf": 9.486832980505138}, "tensorgrad.imgtools.compile_latex": {"tf": 4.47213595499958}, "tensorgrad.imgtools.combine_images_vertically": {"tf": 8.426149773176359}, "tensorgrad.imgtools.save_as_image": {"tf": 3.7416573867739413}, "tensorgrad.imgtools.save_steps_old": {"tf": 4.242640687119285}, "tensorgrad.imgtools.save_steps": {"tf": 5.291502622129181}, "tensorgrad.imgtools.draw_structural_graph": {"tf": 4.242640687119285}, "tensorgrad.tensor.Tensor.__init__": {"tf": 4}, "tensorgrad.tensor.Tensor.grad": {"tf": 8.12403840463596}, "tensorgrad.tensor.Tensor.rename": {"tf": 5.477225575051661}, "tensorgrad.tensor.Tensor.simplify": {"tf": 6.928203230275509}, "tensorgrad.tensor.Tensor.full_simplify": {"tf": 5.291502622129181}, "tensorgrad.tensor.Tensor.depends_on": {"tf": 5.291502622129181}, "tensorgrad.tensor.Tensor.structural_graph": {"tf": 6.557438524302}, "tensorgrad.tensor.Tensor.edge_structural_graph": {"tf": 9}, "tensorgrad.tensor.Tensor.graph_to_string": {"tf": 3.4641016151377544}, "tensorgrad.tensor.Tensor.is_isomorphic": {"tf": 8.660254037844387}, "tensorgrad.tensor.Tensor.isomorphisms": {"tf": 7.280109889280518}, "tensorgrad.tensor.Variable.__init__": {"tf": 9.643650760992955}, "tensorgrad.tensor.Variable.with_symmetries": {"tf": 6.557438524302}, "tensorgrad.tensor.Variable.structural_graph": {"tf": 6.557438524302}, "tensorgrad.tensor.Variable.depends_on": {"tf": 5.291502622129181}, "tensorgrad.tensor.Rename.__init__": {"tf": 6.164414002968976}, "tensorgrad.tensor.Rename.depends_on": {"tf": 5.291502622129181}, "tensorgrad.tensor.Rename.merge_renames": {"tf": 6.48074069840786}, "tensorgrad.tensor.Rename.structural_graph": {"tf": 6.557438524302}, "tensorgrad.tensor.Constant.__init__": {"tf": 8.774964387392123}, "tensorgrad.tensor.Constant.with_symmetries": {"tf": 6.557438524302}, "tensorgrad.tensor.Constant.structural_graph": {"tf": 6.557438524302}, "tensorgrad.tensor.Constant.depends_on": {"tf": 5.291502622129181}, "tensorgrad.tensor.Delta.__init__": {"tf": 5.830951894845301}, "tensorgrad.tensor.Delta.simplify_outer": {"tf": 6.928203230275509}, "tensorgrad.tensor.Delta.structural_graph": {"tf": 6.557438524302}, "tensorgrad.tensor.Ones": {"tf": 7.874007874011811}, "tensorgrad.tensor.FunctionSignature.__init__": {"tf": 6.928203230275509}, "tensorgrad.tensor.FunctionSignature.derivative": {"tf": 7.416198487095663}, "tensorgrad.tensor.FunctionSignature.simplify": {"tf": 7.810249675906654}, "tensorgrad.tensor.function": {"tf": 9.591663046625438}, "tensorgrad.tensor.Function.__init__": {"tf": 8.602325267042627}, "tensorgrad.tensor.Function.structural_graph": {"tf": 6.557438524302}, "tensorgrad.tensor.Function.depends_on": {"tf": 5.291502622129181}, "tensorgrad.tensor.Derivative.__init__": {"tf": 8.12403840463596}, "tensorgrad.tensor.Derivative.structural_graph": {"tf": 6.557438524302}, "tensorgrad.tensor.Derivative.depends_on": {"tf": 5.291502622129181}, "tensorgrad.tensor.Product.__init__": {"tf": 5}, "tensorgrad.tensor.Product.merge": {"tf": 6.082762530298219}, "tensorgrad.tensor.Product.components": {"tf": 5}, "tensorgrad.tensor.Product.structural_graph": {"tf": 6.557438524302}, "tensorgrad.tensor.Product.depends_on": {"tf": 5.291502622129181}, "tensorgrad.tensor.Sum.__init__": {"tf": 7.280109889280518}, "tensorgrad.tensor.Sum.structural_graph": {"tf": 6.557438524302}, "tensorgrad.tensor.Sum.depends_on": {"tf": 5.291502622129181}, "tensorgrad.testutils.rand_values": {"tf": 9.486832980505138}, "tensorgrad.testutils.assert_close": {"tf": 5.477225575051661}, "tensorgrad.testutils.broadcast_tensors": {"tf": 3.7416573867739413}, "tensorgrad.testutils.generate_copy": {"tf": 5.196152422706632}, "tensorgrad.testutils.generate_random_tensor_expression": {"tf": 8}, "tensorgrad.testutils.make_random_tree": {"tf": 3.7416573867739413}, "tensorgrad.testutils.atlas_generate_random_tensor_expression": {"tf": 2.6457513110645907}, "tensorgrad.testutils.random_tensor_expr": {"tf": 8.54400374531753}, "tensorgrad.testutils.random_tensor_expr2": {"tf": 7.280109889280518}, "tensorgrad.utils.DisjointSets.find": {"tf": 4.898979485566356}, "tensorgrad.utils.DisjointSets.union": {"tf": 5.656854249492381}, "tensorgrad.utils.DisjointSets.get": {"tf": 6.324555320336759}, "tensorgrad.utils.DisjointSets.items": {"tf": 5.656854249492381}, "tensorgrad.utils.KeyStoringDict.__init__": {"tf": 4}, "tensorgrad.utils.KeyStoringDict.get_with_key": {"tf": 4.69041575982343}, "tensorgrad.utils.KeyStoringDict.get": {"tf": 4.69041575982343}, "tensorgrad.utils.KeyStoringDict.pop": {"tf": 3.7416573867739413}, "tensorgrad.utils.KeyStoringDict.update": {"tf": 4.242640687119285}, "tensorgrad.utils.KeyStoringDict.keys": {"tf": 3.1622776601683795}, "tensorgrad.utils.KeyStoringDict.values": {"tf": 3.1622776601683795}, "tensorgrad.utils.KeyStoringDict.items": {"tf": 3.1622776601683795}, "tensorgrad.utils.KeyStoringDict.copy": {"tf": 3.1622776601683795}}, "df": 151, "t": {"1": {"docs": {"tensorgrad.functions.dot": {"tf": 1}, "tensorgrad.functions.pairwise_distance": {"tf": 1}}, "df": 2}, "2": {"docs": {"tensorgrad.functions.dot": {"tf": 1}, "tensorgrad.functions.pairwise_distance": {"tf": 1}}, "df": 2}, "docs": {"tensorgrad.extras.to_formula_old.dfs": {"tf": 1}, "tensorgrad.functions.frobenius2": {"tf": 1}, "tensorgrad.functions.symmetrize": {"tf": 1}, "tensorgrad.functions.diag": {"tf": 1}, "tensorgrad.functions.exp": {"tf": 1}, "tensorgrad.functions.log": {"tf": 1}, "tensorgrad.functions.tanh": {"tf": 1}, "tensorgrad.functions.sigmoid": {"tf": 1}, "tensorgrad.functions.softmax": {"tf": 1}, "tensorgrad.functions.sign": {"tf": 1}, "tensorgrad.functions.gt0": {"tf": 1}, "tensorgrad.functions.relu": {"tf": 1}, "tensorgrad.functions.abs": {"tf": 1}, "tensorgrad.functions.argmax": {"tf": 1}, "tensorgrad.functions.max_grad": {"tf": 1}, "tensorgrad.functions.max": {"tf": 1}, "tensorgrad.functions.repeat": {"tf": 1}, "tensorgrad.functions.det": {"tf": 1}, "tensorgrad.tensor.FunctionSignature.simplify": {"tf": 1}}, "df": 19, "e": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "r": {"docs": {"tensorgrad.extras.evaluate.evaluate": {"tf": 2.23606797749979}, "tensorgrad.extras.evaluate.Context.__init__": {"tf": 1.4142135623730951}, "tensorgrad.extras.evaluate.Context.evaluate": {"tf": 2}, "tensorgrad.extras.evaluate.evaluate_function": {"tf": 1.7320508075688772}, "tensorgrad.extras.expectation.Expectation.__init__": {"tf": 2.8284271247461903}, "tensorgrad.extras.expectation.Expectation.depends_on": {"tf": 1}, "tensorgrad.extras.to_latex.to_latex_indexed": {"tf": 1.4142135623730951}, "tensorgrad.extras.to_latex.to_latex_index_free": {"tf": 1.4142135623730951}, "tensorgrad.extras.to_latex.to_latex": {"tf": 1.4142135623730951}, "tensorgrad.extras.to_numpy.compile_to_callable": {"tf": 1.4142135623730951}, "tensorgrad.extras.to_numpy.permute_code": {"tf": 2}, "tensorgrad.extras.to_pytorch.compile_to_callable": {"tf": 1.4142135623730951}, "tensorgrad.extras.to_pytorch.permute": {"tf": 2.23606797749979}, "tensorgrad.extras.to_tikz.to_tikz": {"tf": 1}, "tensorgrad.extras.to_tikz.TikzGraph.to_tikz": {"tf": 1}, "tensorgrad.functions.taylor": {"tf": 2.6457513110645907}, "tensorgrad.functions.frobenius2": {"tf": 2}, "tensorgrad.functions.symmetrize": {"tf": 2}, "tensorgrad.functions.graph": {"tf": 2}, "tensorgrad.functions.kronecker": {"tf": 2}, "tensorgrad.functions.diag": {"tf": 2}, "tensorgrad.functions.trace": {"tf": 2.23606797749979}, "tensorgrad.functions.parse_dim": {"tf": 1}, "tensorgrad.functions.sum": {"tf": 2.23606797749979}, "tensorgrad.functions.prod": {"tf": 2}, "tensorgrad.functions.mean": {"tf": 2.23606797749979}, "tensorgrad.functions.dot": {"tf": 2.449489742783178}, "tensorgrad.functions.multi_dot": {"tf": 2}, "tensorgrad.functions.contract": {"tf": 2}, "tensorgrad.functions.pow": {"tf": 2.23606797749979}, "tensorgrad.functions.sqrt": {"tf": 2.23606797749979}, "tensorgrad.functions.inverse": {"tf": 2.23606797749979}, "tensorgrad.functions.exp": {"tf": 2}, "tensorgrad.functions.log": {"tf": 2}, "tensorgrad.functions.tanh": {"tf": 2}, "tensorgrad.functions.sigmoid": {"tf": 2}, "tensorgrad.functions.softmax": {"tf": 2}, "tensorgrad.functions.pairwise_distance": {"tf": 2.449489742783178}, "tensorgrad.functions.cross_entropy": {"tf": 2.449489742783178}, "tensorgrad.functions.sign": {"tf": 2}, "tensorgrad.functions.gt0": {"tf": 2}, "tensorgrad.functions.gt": {"tf": 2.449489742783178}, "tensorgrad.functions.maximum": {"tf": 2.449489742783178}, "tensorgrad.functions.relu": {"tf": 2}, "tensorgrad.functions.abs": {"tf": 2}, "tensorgrad.functions.argmax": {"tf": 2}, "tensorgrad.functions.max_grad": {"tf": 2}, "tensorgrad.functions.max": {"tf": 2}, "tensorgrad.functions.concat": {"tf": 1.4142135623730951}, "tensorgrad.functions.repeat": {"tf": 2}, "tensorgrad.functions.det": {"tf": 2}, "tensorgrad.imgtools.draw_structural_graph": {"tf": 1}, "tensorgrad.tensor.Tensor.grad": {"tf": 1.7320508075688772}, "tensorgrad.tensor.Tensor.rename": {"tf": 1.4142135623730951}, "tensorgrad.tensor.Tensor.simplify": {"tf": 1.4142135623730951}, "tensorgrad.tensor.Tensor.full_simplify": {"tf": 1.4142135623730951}, "tensorgrad.tensor.Tensor.depends_on": {"tf": 1}, "tensorgrad.tensor.Tensor.is_isomorphic": {"tf": 1.4142135623730951}, "tensorgrad.tensor.Tensor.isomorphisms": {"tf": 1.4142135623730951}, "tensorgrad.tensor.Variable.with_symmetries": {"tf": 1}, "tensorgrad.tensor.Variable.depends_on": {"tf": 1}, "tensorgrad.tensor.Rename.__init__": {"tf": 1.4142135623730951}, "tensorgrad.tensor.Rename.depends_on": {"tf": 1}, "tensorgrad.tensor.Constant.with_symmetries": {"tf": 1}, "tensorgrad.tensor.Constant.depends_on": {"tf": 1}, "tensorgrad.tensor.Delta.simplify_outer": {"tf": 2}, "tensorgrad.tensor.Ones": {"tf": 1.4142135623730951}, "tensorgrad.tensor.FunctionSignature.derivative": {"tf": 1}, "tensorgrad.tensor.FunctionSignature.simplify": {"tf": 1.7320508075688772}, "tensorgrad.tensor.function": {"tf": 1.7320508075688772}, "tensorgrad.tensor.Function.__init__": {"tf": 1.7320508075688772}, "tensorgrad.tensor.Function.depends_on": {"tf": 1}, "tensorgrad.tensor.Derivative.__init__": {"tf": 2}, "tensorgrad.tensor.Derivative.depends_on": {"tf": 1}, "tensorgrad.tensor.Product.__init__": {"tf": 1.4142135623730951}, "tensorgrad.tensor.Product.merge": {"tf": 1.4142135623730951}, "tensorgrad.tensor.Product.components": {"tf": 1}, "tensorgrad.tensor.Product.depends_on": {"tf": 1}, "tensorgrad.tensor.Sum.__init__": {"tf": 1.4142135623730951}, "tensorgrad.tensor.Sum.depends_on": {"tf": 1}, "tensorgrad.testutils.rand_values": {"tf": 1.7320508075688772}, "tensorgrad.testutils.generate_random_tensor_expression": {"tf": 2.23606797749979}, "tensorgrad.testutils.random_tensor_expr": {"tf": 2.23606797749979}, "tensorgrad.testutils.random_tensor_expr2": {"tf": 1.7320508075688772}}, "df": 84, "g": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "d": {"docs": {"tensorgrad.extras.evaluate.evaluate": {"tf": 1.4142135623730951}, "tensorgrad.extras.evaluate.Context.__init__": {"tf": 1}, "tensorgrad.extras.evaluate.Context.evaluate": {"tf": 1}, "tensorgrad.extras.evaluate.evaluate_function": {"tf": 1}, "tensorgrad.extras.expectation.Expectation.__init__": {"tf": 2}, "tensorgrad.extras.expectation.Expectation.depends_on": {"tf": 1}, "tensorgrad.extras.to_latex.to_latex_indexed": {"tf": 1}, "tensorgrad.extras.to_latex.to_latex_index_free": {"tf": 1}, "tensorgrad.extras.to_latex.to_latex": {"tf": 1}, "tensorgrad.extras.to_numpy.compile_to_callable": {"tf": 1}, "tensorgrad.extras.to_numpy.permute_code": {"tf": 1.4142135623730951}, "tensorgrad.extras.to_pytorch.compile_to_callable": {"tf": 1}, "tensorgrad.extras.to_pytorch.permute": {"tf": 1.4142135623730951}, "tensorgrad.extras.to_tikz.TikzGraph.__init__": {"tf": 1}, "tensorgrad.extras.to_tikz.TikzGraph.add_edge": {"tf": 1.4142135623730951}, "tensorgrad.extras.to_tikz.TikzGraph.add_subgraph": {"tf": 1}, "tensorgrad.functions.taylor": {"tf": 2}, "tensorgrad.functions.frobenius2": {"tf": 1.4142135623730951}, "tensorgrad.functions.symmetrize": {"tf": 1.4142135623730951}, "tensorgrad.functions.graph": {"tf": 1.4142135623730951}, "tensorgrad.functions.kronecker": {"tf": 1.4142135623730951}, "tensorgrad.functions.diag": {"tf": 1.4142135623730951}, "tensorgrad.functions.trace": {"tf": 1.4142135623730951}, "tensorgrad.functions.sum": {"tf": 1.4142135623730951}, "tensorgrad.functions.prod": {"tf": 1.4142135623730951}, "tensorgrad.functions.mean": {"tf": 1.4142135623730951}, "tensorgrad.functions.dot": {"tf": 1.7320508075688772}, "tensorgrad.functions.multi_dot": {"tf": 1.4142135623730951}, "tensorgrad.functions.contract": {"tf": 1.4142135623730951}, "tensorgrad.functions.pow": {"tf": 1.4142135623730951}, "tensorgrad.functions.sqrt": {"tf": 1.4142135623730951}, "tensorgrad.functions.inverse": {"tf": 1.4142135623730951}, "tensorgrad.functions.exp": {"tf": 1.4142135623730951}, "tensorgrad.functions.log": {"tf": 1.4142135623730951}, "tensorgrad.functions.tanh": {"tf": 1.4142135623730951}, "tensorgrad.functions.sigmoid": {"tf": 1.4142135623730951}, "tensorgrad.functions.softmax": {"tf": 1.4142135623730951}, "tensorgrad.functions.pairwise_distance": {"tf": 1.7320508075688772}, "tensorgrad.functions.cross_entropy": {"tf": 1.7320508075688772}, "tensorgrad.functions.sign": {"tf": 1.4142135623730951}, "tensorgrad.functions.gt0": {"tf": 1.4142135623730951}, "tensorgrad.functions.gt": {"tf": 1.7320508075688772}, "tensorgrad.functions.maximum": {"tf": 1.7320508075688772}, "tensorgrad.functions.relu": {"tf": 1.4142135623730951}, "tensorgrad.functions.abs": {"tf": 1.4142135623730951}, "tensorgrad.functions.argmax": {"tf": 1.4142135623730951}, "tensorgrad.functions.max_grad": {"tf": 1.4142135623730951}, "tensorgrad.functions.max": {"tf": 1.4142135623730951}, "tensorgrad.functions.concat": {"tf": 1}, "tensorgrad.functions.repeat": {"tf": 1.4142135623730951}, "tensorgrad.functions.det": {"tf": 1.4142135623730951}, "tensorgrad.tensor.Tensor.grad": {"tf": 1.4142135623730951}, "tensorgrad.tensor.Tensor.rename": {"tf": 1}, "tensorgrad.tensor.Tensor.simplify": {"tf": 1}, "tensorgrad.tensor.Tensor.full_simplify": {"tf": 1}, "tensorgrad.tensor.Tensor.depends_on": {"tf": 1}, "tensorgrad.tensor.Tensor.is_isomorphic": {"tf": 1}, "tensorgrad.tensor.Tensor.isomorphisms": {"tf": 1}, "tensorgrad.tensor.Variable.with_symmetries": {"tf": 1}, "tensorgrad.tensor.Variable.depends_on": {"tf": 1}, "tensorgrad.tensor.Rename.__init__": {"tf": 1}, "tensorgrad.tensor.Rename.depends_on": {"tf": 1}, "tensorgrad.tensor.Constant.with_symmetries": {"tf": 1}, "tensorgrad.tensor.Constant.depends_on": {"tf": 1}, "tensorgrad.tensor.Delta.simplify_outer": {"tf": 1.4142135623730951}, "tensorgrad.tensor.Ones": {"tf": 1}, "tensorgrad.tensor.FunctionSignature.derivative": {"tf": 1}, "tensorgrad.tensor.FunctionSignature.simplify": {"tf": 1.4142135623730951}, "tensorgrad.tensor.function": {"tf": 1.4142135623730951}, "tensorgrad.tensor.Function.__init__": {"tf": 1.4142135623730951}, "tensorgrad.tensor.Function.depends_on": {"tf": 1}, "tensorgrad.tensor.Derivative.__init__": {"tf": 1.4142135623730951}, "tensorgrad.tensor.Derivative.depends_on": {"tf": 1}, "tensorgrad.tensor.Product.__init__": {"tf": 1}, "tensorgrad.tensor.Product.merge": {"tf": 1.4142135623730951}, "tensorgrad.tensor.Product.components": {"tf": 1}, "tensorgrad.tensor.Product.depends_on": {"tf": 1}, "tensorgrad.tensor.Sum.__init__": {"tf": 1}, "tensorgrad.tensor.Sum.depends_on": {"tf": 1}, "tensorgrad.testutils.rand_values": {"tf": 1.4142135623730951}, "tensorgrad.testutils.generate_random_tensor_expression": {"tf": 1.4142135623730951}, "tensorgrad.testutils.random_tensor_expr": {"tf": 1.4142135623730951}, "tensorgrad.testutils.random_tensor_expr2": {"tf": 1}}, "df": 83}}}}, "s": {"docs": {"tensorgrad.extras.to_numpy.compile_to_callable": {"tf": 1}, "tensorgrad.extras.to_pytorch.compile_to_callable": {"tf": 1}, "tensorgrad.functions.kronecker": {"tf": 1}, "tensorgrad.functions.prod": {"tf": 1}, "tensorgrad.tensor.Delta.simplify_outer": {"tf": 1}, "tensorgrad.tensor.Product.__init__": {"tf": 1}, "tensorgrad.tensor.Sum.__init__": {"tf": 1}}, "df": 7}}}}}}, "o": {"docs": {"tensorgrad.extras.to_tikz.TikzGraph.__init__": {"tf": 1}, "tensorgrad.extras.to_tikz.TikzGraph.add_edge": {"tf": 1.4142135623730951}, "tensorgrad.extras.to_tikz.TikzGraph.add_subgraph": {"tf": 1}}, "df": 3, "r": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "h": {"docs": {"tensorgrad.extras.evaluate.evaluate": {"tf": 1}, "tensorgrad.extras.evaluate.Context.__init__": {"tf": 1}, "tensorgrad.extras.evaluate.Context.evaluate": {"tf": 1}, "tensorgrad.extras.evaluate.evaluate_function": {"tf": 1.4142135623730951}, "tensorgrad.extras.to_numpy.compile_to_callable": {"tf": 1}, "tensorgrad.extras.to_pytorch.compile_to_callable": {"tf": 1}, "tensorgrad.testutils.rand_values": {"tf": 1}, "tensorgrad.testutils.broadcast_tensors": {"tf": 1.4142135623730951}, "tensorgrad.testutils.generate_random_tensor_expression": {"tf": 1.4142135623730951}, "tensorgrad.testutils.random_tensor_expr": {"tf": 1.4142135623730951}, "tensorgrad.testutils.random_tensor_expr2": {"tf": 1}}, "df": 11}}}}, "u": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "e": {"docs": {"tensorgrad.extras.expectation.Expectation.structural_graph": {"tf": 1}, "tensorgrad.functions.dot": {"tf": 1}, "tensorgrad.functions.multi_dot": {"tf": 1}, "tensorgrad.tensor.Tensor.structural_graph": {"tf": 1}, "tensorgrad.tensor.Tensor.edge_structural_graph": {"tf": 1}, "tensorgrad.tensor.Variable.structural_graph": {"tf": 1}, "tensorgrad.tensor.Rename.structural_graph": {"tf": 1}, "tensorgrad.tensor.Constant.structural_graph": {"tf": 1}, "tensorgrad.tensor.Delta.structural_graph": {"tf": 1}, "tensorgrad.tensor.FunctionSignature.__init__": {"tf": 1}, "tensorgrad.tensor.function": {"tf": 1}, "tensorgrad.tensor.Function.structural_graph": {"tf": 1}, "tensorgrad.tensor.Derivative.structural_graph": {"tf": 1}, "tensorgrad.tensor.Product.structural_graph": {"tf": 1}, "tensorgrad.tensor.Sum.structural_graph": {"tf": 1}, "tensorgrad.testutils.generate_random_tensor_expression": {"tf": 1}, "tensorgrad.testutils.random_tensor_expr": {"tf": 1}, "tensorgrad.testutils.random_tensor_expr2": {"tf": 1}, "tensorgrad.utils.DisjointSets.items": {"tf": 1}}, "df": 19}}}}, "y": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "e": {"docs": {"tensorgrad.extras.to_numpy.CodegenContext.set_var_type": {"tf": 1}, "tensorgrad.extras.to_tikz.TikzGraph.add_node": {"tf": 1}}, "df": 2}, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {"tensorgrad.tensor.Tensor.simplify": {"tf": 1}, "tensorgrad.tensor.FunctionSignature.simplify": {"tf": 1}}, "df": 2}}}}}, "a": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "g": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "t": {"docs": {"tensorgrad.extras.to_numpy.permute_code": {"tf": 1}}, "df": 1, "s": {"docs": {"tensorgrad.functions.cross_entropy": {"tf": 1}}, "df": 1}}}}}}, "i": {"docs": {}, "df": 0, "k": {"docs": {}, "df": 0, "z": {"docs": {"tensorgrad.extras.to_tikz.TikzGraph.__init__": {"tf": 1}, "tensorgrad.extras.to_tikz.TikzGraph.add_edge": {"tf": 1.4142135623730951}, "tensorgrad.extras.to_tikz.TikzGraph.add_subgraph": {"tf": 1}}, "df": 3, "g": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "h": {"docs": {"tensorgrad.extras.to_tikz.TikzGraph.add_subgraph": {"tf": 1}}, "df": 1}}}}}}}}, "s": {"docs": {"tensorgrad.functions.multi_dot": {"tf": 1}, "tensorgrad.functions.contract": {"tf": 1}, "tensorgrad.functions.concat": {"tf": 1}}, "df": 3}, "r": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "e": {"docs": {"tensorgrad.tensor.Tensor.full_simplify": {"tf": 1}, "tensorgrad.tensor.Tensor.edge_structural_graph": {"tf": 1}}, "df": 2}}}}, "v": {"docs": {"tensorgrad.utils.DisjointSets.get": {"tf": 1.4142135623730951}, "tensorgrad.utils.DisjointSets.items": {"tf": 1}}, "df": 2, "a": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "s": {"docs": {"tensorgrad.extras.evaluate.evaluate": {"tf": 1}, "tensorgrad.extras.evaluate.Context.__init__": {"tf": 1}}, "df": 2}}}}, "r": {"docs": {"tensorgrad.extras.to_numpy.CodegenContext.set_var_type": {"tf": 1.4142135623730951}, "tensorgrad.extras.to_numpy.CodegenContext.get_var_type": {"tf": 1}}, "df": 2, "i": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "b": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "e": {"docs": {"tensorgrad.extras.evaluate.evaluate": {"tf": 1}, "tensorgrad.extras.evaluate.Context.__init__": {"tf": 1}, "tensorgrad.extras.expectation.Expectation.__init__": {"tf": 1}, "tensorgrad.extras.expectation.Expectation.depends_on": {"tf": 1}, "tensorgrad.functions.taylor": {"tf": 1}, "tensorgrad.tensor.Tensor.grad": {"tf": 1}, "tensorgrad.tensor.Tensor.depends_on": {"tf": 1}, "tensorgrad.tensor.Variable.with_symmetries": {"tf": 1}, "tensorgrad.tensor.Variable.depends_on": {"tf": 1}, "tensorgrad.tensor.Rename.depends_on": {"tf": 1}, "tensorgrad.tensor.Constant.depends_on": {"tf": 1}, "tensorgrad.tensor.Function.depends_on": {"tf": 1}, "tensorgrad.tensor.Derivative.__init__": {"tf": 1}, "tensorgrad.tensor.Derivative.depends_on": {"tf": 1}, "tensorgrad.tensor.Product.depends_on": {"tf": 1}, "tensorgrad.tensor.Sum.depends_on": {"tf": 1}, "tensorgrad.testutils.rand_values": {"tf": 1.4142135623730951}, "tensorgrad.testutils.generate_random_tensor_expression": {"tf": 1}, "tensorgrad.testutils.random_tensor_expr": {"tf": 1}}, "df": 19, "s": {"docs": {"tensorgrad.testutils.rand_values": {"tf": 1}}, "df": 1}}}}}}, "s": {"docs": {"tensorgrad.functions.graph": {"tf": 1}}, "df": 1}}}, "i": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "d": {"docs": {"tensorgrad.extras.to_formula_old.dfs": {"tf": 1}}, "df": 1}}}}}}, "e": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "b": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "e": {"docs": {"tensorgrad.extras.to_numpy.compile_to_callable": {"tf": 1}, "tensorgrad.extras.to_pytorch.compile_to_callable": {"tf": 1}}, "df": 2}}}}}}}, "d": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "t": {"docs": {"tensorgrad.extras.evaluate.evaluate": {"tf": 1.4142135623730951}, "tensorgrad.extras.evaluate.Context.__init__": {"tf": 1.4142135623730951}, "tensorgrad.extras.expectation.Expectation.__init__": {"tf": 1}, "tensorgrad.extras.expectation.Expectation.structural_graph": {"tf": 1}, "tensorgrad.extras.to_tikz.TikzGraph.handle_free_edges": {"tf": 1}, "tensorgrad.functions.contract": {"tf": 1}, "tensorgrad.tensor.Tensor.grad": {"tf": 1}, "tensorgrad.tensor.Tensor.simplify": {"tf": 1}, "tensorgrad.tensor.Tensor.structural_graph": {"tf": 1}, "tensorgrad.tensor.Tensor.edge_structural_graph": {"tf": 1}, "tensorgrad.tensor.Tensor.is_isomorphic": {"tf": 1}, "tensorgrad.tensor.Tensor.isomorphisms": {"tf": 1}, "tensorgrad.tensor.Variable.structural_graph": {"tf": 1}, "tensorgrad.tensor.Rename.__init__": {"tf": 1}, "tensorgrad.tensor.Rename.merge_renames": {"tf": 1.4142135623730951}, "tensorgrad.tensor.Rename.structural_graph": {"tf": 1}, "tensorgrad.tensor.Constant.structural_graph": {"tf": 1}, "tensorgrad.tensor.Delta.structural_graph": {"tf": 1}, "tensorgrad.tensor.FunctionSignature.derivative": {"tf": 1}, "tensorgrad.tensor.FunctionSignature.simplify": {"tf": 1}, "tensorgrad.tensor.function": {"tf": 1}, "tensorgrad.tensor.Function.__init__": {"tf": 1}, "tensorgrad.tensor.Function.structural_graph": {"tf": 1}, "tensorgrad.tensor.Derivative.__init__": {"tf": 1}, "tensorgrad.tensor.Derivative.structural_graph": {"tf": 1}, "tensorgrad.tensor.Product.structural_graph": {"tf": 1}, "tensorgrad.tensor.Sum.structural_graph": {"tf": 1}, "tensorgrad.testutils.rand_values": {"tf": 1.4142135623730951}, "tensorgrad.testutils.generate_random_tensor_expression": {"tf": 1}, "tensorgrad.testutils.random_tensor_expr": {"tf": 1}, "tensorgrad.testutils.random_tensor_expr2": {"tf": 1}, "tensorgrad.utils.KeyStoringDict.update": {"tf": 1}}, "df": 32}}, "m": {"docs": {"tensorgrad.functions.parse_dim": {"tf": 1}, "tensorgrad.functions.sum": {"tf": 1}, "tensorgrad.functions.mean": {"tf": 1}, "tensorgrad.functions.dot": {"tf": 1}, "tensorgrad.functions.softmax": {"tf": 1}, "tensorgrad.functions.pairwise_distance": {"tf": 1}, "tensorgrad.functions.cross_entropy": {"tf": 1}, "tensorgrad.functions.argmax": {"tf": 1}, "tensorgrad.functions.max_grad": {"tf": 1}, "tensorgrad.functions.max": {"tf": 1}, "tensorgrad.functions.concat": {"tf": 1}, "tensorgrad.testutils.generate_copy": {"tf": 1}, "tensorgrad.testutils.random_tensor_expr": {"tf": 1}, "tensorgrad.testutils.random_tensor_expr2": {"tf": 1}}, "df": 14, "s": {"docs": {"tensorgrad.extras.evaluate.evaluate": {"tf": 1}, "tensorgrad.extras.evaluate.Context.__init__": {"tf": 1}, "tensorgrad.functions.symmetrize": {"tf": 1}, "tensorgrad.functions.multi_dot": {"tf": 1}, "tensorgrad.functions.inverse": {"tf": 1}, "tensorgrad.functions.det": {"tf": 1}}, "df": 6}}, "r": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "d": {"docs": {"tensorgrad.extras.to_tikz.TikzGraph.add_edge": {"tf": 1}}, "df": 1}}}}}}}, "e": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "h": {"docs": {"tensorgrad.extras.to_tikz.TikzGraph.__init__": {"tf": 1}, "tensorgrad.extras.to_tikz.choose_layout": {"tf": 1}, "tensorgrad.testutils.random_tensor_expr": {"tf": 1}, "tensorgrad.testutils.random_tensor_expr2": {"tf": 1}}, "df": 4}}}, "g": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "e": {"docs": {"tensorgrad.extras.to_tikz.TikzGraph.add_node": {"tf": 1}}, "df": 1}}}}, "f": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "t": {"docs": {"tensorgrad.utils.DisjointSets.get": {"tf": 1}, "tensorgrad.utils.KeyStoringDict.get_with_key": {"tf": 1}, "tensorgrad.utils.KeyStoringDict.get": {"tf": 1}}, "df": 3}}}}}}, "o": {"docs": {}, "df": 0, "t": {"docs": {"tensorgrad.functions.graph": {"tf": 1}}, "df": 1}}}, "s": {"docs": {}, "df": 0, "y": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "y": {"docs": {"tensorgrad.extras.evaluate.evaluate": {"tf": 1}, "tensorgrad.extras.evaluate.Context.__init__": {"tf": 1}, "tensorgrad.functions.repeat": {"tf": 1.4142135623730951}, "tensorgrad.functions.Convolution.__init__": {"tf": 1.4142135623730951}, "tensorgrad.tensor.Variable.__init__": {"tf": 1.4142135623730951}, "tensorgrad.tensor.Constant.__init__": {"tf": 1.4142135623730951}, "tensorgrad.tensor.Delta.__init__": {"tf": 1}, "tensorgrad.tensor.Ones": {"tf": 1.4142135623730951}, "tensorgrad.tensor.function": {"tf": 1}, "tensorgrad.tensor.Function.__init__": {"tf": 1}, "tensorgrad.testutils.rand_values": {"tf": 1}}, "df": 11}}, "b": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "l": {"docs": {"tensorgrad.extras.evaluate.evaluate": {"tf": 1.4142135623730951}, "tensorgrad.extras.evaluate.Context.__init__": {"tf": 1.4142135623730951}, "tensorgrad.extras.to_numpy.CodegenContext.declare_dimension": {"tf": 1}, "tensorgrad.extras.to_pytorch.CodegenContext.declare_dimension": {"tf": 1}, "tensorgrad.functions.repeat": {"tf": 2}, "tensorgrad.functions.Convolution.__init__": {"tf": 2}, "tensorgrad.tensor.Variable.__init__": {"tf": 2}, "tensorgrad.tensor.Constant.__init__": {"tf": 2}, "tensorgrad.tensor.Delta.__init__": {"tf": 1.4142135623730951}, "tensorgrad.tensor.Ones": {"tf": 2}, "tensorgrad.tensor.function": {"tf": 1.4142135623730951}, "tensorgrad.tensor.Function.__init__": {"tf": 1.4142135623730951}, "tensorgrad.testutils.rand_values": {"tf": 1.4142135623730951}}, "df": 13}}}, "m": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "s": {"docs": {"tensorgrad.functions.Convolution.__init__": {"tf": 1}, "tensorgrad.tensor.Variable.__init__": {"tf": 1}, "tensorgrad.tensor.Variable.with_symmetries": {"tf": 1}, "tensorgrad.tensor.Constant.__init__": {"tf": 1}, "tensorgrad.tensor.Constant.with_symmetries": {"tf": 1}}, "df": 5}}}}}}}}}, "e": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "f": {"docs": {"tensorgrad.extras.evaluate.Context.evaluate": {"tf": 1}, "tensorgrad.extras.expectation.Expectation.structural_graph": {"tf": 1}, "tensorgrad.extras.expectation.Expectation.depends_on": {"tf": 1}, "tensorgrad.extras.to_numpy.CodegenContext.emit": {"tf": 1}, "tensorgrad.extras.to_numpy.CodegenContext.fresh_name": {"tf": 1}, "tensorgrad.extras.to_numpy.CodegenContext.declare_dimension": {"tf": 1}, "tensorgrad.extras.to_numpy.CodegenContext.set_var_type": {"tf": 1}, "tensorgrad.extras.to_numpy.CodegenContext.get_var_type": {"tf": 1}, "tensorgrad.extras.to_pytorch.CodegenContext.emit": {"tf": 1}, "tensorgrad.extras.to_pytorch.CodegenContext.fresh_name": {"tf": 1}, "tensorgrad.extras.to_pytorch.CodegenContext.declare_dimension": {"tf": 1}, "tensorgrad.extras.to_tikz.Namer.fresh_name": {"tf": 1}, "tensorgrad.extras.to_tikz.Namer.edge": {"tf": 1}, "tensorgrad.extras.to_tikz.depth_tracking_dispatcher.register": {"tf": 1}, "tensorgrad.extras.to_tikz.TikzGraph.subgraph": {"tf": 1}, "tensorgrad.extras.to_tikz.TikzGraph.to_tikz": {"tf": 1}, "tensorgrad.extras.to_tikz.TikzGraph.add_node": {"tf": 1}, "tensorgrad.extras.to_tikz.TikzGraph.add_edge": {"tf": 1}, "tensorgrad.extras.to_tikz.TikzGraph.add_subgraph": {"tf": 1}, "tensorgrad.extras.to_tikz.TikzGraph.handle_free_edges": {"tf": 1}, "tensorgrad.tensor.Tensor.grad": {"tf": 1}, "tensorgrad.tensor.Tensor.rename": {"tf": 1}, "tensorgrad.tensor.Tensor.simplify": {"tf": 1}, "tensorgrad.tensor.Tensor.full_simplify": {"tf": 1}, "tensorgrad.tensor.Tensor.depends_on": {"tf": 1}, "tensorgrad.tensor.Tensor.structural_graph": {"tf": 1}, "tensorgrad.tensor.Tensor.edge_structural_graph": {"tf": 1}, "tensorgrad.tensor.Tensor.graph_to_string": {"tf": 1}, "tensorgrad.tensor.Tensor.is_isomorphic": {"tf": 1}, "tensorgrad.tensor.Tensor.isomorphisms": {"tf": 1}, "tensorgrad.tensor.Variable.with_symmetries": {"tf": 1}, "tensorgrad.tensor.Variable.structural_graph": {"tf": 1}, "tensorgrad.tensor.Variable.depends_on": {"tf": 1}, "tensorgrad.tensor.Rename.depends_on": {"tf": 1}, "tensorgrad.tensor.Rename.structural_graph": {"tf": 1}, "tensorgrad.tensor.Constant.with_symmetries": {"tf": 1}, "tensorgrad.tensor.Constant.structural_graph": {"tf": 1}, "tensorgrad.tensor.Constant.depends_on": {"tf": 1}, "tensorgrad.tensor.Delta.structural_graph": {"tf": 1}, "tensorgrad.tensor.FunctionSignature.derivative": {"tf": 1}, "tensorgrad.tensor.FunctionSignature.simplify": {"tf": 1}, "tensorgrad.tensor.Function.structural_graph": {"tf": 1}, "tensorgrad.tensor.Function.depends_on": {"tf": 1}, "tensorgrad.tensor.Derivative.structural_graph": {"tf": 1}, "tensorgrad.tensor.Derivative.depends_on": {"tf": 1}, "tensorgrad.tensor.Product.components": {"tf": 1}, "tensorgrad.tensor.Product.structural_graph": {"tf": 1}, "tensorgrad.tensor.Product.depends_on": {"tf": 1}, "tensorgrad.tensor.Sum.structural_graph": {"tf": 1}, "tensorgrad.tensor.Sum.depends_on": {"tf": 1}, "tensorgrad.utils.DisjointSets.find": {"tf": 1}, "tensorgrad.utils.DisjointSets.union": {"tf": 1}, "tensorgrad.utils.DisjointSets.get": {"tf": 1}, "tensorgrad.utils.DisjointSets.items": {"tf": 1}, "tensorgrad.utils.KeyStoringDict.get_with_key": {"tf": 1}, "tensorgrad.utils.KeyStoringDict.get": {"tf": 1}, "tensorgrad.utils.KeyStoringDict.pop": {"tf": 1}, "tensorgrad.utils.KeyStoringDict.update": {"tf": 1}, "tensorgrad.utils.KeyStoringDict.keys": {"tf": 1}, "tensorgrad.utils.KeyStoringDict.values": {"tf": 1}, "tensorgrad.utils.KeyStoringDict.items": {"tf": 1}, "tensorgrad.utils.KeyStoringDict.copy": {"tf": 1}}, "df": 62}}, "t": {"docs": {"tensorgrad.functions.parse_dim": {"tf": 1.4142135623730951}, "tensorgrad.functions.contract": {"tf": 1}, "tensorgrad.functions.inverse": {"tf": 1}, "tensorgrad.functions.Convolution.__init__": {"tf": 1}, "tensorgrad.tensor.Variable.__init__": {"tf": 1}, "tensorgrad.tensor.Variable.with_symmetries": {"tf": 1}, "tensorgrad.tensor.Constant.__init__": {"tf": 1}, "tensorgrad.tensor.Constant.with_symmetries": {"tf": 1}, "tensorgrad.tensor.FunctionSignature.__init__": {"tf": 1.4142135623730951}}, "df": 9}}, "t": {"docs": {}, "df": 0, "r": {"docs": {"tensorgrad.extras.expectation.Expectation.__init__": {"tf": 1.4142135623730951}, "tensorgrad.extras.expectation.Expectation.structural_graph": {"tf": 1}, "tensorgrad.extras.to_latex.to_latex_indexed": {"tf": 1}, "tensorgrad.extras.to_latex.to_latex_index_free": {"tf": 1}, "tensorgrad.extras.to_latex.to_latex": {"tf": 1}, "tensorgrad.extras.to_numpy.CodegenContext.emit": {"tf": 1}, "tensorgrad.extras.to_numpy.CodegenContext.fresh_name": {"tf": 1}, "tensorgrad.extras.to_numpy.permute_code": {"tf": 1}, "tensorgrad.extras.to_pytorch.CodegenContext.emit": {"tf": 1}, "tensorgrad.extras.to_pytorch.CodegenContext.fresh_name": {"tf": 1}, "tensorgrad.extras.to_pytorch.permute": {"tf": 1}, "tensorgrad.extras.to_tikz.NodeRef.__init__": {"tf": 1.7320508075688772}, "tensorgrad.extras.to_tikz.TikzGraph.add_node": {"tf": 1.7320508075688772}, "tensorgrad.extras.to_tikz.TikzGraph.add_subgraph": {"tf": 1.7320508075688772}, "tensorgrad.functions.symmetrize": {"tf": 1.4142135623730951}, "tensorgrad.functions.graph": {"tf": 1}, "tensorgrad.functions.diag": {"tf": 1}, "tensorgrad.functions.parse_dim": {"tf": 2.23606797749979}, "tensorgrad.functions.sum": {"tf": 1.4142135623730951}, "tensorgrad.functions.mean": {"tf": 1.4142135623730951}, "tensorgrad.functions.dot": {"tf": 1.7320508075688772}, "tensorgrad.functions.multi_dot": {"tf": 1.4142135623730951}, "tensorgrad.functions.contract": {"tf": 1.7320508075688772}, "tensorgrad.functions.inverse": {"tf": 1}, "tensorgrad.functions.softmax": {"tf": 1.4142135623730951}, "tensorgrad.functions.pairwise_distance": {"tf": 1.4142135623730951}, "tensorgrad.functions.cross_entropy": {"tf": 1.4142135623730951}, "tensorgrad.functions.argmax": {"tf": 1}, "tensorgrad.functions.max_grad": {"tf": 1.4142135623730951}, "tensorgrad.functions.max": {"tf": 1.4142135623730951}, "tensorgrad.functions.concat": {"tf": 1}, "tensorgrad.functions.det": {"tf": 1.4142135623730951}, "tensorgrad.functions.Convolution.__init__": {"tf": 1}, "tensorgrad.tensor.Tensor.grad": {"tf": 1.4142135623730951}, "tensorgrad.tensor.Tensor.rename": {"tf": 1}, "tensorgrad.tensor.Tensor.simplify": {"tf": 1}, "tensorgrad.tensor.Tensor.structural_graph": {"tf": 1}, "tensorgrad.tensor.Tensor.edge_structural_graph": {"tf": 1.7320508075688772}, "tensorgrad.tensor.Tensor.graph_to_string": {"tf": 1}, "tensorgrad.tensor.Tensor.is_isomorphic": {"tf": 1.4142135623730951}, "tensorgrad.tensor.Tensor.isomorphisms": {"tf": 1.4142135623730951}, "tensorgrad.tensor.Variable.__init__": {"tf": 1.7320508075688772}, "tensorgrad.tensor.Variable.with_symmetries": {"tf": 1.4142135623730951}, "tensorgrad.tensor.Variable.structural_graph": {"tf": 1}, "tensorgrad.tensor.Rename.__init__": {"tf": 1.4142135623730951}, "tensorgrad.tensor.Rename.merge_renames": {"tf": 2}, "tensorgrad.tensor.Rename.structural_graph": {"tf": 1}, "tensorgrad.tensor.Constant.__init__": {"tf": 1}, "tensorgrad.tensor.Constant.with_symmetries": {"tf": 1.4142135623730951}, "tensorgrad.tensor.Constant.structural_graph": {"tf": 1}, "tensorgrad.tensor.Delta.__init__": {"tf": 1}, "tensorgrad.tensor.Delta.structural_graph": {"tf": 1}, "tensorgrad.tensor.FunctionSignature.__init__": {"tf": 1.7320508075688772}, "tensorgrad.tensor.FunctionSignature.derivative": {"tf": 1.4142135623730951}, "tensorgrad.tensor.FunctionSignature.simplify": {"tf": 1}, "tensorgrad.tensor.function": {"tf": 1.7320508075688772}, "tensorgrad.tensor.Function.__init__": {"tf": 1}, "tensorgrad.tensor.Function.structural_graph": {"tf": 1}, "tensorgrad.tensor.Derivative.__init__": {"tf": 1.4142135623730951}, "tensorgrad.tensor.Derivative.structural_graph": {"tf": 1}, "tensorgrad.tensor.Product.structural_graph": {"tf": 1}, "tensorgrad.tensor.Sum.structural_graph": {"tf": 1}, "tensorgrad.testutils.generate_copy": {"tf": 1}}, "df": 63, "i": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "e": {"docs": {"tensorgrad.functions.Convolution.__init__": {"tf": 1}}, "df": 1}}}}, "y": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "e": {"docs": {"tensorgrad.extras.to_tikz.NodeRef.__init__": {"tf": 1}, "tensorgrad.extras.to_tikz.TikzGraph.add_node": {"tf": 1}, "tensorgrad.extras.to_tikz.TikzGraph.add_subgraph": {"tf": 1}}, "df": 3}}}, "e": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "s": {"docs": {"tensorgrad.imgtools.save_steps_old": {"tf": 1}, "tensorgrad.imgtools.save_steps": {"tf": 1}}, "df": 2}}}}, "o": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "e": {"docs": {"tensorgrad.extras.to_numpy.permute_code": {"tf": 1}}, "df": 1}}}}}, "u": {"docs": {}, "df": 0, "b": {"docs": {}, "df": 0, "g": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "h": {"docs": {"tensorgrad.extras.to_tikz.TikzGraph.add_subgraph": {"tf": 1}}, "df": 1}}}}}}, "f": {"docs": {}, "df": 0, "f": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "x": {"docs": {"tensorgrad.imgtools.compile_latex": {"tf": 1}}, "df": 1}}}}}, "i": {"docs": {}, "df": 0, "g": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "d": {"docs": {"tensorgrad.functions.symmetrize": {"tf": 1}}, "df": 1}}, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "e": {"docs": {"tensorgrad.tensor.Function.__init__": {"tf": 1}}, "df": 1}}}}}}}, "z": {"docs": {}, "df": 0, "e": {"docs": {"tensorgrad.tensor.Delta.__init__": {"tf": 1}, "tensorgrad.testutils.generate_random_tensor_expression": {"tf": 1}}, "df": 2}}}, "h": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "e": {"0": {"docs": {"tensorgrad.functions.repeat": {"tf": 1}, "tensorgrad.functions.Convolution.__init__": {"tf": 1}, "tensorgrad.tensor.Variable.__init__": {"tf": 1}, "tensorgrad.tensor.Constant.__init__": {"tf": 1}, "tensorgrad.tensor.Ones": {"tf": 1}}, "df": 5}, "1": {"docs": {"tensorgrad.functions.repeat": {"tf": 1}, "tensorgrad.functions.Convolution.__init__": {"tf": 1}, "tensorgrad.tensor.Variable.__init__": {"tf": 1}, "tensorgrad.tensor.Constant.__init__": {"tf": 1}, "tensorgrad.tensor.Ones": {"tf": 1}}, "df": 5}, "docs": {"tensorgrad.tensor.function": {"tf": 1}, "tensorgrad.tensor.Function.__init__": {"tf": 1}, "tensorgrad.testutils.rand_values": {"tf": 1}}, "df": 3}}}}, "l": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "w": {"docs": {"tensorgrad.imgtools.save_steps": {"tf": 1}}, "df": 1}}}}, "c": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "e": {"docs": {"tensorgrad.extras.evaluate.evaluate": {"tf": 1}, "tensorgrad.extras.evaluate.Context.__init__": {"tf": 1}, "tensorgrad.functions.repeat": {"tf": 1.4142135623730951}, "tensorgrad.functions.Convolution.__init__": {"tf": 1.4142135623730951}, "tensorgrad.tensor.Variable.__init__": {"tf": 1.4142135623730951}, "tensorgrad.tensor.Constant.__init__": {"tf": 1.4142135623730951}, "tensorgrad.tensor.Delta.__init__": {"tf": 1}, "tensorgrad.tensor.Ones": {"tf": 1.4142135623730951}, "tensorgrad.tensor.function": {"tf": 1}, "tensorgrad.tensor.Function.__init__": {"tf": 1}, "tensorgrad.testutils.rand_values": {"tf": 1}}, "df": 11}}, "v": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "r": {"docs": {"tensorgrad.extras.expectation.Expectation.__init__": {"tf": 1.4142135623730951}}, "df": 1}}}, "m": {"docs": {}, "df": 0, "p": {"docs": {"tensorgrad.extras.to_formula_old.component_to_matrix": {"tf": 1}}, "df": 1, "i": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "e": {"docs": {"tensorgrad.extras.to_numpy.compile_to_callable": {"tf": 1}, "tensorgrad.extras.to_pytorch.compile_to_callable": {"tf": 1}}, "df": 2}}}}, "b": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "d": {"docs": {"tensorgrad.imgtools.combine_images_vertically": {"tf": 1}}, "df": 1}}}}}}, "d": {"docs": {}, "df": 0, "e": {"docs": {"tensorgrad.imgtools.compile_latex": {"tf": 1}}, "df": 1}}, "l": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "r": {"docs": {"tensorgrad.imgtools.combine_images_vertically": {"tf": 1.4142135623730951}}, "df": 1}}}, "n": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "t": {"docs": {"tensorgrad.tensor.Constant.with_symmetries": {"tf": 1}}, "df": 1}}}}}}}, "l": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "s": {"docs": {"tensorgrad.extras.expectation.Expectation.structural_graph": {"tf": 1}, "tensorgrad.tensor.Tensor.structural_graph": {"tf": 1}, "tensorgrad.tensor.Tensor.edge_structural_graph": {"tf": 1}, "tensorgrad.tensor.Variable.structural_graph": {"tf": 1}, "tensorgrad.tensor.Rename.structural_graph": {"tf": 1}, "tensorgrad.tensor.Constant.structural_graph": {"tf": 1}, "tensorgrad.tensor.Delta.structural_graph": {"tf": 1}, "tensorgrad.tensor.Function.structural_graph": {"tf": 1}, "tensorgrad.tensor.Derivative.structural_graph": {"tf": 1}, "tensorgrad.tensor.Product.structural_graph": {"tf": 1}, "tensorgrad.tensor.Sum.structural_graph": {"tf": 1}}, "df": 11}}}}}, "s": {"docs": {"tensorgrad.extras.to_tikz.depth_tracking_dispatcher.register": {"tf": 1}, "tensorgrad.tensor.Rename.merge_renames": {"tf": 1}, "tensorgrad.tensor.Delta.simplify_outer": {"tf": 1}}, "df": 3}, "u": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {"tensorgrad.extras.to_tikz.TikzGraph.add_subgraph": {"tf": 1}}, "df": 1}}}}}}}, "i": {"docs": {"tensorgrad.extras.to_tikz.format_weight": {"tf": 1}, "tensorgrad.tensor.FunctionSignature.derivative": {"tf": 1}}, "df": 2, "n": {"docs": {"tensorgrad.extras.to_formula_old.dfs": {"tf": 1}}, "df": 1, "t": {"docs": {"tensorgrad.extras.evaluate.evaluate": {"tf": 1}, "tensorgrad.extras.evaluate.Context.__init__": {"tf": 1}, "tensorgrad.extras.expectation.Expectation.structural_graph": {"tf": 1}, "tensorgrad.extras.to_tikz.TikzGraph.__init__": {"tf": 1}, "tensorgrad.extras.to_tikz.TikzGraph.add_node": {"tf": 1}, "tensorgrad.functions.taylor": {"tf": 1}, "tensorgrad.functions.pow": {"tf": 1}, "tensorgrad.functions.Convolution.__init__": {"tf": 1}, "tensorgrad.tensor.Tensor.structural_graph": {"tf": 1}, "tensorgrad.tensor.Variable.structural_graph": {"tf": 1}, "tensorgrad.tensor.Rename.structural_graph": {"tf": 1}, "tensorgrad.tensor.Constant.structural_graph": {"tf": 1}, "tensorgrad.tensor.Delta.structural_graph": {"tf": 1}, "tensorgrad.tensor.FunctionSignature.derivative": {"tf": 1}, "tensorgrad.tensor.Function.structural_graph": {"tf": 1}, "tensorgrad.tensor.Derivative.structural_graph": {"tf": 1}, "tensorgrad.tensor.Product.structural_graph": {"tf": 1}, "tensorgrad.tensor.Sum.structural_graph": {"tf": 1}, "tensorgrad.testutils.rand_values": {"tf": 1}, "tensorgrad.testutils.generate_copy": {"tf": 1}, "tensorgrad.testutils.generate_random_tensor_expression": {"tf": 1}, "tensorgrad.testutils.make_random_tree": {"tf": 1}}, "df": 22}, "d": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "x": {"docs": {"tensorgrad.extras.to_latex.to_latex": {"tf": 1}}, "df": 1}}}, "p": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "s": {"docs": {"tensorgrad.functions.contract": {"tf": 1}, "tensorgrad.tensor.FunctionSignature.__init__": {"tf": 1}, "tensorgrad.tensor.function": {"tf": 1}, "tensorgrad.tensor.Function.__init__": {"tf": 1}}, "df": 4}}}}, "n": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {"tensorgrad.tensor.Rename.__init__": {"tf": 1}}, "df": 1}}}}, "d": {"docs": {"tensorgrad.extras.to_tikz.TikzGraph.add_subgraph": {"tf": 1}}, "df": 1}, "t": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {"tensorgrad.imgtools.draw_structural_graph": {"tf": 1}}, "df": 1, "a": {"docs": {}, "df": 0, "b": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "e": {"docs": {"tensorgrad.functions.symmetrize": {"tf": 1}, "tensorgrad.functions.parse_dim": {"tf": 1}, "tensorgrad.functions.sum": {"tf": 1}, "tensorgrad.functions.mean": {"tf": 1}, "tensorgrad.functions.softmax": {"tf": 1}, "tensorgrad.functions.pairwise_distance": {"tf": 1}, "tensorgrad.functions.cross_entropy": {"tf": 1}, "tensorgrad.functions.max_grad": {"tf": 1}, "tensorgrad.functions.max": {"tf": 1}, "tensorgrad.functions.det": {"tf": 1}, "tensorgrad.tensor.Function.__init__": {"tf": 1}, "tensorgrad.tensor.Product.__init__": {"tf": 1}, "tensorgrad.tensor.Sum.__init__": {"tf": 1.4142135623730951}, "tensorgrad.testutils.rand_values": {"tf": 1}, "tensorgrad.testutils.generate_copy": {"tf": 1}}, "df": 15}}}}}}}, "s": {"docs": {"tensorgrad.functions.parse_dim": {"tf": 1}}, "df": 1}, "m": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "g": {"docs": {}, "df": 0, "e": {"docs": {"tensorgrad.imgtools.combine_images_vertically": {"tf": 1.4142135623730951}}, "df": 1}}}}}, "n": {"docs": {"tensorgrad.functions.taylor": {"tf": 1}}, "df": 1, "o": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "e": {"docs": {"tensorgrad.extras.evaluate.evaluate": {"tf": 1.4142135623730951}, "tensorgrad.extras.evaluate.Context.__init__": {"tf": 1.4142135623730951}, "tensorgrad.extras.expectation.Expectation.__init__": {"tf": 2.449489742783178}, "tensorgrad.extras.to_tikz.depth_tracking_dispatcher.register": {"tf": 1}, "tensorgrad.extras.to_tikz.TikzGraph.__init__": {"tf": 1}, "tensorgrad.extras.to_tikz.TikzGraph.add_node": {"tf": 1.7320508075688772}, "tensorgrad.extras.to_tikz.TikzGraph.add_subgraph": {"tf": 1.4142135623730951}, "tensorgrad.functions.symmetrize": {"tf": 1}, "tensorgrad.functions.parse_dim": {"tf": 1.4142135623730951}, "tensorgrad.functions.sum": {"tf": 1}, "tensorgrad.functions.mean": {"tf": 1}, "tensorgrad.functions.inverse": {"tf": 1}, "tensorgrad.functions.softmax": {"tf": 1}, "tensorgrad.functions.pairwise_distance": {"tf": 1}, "tensorgrad.functions.cross_entropy": {"tf": 1}, "tensorgrad.functions.max_grad": {"tf": 1}, "tensorgrad.functions.max": {"tf": 1}, "tensorgrad.functions.det": {"tf": 1}, "tensorgrad.functions.Convolution.__init__": {"tf": 1}, "tensorgrad.imgtools.save_steps_old": {"tf": 1}, "tensorgrad.tensor.Tensor.grad": {"tf": 1}, "tensorgrad.tensor.Tensor.simplify": {"tf": 1}, "tensorgrad.tensor.Tensor.edge_structural_graph": {"tf": 1}, "tensorgrad.tensor.Tensor.is_isomorphic": {"tf": 1.4142135623730951}, "tensorgrad.tensor.Variable.__init__": {"tf": 1.4142135623730951}, "tensorgrad.tensor.Constant.__init__": {"tf": 1}, "tensorgrad.tensor.FunctionSignature.derivative": {"tf": 1}, "tensorgrad.tensor.Derivative.__init__": {"tf": 1}, "tensorgrad.tensor.Sum.__init__": {"tf": 1}, "tensorgrad.utils.DisjointSets.union": {"tf": 1}, "tensorgrad.utils.DisjointSets.get": {"tf": 1}, "tensorgrad.utils.KeyStoringDict.get_with_key": {"tf": 1}, "tensorgrad.utils.KeyStoringDict.get": {"tf": 1}}, "df": 33, "t": {"docs": {}, "df": 0, "y": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "e": {"docs": {"tensorgrad.functions.symmetrize": {"tf": 1}, "tensorgrad.functions.parse_dim": {"tf": 1}, "tensorgrad.functions.sum": {"tf": 1}, "tensorgrad.functions.mean": {"tf": 1}, "tensorgrad.functions.softmax": {"tf": 1}, "tensorgrad.functions.pairwise_distance": {"tf": 1}, "tensorgrad.functions.cross_entropy": {"tf": 1}, "tensorgrad.functions.max_grad": {"tf": 1}, "tensorgrad.functions.max": {"tf": 1}, "tensorgrad.functions.det": {"tf": 1}, "tensorgrad.tensor.Tensor.isomorphisms": {"tf": 1.4142135623730951}}, "df": 11}}}}}}, "d": {"docs": {}, "df": 0, "e": {"docs": {"tensorgrad.extras.to_tikz.Namer.fresh_name": {"tf": 1}, "tensorgrad.extras.to_tikz.TikzGraph.add_node": {"tf": 1}}, "df": 2, "r": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "f": {"docs": {"tensorgrad.extras.to_tikz.TikzGraph.add_edge": {"tf": 1.4142135623730951}}, "df": 1}}}, "s": {"docs": {"tensorgrad.testutils.make_random_tree": {"tf": 1}}, "df": 1}}}}, "a": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "e": {"docs": {"tensorgrad.extras.to_numpy.CodegenContext.set_var_type": {"tf": 1}, "tensorgrad.extras.to_numpy.CodegenContext.get_var_type": {"tf": 1}, "tensorgrad.extras.to_tikz.NodeRef.__init__": {"tf": 1}, "tensorgrad.extras.to_tikz.TikzGraph.add_node": {"tf": 1}, "tensorgrad.tensor.Variable.__init__": {"tf": 1}, "tensorgrad.tensor.FunctionSignature.__init__": {"tf": 1}, "tensorgrad.tensor.function": {"tf": 1}}, "df": 7, "s": {"docs": {"tensorgrad.extras.expectation.Expectation.__init__": {"tf": 1}, "tensorgrad.tensor.Tensor.grad": {"tf": 1}, "tensorgrad.tensor.Tensor.edge_structural_graph": {"tf": 1}, "tensorgrad.tensor.Tensor.is_isomorphic": {"tf": 1}, "tensorgrad.tensor.Derivative.__init__": {"tf": 1}}, "df": 5}, "r": {"docs": {"tensorgrad.extras.to_tikz.TikzGraph.__init__": {"tf": 1.4142135623730951}}, "df": 1}}}}, "e": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "w": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "k": {"docs": {}, "df": 0, "x": {"docs": {"tensorgrad.extras.expectation.Expectation.structural_graph": {"tf": 1}, "tensorgrad.tensor.Tensor.structural_graph": {"tf": 1}, "tensorgrad.tensor.Tensor.edge_structural_graph": {"tf": 1}, "tensorgrad.tensor.Variable.structural_graph": {"tf": 1}, "tensorgrad.tensor.Rename.structural_graph": {"tf": 1}, "tensorgrad.tensor.Constant.structural_graph": {"tf": 1}, "tensorgrad.tensor.Delta.structural_graph": {"tf": 1}, "tensorgrad.tensor.Function.structural_graph": {"tf": 1}, "tensorgrad.tensor.Derivative.structural_graph": {"tf": 1}, "tensorgrad.tensor.Product.structural_graph": {"tf": 1}, "tensorgrad.tensor.Sum.structural_graph": {"tf": 1}}, "df": 11}}}}}}, "w": {"docs": {"tensorgrad.functions.diag": {"tf": 1}, "tensorgrad.tensor.Tensor.grad": {"tf": 1}, "tensorgrad.tensor.FunctionSignature.derivative": {"tf": 1}, "tensorgrad.tensor.Derivative.__init__": {"tf": 1}}, "df": 4}}, "u": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "b": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {"tensorgrad.tensor.Sum.__init__": {"tf": 1}}, "df": 1, "s": {"docs": {"tensorgrad.tensor.Sum.__init__": {"tf": 1}}, "df": 1}}}}}}}, "f": {"docs": {"tensorgrad.functions.taylor": {"tf": 1}}, "df": 1, "u": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "c": {"docs": {"tensorgrad.extras.evaluate.evaluate_function": {"tf": 1}}, "df": 1, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {"tensorgrad.tensor.FunctionSignature.simplify": {"tf": 1}, "tensorgrad.tensor.function": {"tf": 1}}, "df": 2, "s": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "g": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "e": {"docs": {"tensorgrad.extras.evaluate.evaluate_function": {"tf": 1}, "tensorgrad.tensor.FunctionSignature.derivative": {"tf": 1}, "tensorgrad.tensor.Function.__init__": {"tf": 1}}, "df": 3}}}}}}}}}}}}}}}}, "r": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "e": {"docs": {"tensorgrad.extras.to_latex.to_latex": {"tf": 1}, "tensorgrad.extras.to_tikz.TikzGraph.handle_free_edges": {"tf": 1}}, "df": 2}}, "a": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {"tensorgrad.functions.pow": {"tf": 1}}, "df": 1, "s": {"docs": {"tensorgrad.functions.pow": {"tf": 1}}, "df": 1}}}}}}}, "o": {"docs": {}, "df": 0, "z": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "t": {"docs": {"tensorgrad.functions.Convolution.__init__": {"tf": 1}, "tensorgrad.tensor.Variable.__init__": {"tf": 1}, "tensorgrad.tensor.Variable.with_symmetries": {"tf": 1}, "tensorgrad.tensor.Constant.__init__": {"tf": 1}, "tensorgrad.tensor.Constant.with_symmetries": {"tf": 1}}, "df": 5}}}}}}}}, "a": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "e": {"docs": {"tensorgrad.extras.to_latex.to_latex": {"tf": 1}, "tensorgrad.extras.to_numpy.compile_to_callable": {"tf": 1.4142135623730951}, "tensorgrad.extras.to_pytorch.compile_to_callable": {"tf": 1.4142135623730951}, "tensorgrad.extras.to_tikz.TikzGraph.add_edge": {"tf": 1}, "tensorgrad.functions.symmetrize": {"tf": 1}, "tensorgrad.functions.sum": {"tf": 1}, "tensorgrad.functions.mean": {"tf": 1}, "tensorgrad.functions.max": {"tf": 1}, "tensorgrad.imgtools.save_steps": {"tf": 1}, "tensorgrad.tensor.Tensor.is_isomorphic": {"tf": 1}}, "df": 10}}}}}, "x": {"docs": {"tensorgrad.extras.expectation.Expectation.depends_on": {"tf": 1}, "tensorgrad.functions.gt": {"tf": 1}, "tensorgrad.functions.maximum": {"tf": 1}, "tensorgrad.tensor.Tensor.grad": {"tf": 1}, "tensorgrad.tensor.Tensor.depends_on": {"tf": 1}, "tensorgrad.tensor.Variable.depends_on": {"tf": 1}, "tensorgrad.tensor.Rename.depends_on": {"tf": 1}, "tensorgrad.tensor.Constant.depends_on": {"tf": 1}, "tensorgrad.tensor.Function.depends_on": {"tf": 1}, "tensorgrad.tensor.Derivative.__init__": {"tf": 1}, "tensorgrad.tensor.Derivative.depends_on": {"tf": 1}, "tensorgrad.tensor.Product.depends_on": {"tf": 1}, "tensorgrad.tensor.Sum.depends_on": {"tf": 1}, "tensorgrad.utils.DisjointSets.find": {"tf": 1}, "tensorgrad.utils.DisjointSets.union": {"tf": 1}}, "df": 15, "s": {"docs": {"tensorgrad.extras.evaluate.evaluate_function": {"tf": 1}}, "df": 1}}, "w": {"docs": {"tensorgrad.extras.to_tikz.format_weight": {"tf": 1}}, "df": 1, "r": {"docs": {}, "df": 0, "t": {"docs": {"tensorgrad.extras.expectation.Expectation.__init__": {"tf": 1}, "tensorgrad.functions.taylor": {"tf": 1}}, "df": 2}}, "h": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "e": {"docs": {"tensorgrad.imgtools.combine_images_vertically": {"tf": 1}}, "df": 1}}}}, "i": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "h": {"docs": {"tensorgrad.imgtools.combine_images_vertically": {"tf": 1}}, "df": 1}}}}, "e": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "g": {"docs": {}, "df": 0, "h": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "s": {"docs": {"tensorgrad.tensor.Sum.__init__": {"tf": 1}}, "df": 1}}}}}}}, "m": {"docs": {}, "df": 0, "u": {"docs": {"tensorgrad.extras.expectation.Expectation.__init__": {"tf": 1}}, "df": 1, "l": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "g": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "h": {"docs": {"tensorgrad.extras.expectation.Expectation.structural_graph": {"tf": 1.4142135623730951}, "tensorgrad.tensor.Tensor.structural_graph": {"tf": 1.4142135623730951}, "tensorgrad.tensor.Tensor.edge_structural_graph": {"tf": 1.4142135623730951}, "tensorgrad.tensor.Variable.structural_graph": {"tf": 1.4142135623730951}, "tensorgrad.tensor.Rename.structural_graph": {"tf": 1.4142135623730951}, "tensorgrad.tensor.Constant.structural_graph": {"tf": 1.4142135623730951}, "tensorgrad.tensor.Delta.structural_graph": {"tf": 1.4142135623730951}, "tensorgrad.tensor.Function.structural_graph": {"tf": 1.4142135623730951}, "tensorgrad.tensor.Derivative.structural_graph": {"tf": 1.4142135623730951}, "tensorgrad.tensor.Product.structural_graph": {"tf": 1.4142135623730951}, "tensorgrad.tensor.Sum.structural_graph": {"tf": 1.4142135623730951}}, "df": 11}}}}}}}, "p": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "y": {"docs": {"tensorgrad.extras.to_tikz.TikzGraph.add_edge": {"tf": 1}}, "df": 1}}}}}}}}}}}, "e": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "h": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "d": {"docs": {"tensorgrad.extras.to_tikz.depth_tracking_dispatcher.register": {"tf": 1}}, "df": 1}}}}}, "i": {"docs": {}, "df": 0, "n": {"docs": {"tensorgrad.imgtools.save_steps_old": {"tf": 1}}, "df": 1}}, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "h": {"docs": {"tensorgrad.tensor.Tensor.edge_structural_graph": {"tf": 1}, "tensorgrad.tensor.Tensor.is_isomorphic": {"tf": 1}}, "df": 2}}}, "x": {"docs": {"tensorgrad.testutils.generate_random_tensor_expression": {"tf": 1}, "tensorgrad.testutils.random_tensor_expr": {"tf": 1.4142135623730951}, "tensorgrad.testutils.random_tensor_expr2": {"tf": 1.4142135623730951}}, "df": 3}}}, "b": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "l": {"docs": {"tensorgrad.extras.expectation.Expectation.depends_on": {"tf": 1}, "tensorgrad.extras.to_latex.to_latex": {"tf": 1}, "tensorgrad.functions.symmetrize": {"tf": 1}, "tensorgrad.functions.sum": {"tf": 1}, "tensorgrad.functions.mean": {"tf": 1}, "tensorgrad.functions.max": {"tf": 1}, "tensorgrad.tensor.Tensor.depends_on": {"tf": 1}, "tensorgrad.tensor.Tensor.edge_structural_graph": {"tf": 1}, "tensorgrad.tensor.Tensor.is_isomorphic": {"tf": 1.4142135623730951}, "tensorgrad.tensor.Variable.depends_on": {"tf": 1}, "tensorgrad.tensor.Rename.depends_on": {"tf": 1}, "tensorgrad.tensor.Constant.depends_on": {"tf": 1}, "tensorgrad.tensor.Function.depends_on": {"tf": 1}, "tensorgrad.tensor.Derivative.depends_on": {"tf": 1}, "tensorgrad.tensor.Product.depends_on": {"tf": 1}, "tensorgrad.tensor.Sum.depends_on": {"tf": 1}}, "df": 16}}}, "a": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "e": {"docs": {"tensorgrad.extras.to_numpy.CodegenContext.fresh_name": {"tf": 1}, "tensorgrad.extras.to_pytorch.CodegenContext.fresh_name": {"tf": 1}}, "df": 2}}, "c": {"docs": {}, "df": 0, "k": {"docs": {}, "df": 0, "g": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "d": {"docs": {"tensorgrad.imgtools.combine_images_vertically": {"tf": 1}}, "df": 1}}}}}}}}}, "l": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "k": {"docs": {"tensorgrad.imgtools.combine_images_vertically": {"tf": 1}}, "df": 1}}}}}, "e": {"docs": {}, "df": 0, "x": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "r": {"docs": {"tensorgrad.extras.to_formula_old.to_simple_matrix_formula": {"tf": 1}, "tensorgrad.extras.to_latex.to_latex_indexed": {"tf": 1}, "tensorgrad.extras.to_latex.to_latex_index_free": {"tf": 1}, "tensorgrad.extras.to_latex.to_latex": {"tf": 1}, "tensorgrad.imgtools.save_as_image": {"tf": 1}, "tensorgrad.imgtools.save_steps_old": {"tf": 1}, "tensorgrad.imgtools.save_steps": {"tf": 1}}, "df": 7}, "a": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "d": {"docs": {"tensorgrad.tensor.Tensor.full_simplify": {"tf": 1}}, "df": 1}}}, "e": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "d": {"docs": {"tensorgrad.testutils.assert_close": {"tf": 1}}, "df": 1}}}}}}, "t": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "s": {"docs": {"tensorgrad.extras.to_tikz.TikzGraph.__init__": {"tf": 1}, "tensorgrad.extras.to_tikz.TikzGraph.add_edge": {"tf": 1.4142135623730951}, "tensorgrad.extras.to_tikz.TikzGraph.add_subgraph": {"tf": 1}}, "df": 3}}}}}, "d": {"docs": {}, "df": 0, "g": {"docs": {}, "df": 0, "e": {"docs": {"tensorgrad.extras.to_formula_old.component_to_matrix": {"tf": 1}, "tensorgrad.extras.to_formula_old.dfs": {"tf": 1}, "tensorgrad.extras.to_tikz.NodeRef.__init__": {"tf": 1.4142135623730951}, "tensorgrad.extras.to_tikz.Namer.edge": {"tf": 1}, "tensorgrad.tensor.Tensor.edge_structural_graph": {"tf": 1}, "tensorgrad.tensor.Tensor.is_isomorphic": {"tf": 1}}, "df": 6, "s": {"docs": {"tensorgrad.extras.to_tikz.TikzGraph.handle_free_edges": {"tf": 1}, "tensorgrad.functions.diag": {"tf": 1}, "tensorgrad.functions.parse_dim": {"tf": 1}, "tensorgrad.tensor.Tensor.edge_structural_graph": {"tf": 1}, "tensorgrad.tensor.Tensor.is_isomorphic": {"tf": 1}, "tensorgrad.tensor.Delta.__init__": {"tf": 1}, "tensorgrad.tensor.FunctionSignature.__init__": {"tf": 1}, "tensorgrad.tensor.FunctionSignature.derivative": {"tf": 1}, "tensorgrad.testutils.generate_copy": {"tf": 1}}, "df": 9}}}}, "p": {"docs": {}, "df": 0, "s": {"docs": {"tensorgrad.functions.taylor": {"tf": 1}}, "df": 1}}, "r": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "r": {"docs": {"tensorgrad.functions.parse_dim": {"tf": 1}}, "df": 1}}}}}, "l": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "f": {"docs": {}, "df": 0, "t": {"docs": {"tensorgrad.extras.to_formula_old.component_to_matrix": {"tf": 1}, "tensorgrad.testutils.broadcast_tensors": {"tf": 1}}, "df": 2}}}, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "e": {"docs": {"tensorgrad.extras.to_numpy.CodegenContext.emit": {"tf": 1}, "tensorgrad.extras.to_pytorch.CodegenContext.emit": {"tf": 1}, "tensorgrad.imgtools.combine_images_vertically": {"tf": 1.7320508075688772}}, "df": 3}}, "s": {"docs": {}, "df": 0, "t": {"docs": {"tensorgrad.functions.diag": {"tf": 1}, "tensorgrad.functions.multi_dot": {"tf": 1}, "tensorgrad.functions.contract": {"tf": 1.4142135623730951}, "tensorgrad.tensor.Tensor.edge_structural_graph": {"tf": 1}, "tensorgrad.tensor.Delta.simplify_outer": {"tf": 1.4142135623730951}, "tensorgrad.tensor.Product.merge": {"tf": 1}, "tensorgrad.tensor.Product.components": {"tf": 1}, "tensorgrad.utils.DisjointSets.items": {"tf": 1.4142135623730951}}, "df": 8}}}, "a": {"docs": {}, "df": 0, "b": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "l": {"docs": {"tensorgrad.extras.to_tikz.NodeRef.__init__": {"tf": 1}, "tensorgrad.extras.to_tikz.TikzGraph.add_node": {"tf": 1}, "tensorgrad.extras.to_tikz.format_label": {"tf": 1}, "tensorgrad.extras.to_tikz.format_function": {"tf": 1}}, "df": 4}}}, "y": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "t": {"docs": {"tensorgrad.extras.to_tikz.TikzGraph.add_subgraph": {"tf": 1}}, "df": 1}}}}, "t": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "x": {"docs": {"tensorgrad.imgtools.compile_latex": {"tf": 1}}, "df": 1}}}}, "o": {"docs": {}, "df": 0, "g": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "s": {"docs": {"tensorgrad.functions.cross_entropy": {"tf": 1}}, "df": 1}}}}}}, "a": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "j": {"docs": {"tensorgrad.extras.to_formula_old.dfs": {"tf": 1}}, "df": 1}}, "r": {"docs": {}, "df": 0, "g": {"docs": {}, "df": 0, "s": {"docs": {"tensorgrad.tensor.Tensor.__init__": {"tf": 1}, "tensorgrad.tensor.Tensor.simplify": {"tf": 1}, "tensorgrad.tensor.FunctionSignature.simplify": {"tf": 1}, "tensorgrad.utils.KeyStoringDict.__init__": {"tf": 1}}, "df": 4}}}, "n": {"docs": {}, "df": 0, "y": {"docs": {"tensorgrad.tensor.Tensor.simplify": {"tf": 1}, "tensorgrad.tensor.FunctionSignature.simplify": {"tf": 1}}, "df": 2}}, "c": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "l": {"docs": {"tensorgrad.testutils.assert_close": {"tf": 1}}, "df": 1}}}}}, "t": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "l": {"docs": {"tensorgrad.testutils.assert_close": {"tf": 1}}, "df": 1}}}}, "p": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "t": {"docs": {"tensorgrad.extras.to_pytorch.permute": {"tf": 1}}, "df": 1}}}}, "t": {"docs": {}, "df": 0, "h": {"docs": {"tensorgrad.imgtools.combine_images_vertically": {"tf": 1}, "tensorgrad.imgtools.save_as_image": {"tf": 1}, "tensorgrad.imgtools.save_steps": {"tf": 1}}, "df": 3, "s": {"docs": {"tensorgrad.imgtools.combine_images_vertically": {"tf": 1}}, "df": 1}}}, "d": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {"tensorgrad.imgtools.combine_images_vertically": {"tf": 1.4142135623730951}}, "df": 1}}}}}}, "r": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "f": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "x": {"docs": {"tensorgrad.extras.to_tikz.Namer.fresh_name": {"tf": 1}}, "df": 1}}}}, "o": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "t": {"docs": {"tensorgrad.tensor.Product.merge": {"tf": 1.4142135623730951}, "tensorgrad.tensor.Product.components": {"tf": 1}}, "df": 2, "s": {"docs": {"tensorgrad.tensor.Product.merge": {"tf": 1}}, "df": 1}}}}}}}, "n": {"docs": {}, "df": 0, "g": {"docs": {"tensorgrad.imgtools.combine_images_vertically": {"tf": 1}, "tensorgrad.imgtools.save_steps": {"tf": 1}}, "df": 2}}}, "r": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "f": {"1": {"docs": {"tensorgrad.extras.to_tikz.TikzGraph.add_edge": {"tf": 1}}, "df": 1}, "2": {"docs": {"tensorgrad.extras.to_tikz.TikzGraph.add_edge": {"tf": 1}}, "df": 1}, "docs": {}, "df": 0}, "n": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "e": {"docs": {"tensorgrad.tensor.Rename.__init__": {"tf": 1}}, "df": 1, "s": {"docs": {"tensorgrad.tensor.Rename.merge_renames": {"tf": 1}}, "df": 1}}}}}}, "t": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "l": {"docs": {"tensorgrad.testutils.assert_close": {"tf": 1}}, "df": 1}}}, "i": {"docs": {}, "df": 0, "g": {"docs": {}, "df": 0, "h": {"docs": {}, "df": 0, "t": {"docs": {"tensorgrad.testutils.broadcast_tensors": {"tf": 1}}, "df": 1}}}}}, "u": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {"tensorgrad.functions.symmetrize": {"tf": 1}, "tensorgrad.functions.parse_dim": {"tf": 1}, "tensorgrad.functions.sum": {"tf": 1}, "tensorgrad.functions.mean": {"tf": 1}, "tensorgrad.functions.softmax": {"tf": 1}, "tensorgrad.functions.pairwise_distance": {"tf": 1}, "tensorgrad.functions.cross_entropy": {"tf": 1}, "tensorgrad.functions.max_grad": {"tf": 1}, "tensorgrad.functions.max": {"tf": 1}, "tensorgrad.functions.det": {"tf": 1}}, "df": 10}}}}}, "g": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "h": {"docs": {"tensorgrad.functions.graph": {"tf": 1}}, "df": 1}}, "d": {"docs": {"tensorgrad.imgtools.save_steps": {"tf": 1}}, "df": 1}}}, "e": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "r": {"docs": {"tensorgrad.tensor.Tensor.isomorphisms": {"tf": 1}}, "df": 1}}}}}}}}}, "k": {"docs": {"tensorgrad.functions.pow": {"tf": 1}, "tensorgrad.utils.DisjointSets.find": {"tf": 1.4142135623730951}, "tensorgrad.utils.DisjointSets.union": {"tf": 1.4142135623730951}, "tensorgrad.utils.DisjointSets.get": {"tf": 1}, "tensorgrad.utils.DisjointSets.items": {"tf": 1}}, "df": 5, "e": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "m": {"docs": {"tensorgrad.functions.max": {"tf": 1}}, "df": 1, "s": {"docs": {"tensorgrad.functions.sum": {"tf": 1}, "tensorgrad.functions.mean": {"tf": 1}}, "df": 2}}}}}}, "y": {"docs": {"tensorgrad.utils.DisjointSets.get": {"tf": 1}, "tensorgrad.utils.KeyStoringDict.get_with_key": {"tf": 1}, "tensorgrad.utils.KeyStoringDict.get": {"tf": 1}, "tensorgrad.utils.KeyStoringDict.pop": {"tf": 1}}, "df": 4}}, "w": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "g": {"docs": {}, "df": 0, "s": {"docs": {"tensorgrad.tensor.Tensor.__init__": {"tf": 1}, "tensorgrad.tensor.Tensor.rename": {"tf": 1}, "tensorgrad.utils.KeyStoringDict.__init__": {"tf": 1}}, "df": 3}}}}}}, "o": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "t": {"docs": {"tensorgrad.tensor.Function.__init__": {"tf": 1}}, "df": 1, "p": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "t": {"docs": {"tensorgrad.functions.contract": {"tf": 1}, "tensorgrad.imgtools.combine_images_vertically": {"tf": 1}, "tensorgrad.imgtools.save_steps": {"tf": 1}, "tensorgrad.tensor.function": {"tf": 1}}, "df": 4}}}}}, "p": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "l": {"docs": {"tensorgrad.tensor.Tensor.grad": {"tf": 1}, "tensorgrad.tensor.Tensor.edge_structural_graph": {"tf": 1}, "tensorgrad.tensor.Constant.__init__": {"tf": 1}, "tensorgrad.tensor.Derivative.__init__": {"tf": 1}, "tensorgrad.tensor.Sum.__init__": {"tf": 1}}, "df": 5}}}}}}}, "t": {"docs": {}, "df": 0, "h": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {"tensorgrad.tensor.Tensor.is_isomorphic": {"tf": 1}, "tensorgrad.tensor.Tensor.isomorphisms": {"tf": 1}, "tensorgrad.utils.KeyStoringDict.update": {"tf": 1}}, "df": 3}}}}}, "y": {"docs": {"tensorgrad.functions.gt": {"tf": 1}, "tensorgrad.functions.maximum": {"tf": 1}, "tensorgrad.utils.DisjointSets.union": {"tf": 1}}, "df": 3}}}, "bases": {"root": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "r": {"docs": {"tensorgrad.extras.expectation.Expectation": {"tf": 1.4142135623730951}, "tensorgrad.functions.Convolution": {"tf": 1}, "tensorgrad.functions.Reshape": {"tf": 1}, "tensorgrad.tensor.Variable": {"tf": 1}, "tensorgrad.tensor.Rename": {"tf": 1}, "tensorgrad.tensor.Constant": {"tf": 1}, "tensorgrad.tensor.Function": {"tf": 1}, "tensorgrad.tensor.Derivative": {"tf": 1}, "tensorgrad.tensor.Product": {"tf": 1}, "tensorgrad.tensor.Sum": {"tf": 1}}, "df": 10, "g": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "d": {"docs": {"tensorgrad.extras.expectation.Expectation": {"tf": 1}, "tensorgrad.functions.Convolution": {"tf": 1}, "tensorgrad.functions.Reshape": {"tf": 1}}, "df": 3}}}}}}}}}, "y": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {"tensorgrad.utils.DisjointSets": {"tf": 1}}, "df": 1}}}}}}, "f": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "s": {"docs": {"tensorgrad.extras.to_tikz.depth_tracking_dispatcher": {"tf": 1}}, "df": 1}}}}}}}}}, "s": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "h": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "h": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "d": {"docs": {"tensorgrad.extras.to_tikz.depth_tracking_dispatcher": {"tf": 1}}, "df": 1}}}}}}}}}}}}}}}}}}}}, "c": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "t": {"docs": {"tensorgrad.functions.Convolution": {"tf": 1}, "tensorgrad.functions.Reshape": {"tf": 1}, "tensorgrad.tensor.Delta": {"tf": 1}, "tensorgrad.tensor.Zero": {"tf": 1}}, "df": 4}}}}}}}}, "a": {"docs": {}, "df": 0, "b": {"docs": {}, "df": 0, "c": {"docs": {"tensorgrad.tensor.TensorMeta": {"tf": 1}, "tensorgrad.tensor.Constant": {"tf": 1.4142135623730951}, "tensorgrad.tensor.FunctionSignature": {"tf": 1.4142135623730951}}, "df": 3, "m": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "a": {"docs": {"tensorgrad.tensor.TensorMeta": {"tf": 1}}, "df": 1}}}}}}}, "g": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "[": {"docs": {}, "df": 0, "~": {"docs": {}, "df": 0, "k": {"docs": {"tensorgrad.utils.DisjointSets": {"tf": 1}}, "df": 1}}}}}}}}}}, "v": {"docs": {"tensorgrad.utils.DisjointSets": {"tf": 1}}, "df": 1}}}, "doc": {"root": {"0": {"docs": {"tensorgrad.extras.expectation.Expectation.structural_graph": {"tf": 1}, "tensorgrad.functions.graph": {"tf": 1.4142135623730951}, "tensorgrad.functions.sign": {"tf": 2}, "tensorgrad.functions.gt0": {"tf": 1.4142135623730951}, "tensorgrad.functions.gt": {"tf": 1}, "tensorgrad.functions.max_grad": {"tf": 2.8284271247461903}, "tensorgrad.functions.Convolution.__init__": {"tf": 1}, "tensorgrad.tensor.Tensor.structural_graph": {"tf": 1}, "tensorgrad.tensor.Variable.structural_graph": {"tf": 1}, "tensorgrad.tensor.Rename.structural_graph": {"tf": 1}, "tensorgrad.tensor.Constant.structural_graph": {"tf": 1}, "tensorgrad.tensor.Delta": {"tf": 1.4142135623730951}, "tensorgrad.tensor.Delta.structural_graph": {"tf": 1}, "tensorgrad.tensor.Zero": {"tf": 1}, "tensorgrad.tensor.Function.structural_graph": {"tf": 1}, "tensorgrad.tensor.Derivative.structural_graph": {"tf": 1}, "tensorgrad.tensor.Product.structural_graph": {"tf": 1}, "tensorgrad.tensor.Sum.structural_graph": {"tf": 1}}, "df": 18, "d": {"docs": {"tensorgrad.functions.max": {"tf": 1}}, "df": 1}}, "1": {"2": {"3": {"4": {"docs": {"tensorgrad.extras.to_numpy.compile_to_callable": {"tf": 1}, "tensorgrad.extras.to_pytorch.compile_to_callable": {"tf": 1}}, "df": 2}, "docs": {}, "df": 0}, "docs": {"tensorgrad.extras.to_tikz.format_label": {"tf": 1}, "tensorgrad.utils.DisjointSets": {"tf": 1}}, "df": 2}, "docs": {"tensorgrad.extras.to_tikz.format_label": {"tf": 1}, "tensorgrad.functions.graph": {"tf": 1.4142135623730951}, "tensorgrad.functions.sigmoid": {"tf": 1.4142135623730951}, "tensorgrad.functions.sign": {"tf": 1.4142135623730951}, "tensorgrad.functions.gt0": {"tf": 1}, "tensorgrad.functions.gt": {"tf": 1}, "tensorgrad.functions.max_grad": {"tf": 2.8284271247461903}, "tensorgrad.functions.Convolution.__init__": {"tf": 2.23606797749979}, "tensorgrad.tensor.Delta": {"tf": 1}, "tensorgrad.tensor.Ones": {"tf": 1}, "tensorgrad.tensor.FunctionSignature": {"tf": 1.7320508075688772}, "tensorgrad.tensor.Sum.__init__": {"tf": 1}}, "df": 12, "/": {"2": {"docs": {"tensorgrad.functions.gt": {"tf": 1}}, "df": 1}, "docs": {}, "df": 0, "k": {"docs": {"tensorgrad.functions.max_grad": {"tf": 1}}, "df": 1}}}, "2": {"docs": {"tensorgrad.functions.max_grad": {"tf": 2}, "tensorgrad.tensor.Delta": {"tf": 1.4142135623730951}, "tensorgrad.tensor.FunctionSignature": {"tf": 1}}, "df": 3, "d": {"docs": {"tensorgrad.functions.Convolution.__init__": {"tf": 1}}, "df": 1}}, "3": {"9": {"docs": {"tensorgrad.functions.graph": {"tf": 4.242640687119285}}, "df": 1}, "docs": {"tensorgrad.functions.graph": {"tf": 1}, "tensorgrad.functions.max_grad": {"tf": 2.449489742783178}, "tensorgrad.functions.Convolution.__init__": {"tf": 1}, "tensorgrad.tensor.FunctionSignature": {"tf": 1}, "tensorgrad.utils.DisjointSets": {"tf": 1}}, "df": 5}, "4": {"docs": {"tensorgrad.functions.max_grad": {"tf": 2.449489742783178}, "tensorgrad.tensor.FunctionSignature": {"tf": 1}}, "df": 2}, "5": {"6": {"7": {"8": {"docs": {"tensorgrad.extras.to_numpy.compile_to_callable": {"tf": 1}, "tensorgrad.extras.to_pytorch.compile_to_callable": {"tf": 1}}, "df": 2}, "docs": {}, "df": 0}, "docs": {}, "df": 0}, "docs": {"tensorgrad.functions.max_grad": {"tf": 1.4142135623730951}}, "df": 1}, "docs": {"tensorgrad": {"tf": 1.7320508075688772}, "tensorgrad.extras": {"tf": 1.7320508075688772}, "tensorgrad.extras.evaluate": {"tf": 1.7320508075688772}, "tensorgrad.extras.evaluate.evaluate": {"tf": 1.7320508075688772}, "tensorgrad.extras.evaluate.Context": {"tf": 1.7320508075688772}, "tensorgrad.extras.evaluate.Context.__init__": {"tf": 1.7320508075688772}, "tensorgrad.extras.evaluate.Context.values": {"tf": 1.7320508075688772}, "tensorgrad.extras.evaluate.Context.dims": {"tf": 1.7320508075688772}, "tensorgrad.extras.evaluate.Context.evaluate": {"tf": 1.7320508075688772}, "tensorgrad.extras.evaluate.evaluate_function": {"tf": 1.7320508075688772}, "tensorgrad.extras.expectation": {"tf": 1.7320508075688772}, "tensorgrad.extras.expectation.Expectation": {"tf": 1.7320508075688772}, "tensorgrad.extras.expectation.Expectation.__init__": {"tf": 3.7416573867739413}, "tensorgrad.extras.expectation.Expectation.tensor": {"tf": 1.7320508075688772}, "tensorgrad.extras.expectation.Expectation.wrt": {"tf": 1.7320508075688772}, "tensorgrad.extras.expectation.Expectation.mu": {"tf": 1.7320508075688772}, "tensorgrad.extras.expectation.Expectation.covar_names": {"tf": 1.7320508075688772}, "tensorgrad.extras.expectation.Expectation.covar": {"tf": 1.7320508075688772}, "tensorgrad.extras.expectation.Expectation.structural_graph": {"tf": 2.449489742783178}, "tensorgrad.extras.expectation.Expectation.depends_on": {"tf": 1.7320508075688772}, "tensorgrad.extras.to_formula_old": {"tf": 1.7320508075688772}, "tensorgrad.extras.to_formula_old.to_simple_matrix_formula": {"tf": 1.7320508075688772}, "tensorgrad.extras.to_formula_old.component_to_matrix": {"tf": 1.7320508075688772}, "tensorgrad.extras.to_formula_old.dfs": {"tf": 1.7320508075688772}, "tensorgrad.extras.to_latex": {"tf": 1.7320508075688772}, "tensorgrad.extras.to_latex.to_latex_indexed": {"tf": 1.7320508075688772}, "tensorgrad.extras.to_latex.to_latex_index_free": {"tf": 1.7320508075688772}, "tensorgrad.extras.to_latex.to_latex": {"tf": 1.7320508075688772}, "tensorgrad.extras.to_numpy": {"tf": 1.7320508075688772}, "tensorgrad.extras.to_numpy.compile_to_callable": {"tf": 6.4031242374328485}, "tensorgrad.extras.to_numpy.CodegenContext": {"tf": 1.7320508075688772}, "tensorgrad.extras.to_numpy.CodegenContext.lines": {"tf": 1.7320508075688772}, "tensorgrad.extras.to_numpy.CodegenContext.cache": {"tf": 1.7320508075688772}, "tensorgrad.extras.to_numpy.CodegenContext.seen_variables": {"tf": 1.7320508075688772}, "tensorgrad.extras.to_numpy.CodegenContext.seen_symbols": {"tf": 1.7320508075688772}, "tensorgrad.extras.to_numpy.CodegenContext.seen_names": {"tf": 1.7320508075688772}, "tensorgrad.extras.to_numpy.CodegenContext.var_types": {"tf": 1.7320508075688772}, "tensorgrad.extras.to_numpy.CodegenContext.emit": {"tf": 1.7320508075688772}, "tensorgrad.extras.to_numpy.CodegenContext.fresh_name": {"tf": 1.7320508075688772}, "tensorgrad.extras.to_numpy.CodegenContext.declare_dimension": {"tf": 3.1622776601683795}, "tensorgrad.extras.to_numpy.CodegenContext.set_var_type": {"tf": 1.7320508075688772}, "tensorgrad.extras.to_numpy.CodegenContext.get_var_type": {"tf": 1.7320508075688772}, "tensorgrad.extras.to_numpy.permute_code": {"tf": 2.6457513110645907}, "tensorgrad.extras.to_pytorch": {"tf": 1.7320508075688772}, "tensorgrad.extras.to_pytorch.compile_to_callable": {"tf": 3.3166247903554}, "tensorgrad.extras.to_pytorch.CodegenContext": {"tf": 3.872983346207417}, "tensorgrad.extras.to_pytorch.CodegenContext.lines": {"tf": 1.7320508075688772}, "tensorgrad.extras.to_pytorch.CodegenContext.cache": {"tf": 1.7320508075688772}, "tensorgrad.extras.to_pytorch.CodegenContext.seen_variables": {"tf": 1.7320508075688772}, "tensorgrad.extras.to_pytorch.CodegenContext.seen_symbols": {"tf": 1.7320508075688772}, "tensorgrad.extras.to_pytorch.CodegenContext.seen_names": {"tf": 1.7320508075688772}, "tensorgrad.extras.to_pytorch.CodegenContext.emit": {"tf": 1.7320508075688772}, "tensorgrad.extras.to_pytorch.CodegenContext.fresh_name": {"tf": 1.7320508075688772}, "tensorgrad.extras.to_pytorch.CodegenContext.declare_dimension": {"tf": 3.1622776601683795}, "tensorgrad.extras.to_pytorch.permute": {"tf": 1.7320508075688772}, "tensorgrad.extras.to_tikz": {"tf": 1.7320508075688772}, "tensorgrad.extras.to_tikz.to_tikz": {"tf": 1.7320508075688772}, "tensorgrad.extras.to_tikz.NodeRef": {"tf": 4}, "tensorgrad.extras.to_tikz.NodeRef.__init__": {"tf": 1.7320508075688772}, "tensorgrad.extras.to_tikz.NodeRef.name": {"tf": 1.7320508075688772}, "tensorgrad.extras.to_tikz.NodeRef.edge_style": {"tf": 1.7320508075688772}, "tensorgrad.extras.to_tikz.NodeRef.edge_label": {"tf": 1.7320508075688772}, "tensorgrad.extras.to_tikz.Namer": {"tf": 1.7320508075688772}, "tensorgrad.extras.to_tikz.Namer.counter": {"tf": 1.7320508075688772}, "tensorgrad.extras.to_tikz.Namer.edge_mapping": {"tf": 1.7320508075688772}, "tensorgrad.extras.to_tikz.Namer.fresh_name": {"tf": 1.7320508075688772}, "tensorgrad.extras.to_tikz.Namer.edge": {"tf": 1.7320508075688772}, "tensorgrad.extras.to_tikz.depth_tracking_dispatcher": {"tf": 2.449489742783178}, "tensorgrad.extras.to_tikz.depth_tracking_dispatcher.register": {"tf": 3.1622776601683795}, "tensorgrad.extras.to_tikz.TikzGraph": {"tf": 1.7320508075688772}, "tensorgrad.extras.to_tikz.TikzGraph.__init__": {"tf": 1.7320508075688772}, "tensorgrad.extras.to_tikz.TikzGraph.lines": {"tf": 1.7320508075688772}, "tensorgrad.extras.to_tikz.TikzGraph.namer": {"tf": 1.7320508075688772}, "tensorgrad.extras.to_tikz.TikzGraph.depth": {"tf": 1.7320508075688772}, "tensorgrad.extras.to_tikz.TikzGraph.added_node_names": {"tf": 1.7320508075688772}, "tensorgrad.extras.to_tikz.TikzGraph.subgraph": {"tf": 1.7320508075688772}, "tensorgrad.extras.to_tikz.TikzGraph.to_tikz": {"tf": 1.7320508075688772}, "tensorgrad.extras.to_tikz.TikzGraph.add_node": {"tf": 1.7320508075688772}, "tensorgrad.extras.to_tikz.TikzGraph.add_edge": {"tf": 1.4142135623730951}, "tensorgrad.extras.to_tikz.TikzGraph.add_subgraph": {"tf": 1.7320508075688772}, "tensorgrad.extras.to_tikz.TikzGraph.handle_free_edges": {"tf": 1.7320508075688772}, "tensorgrad.extras.to_tikz.format_label": {"tf": 1.7320508075688772}, "tensorgrad.extras.to_tikz.format_weight": {"tf": 1.7320508075688772}, "tensorgrad.extras.to_tikz.format_function": {"tf": 1.7320508075688772}, "tensorgrad.extras.to_tikz.tree_layout": {"tf": 1.7320508075688772}, "tensorgrad.extras.to_tikz.spring_layout": {"tf": 1.7320508075688772}, "tensorgrad.extras.to_tikz.choose_layout": {"tf": 1.7320508075688772}, "tensorgrad.extras.to_tikz.prefix": {"tf": 1.7320508075688772}, "tensorgrad.functions": {"tf": 1.7320508075688772}, "tensorgrad.functions.DimType": {"tf": 1.7320508075688772}, "tensorgrad.functions.taylor": {"tf": 1.7320508075688772}, "tensorgrad.functions.frobenius2": {"tf": 1.7320508075688772}, "tensorgrad.functions.symmetrize": {"tf": 1.7320508075688772}, "tensorgrad.functions.graph": {"tf": 24.596747752497688}, "tensorgrad.functions.kronecker": {"tf": 1.7320508075688772}, "tensorgrad.functions.diag": {"tf": 3}, "tensorgrad.functions.trace": {"tf": 1.7320508075688772}, "tensorgrad.functions.parse_dim": {"tf": 1.7320508075688772}, "tensorgrad.functions.sum": {"tf": 1.7320508075688772}, "tensorgrad.functions.prod": {"tf": 1.7320508075688772}, "tensorgrad.functions.mean": {"tf": 1.7320508075688772}, "tensorgrad.functions.dot": {"tf": 1.7320508075688772}, "tensorgrad.functions.multi_dot": {"tf": 1.7320508075688772}, "tensorgrad.functions.contract": {"tf": 1.7320508075688772}, "tensorgrad.functions.pow": {"tf": 1.4142135623730951}, "tensorgrad.functions.sqrt": {"tf": 1.4142135623730951}, "tensorgrad.functions.inverse": {"tf": 3.1622776601683795}, "tensorgrad.functions.exp": {"tf": 1.7320508075688772}, "tensorgrad.functions.log": {"tf": 1.7320508075688772}, "tensorgrad.functions.tanh": {"tf": 2.23606797749979}, "tensorgrad.functions.sigmoid": {"tf": 2}, "tensorgrad.functions.softmax": {"tf": 1.7320508075688772}, "tensorgrad.functions.pairwise_distance": {"tf": 1.7320508075688772}, "tensorgrad.functions.cross_entropy": {"tf": 1.7320508075688772}, "tensorgrad.functions.sign": {"tf": 1.4142135623730951}, "tensorgrad.functions.gt0": {"tf": 1.4142135623730951}, "tensorgrad.functions.gt": {"tf": 1.7320508075688772}, "tensorgrad.functions.maximum": {"tf": 1.4142135623730951}, "tensorgrad.functions.relu": {"tf": 1.7320508075688772}, "tensorgrad.functions.abs": {"tf": 1.7320508075688772}, "tensorgrad.functions.argmax": {"tf": 1.7320508075688772}, "tensorgrad.functions.max_grad": {"tf": 4.898979485566356}, "tensorgrad.functions.max": {"tf": 1.7320508075688772}, "tensorgrad.functions.concat": {"tf": 1.7320508075688772}, "tensorgrad.functions.repeat": {"tf": 1.7320508075688772}, "tensorgrad.functions.det": {"tf": 1.7320508075688772}, "tensorgrad.functions.Convolution": {"tf": 1.7320508075688772}, "tensorgrad.functions.Convolution.__init__": {"tf": 3.872983346207417}, "tensorgrad.functions.Convolution.stride": {"tf": 1.7320508075688772}, "tensorgrad.functions.Reshape": {"tf": 1.7320508075688772}, "tensorgrad.imgtools": {"tf": 1.7320508075688772}, "tensorgrad.imgtools.compile_latex": {"tf": 1.7320508075688772}, "tensorgrad.imgtools.combine_images_vertically": {"tf": 1.7320508075688772}, "tensorgrad.imgtools.save_as_image": {"tf": 1.7320508075688772}, "tensorgrad.imgtools.save_steps_old": {"tf": 1.7320508075688772}, "tensorgrad.imgtools.save_steps": {"tf": 1.7320508075688772}, "tensorgrad.imgtools.draw_structural_graph": {"tf": 1.7320508075688772}, "tensorgrad.tensor": {"tf": 1.7320508075688772}, "tensorgrad.tensor.TensorMeta": {"tf": 2.449489742783178}, "tensorgrad.tensor.Tensor": {"tf": 1.7320508075688772}, "tensorgrad.tensor.Tensor.__init__": {"tf": 1.7320508075688772}, "tensorgrad.tensor.Tensor.edges": {"tf": 1.4142135623730951}, "tensorgrad.tensor.Tensor.shape": {"tf": 1.7320508075688772}, "tensorgrad.tensor.Tensor.order": {"tf": 1.4142135623730951}, "tensorgrad.tensor.Tensor.grad": {"tf": 3.4641016151377544}, "tensorgrad.tensor.Tensor.rename": {"tf": 3}, "tensorgrad.tensor.Tensor.simplify": {"tf": 3.4641016151377544}, "tensorgrad.tensor.Tensor.full_simplify": {"tf": 1.4142135623730951}, "tensorgrad.tensor.Tensor.weisfeiler_lehman": {"tf": 1.7320508075688772}, "tensorgrad.tensor.Tensor.depends_on": {"tf": 1.7320508075688772}, "tensorgrad.tensor.Tensor.structural_graph": {"tf": 2.449489742783178}, "tensorgrad.tensor.Tensor.edge_structural_graph": {"tf": 3}, "tensorgrad.tensor.Tensor.graph_to_string": {"tf": 2.449489742783178}, "tensorgrad.tensor.Tensor.is_isomorphic": {"tf": 3}, "tensorgrad.tensor.Tensor.isomorphisms": {"tf": 3}, "tensorgrad.tensor.Tensor.symmetries": {"tf": 1.7320508075688772}, "tensorgrad.tensor.Variable": {"tf": 1.7320508075688772}, "tensorgrad.tensor.Variable.__init__": {"tf": 2.449489742783178}, "tensorgrad.tensor.Variable.name": {"tf": 1.7320508075688772}, "tensorgrad.tensor.Variable.with_symmetries": {"tf": 1.7320508075688772}, "tensorgrad.tensor.Variable.structural_graph": {"tf": 2.449489742783178}, "tensorgrad.tensor.Variable.depends_on": {"tf": 1.7320508075688772}, "tensorgrad.tensor.Rename": {"tf": 2.449489742783178}, "tensorgrad.tensor.Rename.__init__": {"tf": 2.449489742783178}, "tensorgrad.tensor.Rename.name": {"tf": 1.7320508075688772}, "tensorgrad.tensor.Rename.tensor": {"tf": 1.7320508075688772}, "tensorgrad.tensor.Rename.mapping": {"tf": 1.7320508075688772}, "tensorgrad.tensor.Rename.depends_on": {"tf": 1.7320508075688772}, "tensorgrad.tensor.Rename.merge_renames": {"tf": 3}, "tensorgrad.tensor.Rename.structural_graph": {"tf": 2.449489742783178}, "tensorgrad.tensor.Constant": {"tf": 1.7320508075688772}, "tensorgrad.tensor.Constant.__init__": {"tf": 2.449489742783178}, "tensorgrad.tensor.Constant.name": {"tf": 1.7320508075688772}, "tensorgrad.tensor.Constant.with_symmetries": {"tf": 1.7320508075688772}, "tensorgrad.tensor.Constant.structural_graph": {"tf": 2.449489742783178}, "tensorgrad.tensor.Constant.depends_on": {"tf": 1.7320508075688772}, "tensorgrad.tensor.Delta": {"tf": 2.449489742783178}, "tensorgrad.tensor.Delta.__init__": {"tf": 2.449489742783178}, "tensorgrad.tensor.Delta.size": {"tf": 1.7320508075688772}, "tensorgrad.tensor.Delta.simplify_outer": {"tf": 1.7320508075688772}, "tensorgrad.tensor.Delta.structural_graph": {"tf": 2.449489742783178}, "tensorgrad.tensor.Zero": {"tf": 1.4142135623730951}, "tensorgrad.tensor.Ones": {"tf": 1.4142135623730951}, "tensorgrad.tensor.FunctionSignature": {"tf": 11.180339887498949}, "tensorgrad.tensor.FunctionSignature.__init__": {"tf": 1.7320508075688772}, "tensorgrad.tensor.FunctionSignature.name": {"tf": 1.7320508075688772}, "tensorgrad.tensor.FunctionSignature.edges": {"tf": 1.7320508075688772}, "tensorgrad.tensor.FunctionSignature.inputs": {"tf": 1.7320508075688772}, "tensorgrad.tensor.FunctionSignature.derivative": {"tf": 2.449489742783178}, "tensorgrad.tensor.FunctionSignature.simplify": {"tf": 2.23606797749979}, "tensorgrad.tensor.function": {"tf": 3}, "tensorgrad.tensor.Function": {"tf": 2.449489742783178}, "tensorgrad.tensor.Function.__init__": {"tf": 2.8284271247461903}, "tensorgrad.tensor.Function.shape_out": {"tf": 1.7320508075688772}, "tensorgrad.tensor.Function.inputs": {"tf": 1.7320508075688772}, "tensorgrad.tensor.Function.signature": {"tf": 1.7320508075688772}, "tensorgrad.tensor.Function.structural_graph": {"tf": 2.449489742783178}, "tensorgrad.tensor.Function.depends_on": {"tf": 1.7320508075688772}, "tensorgrad.tensor.Derivative": {"tf": 1.7320508075688772}, "tensorgrad.tensor.Derivative.__init__": {"tf": 2.449489742783178}, "tensorgrad.tensor.Derivative.tensor": {"tf": 1.7320508075688772}, "tensorgrad.tensor.Derivative.x": {"tf": 1.7320508075688772}, "tensorgrad.tensor.Derivative.new_names": {"tf": 1.7320508075688772}, "tensorgrad.tensor.Derivative.structural_graph": {"tf": 2.449489742783178}, "tensorgrad.tensor.Derivative.depends_on": {"tf": 1.7320508075688772}, "tensorgrad.tensor.Product": {"tf": 1.7320508075688772}, "tensorgrad.tensor.Product.__init__": {"tf": 2.449489742783178}, "tensorgrad.tensor.Product.tensors": {"tf": 1.7320508075688772}, "tensorgrad.tensor.Product.merge": {"tf": 3}, "tensorgrad.tensor.Product.components": {"tf": 2.449489742783178}, "tensorgrad.tensor.Product.structural_graph": {"tf": 2.449489742783178}, "tensorgrad.tensor.Product.depends_on": {"tf": 1.7320508075688772}, "tensorgrad.tensor.Sum": {"tf": 1.7320508075688772}, "tensorgrad.tensor.Sum.__init__": {"tf": 2.449489742783178}, "tensorgrad.tensor.Sum.tensors": {"tf": 1.7320508075688772}, "tensorgrad.tensor.Sum.weights": {"tf": 1.7320508075688772}, "tensorgrad.tensor.Sum.structural_graph": {"tf": 2.449489742783178}, "tensorgrad.tensor.Sum.depends_on": {"tf": 1.7320508075688772}, "tensorgrad.testutils": {"tf": 1.7320508075688772}, "tensorgrad.testutils.rand_values": {"tf": 1.7320508075688772}, "tensorgrad.testutils.assert_close": {"tf": 1.7320508075688772}, "tensorgrad.testutils.broadcast_tensors": {"tf": 1.7320508075688772}, "tensorgrad.testutils.generate_copy": {"tf": 1.7320508075688772}, "tensorgrad.testutils.generate_random_tensor_expression": {"tf": 1.7320508075688772}, "tensorgrad.testutils.make_random_tree": {"tf": 1.7320508075688772}, "tensorgrad.testutils.atlas_generate_random_tensor_expression": {"tf": 1.7320508075688772}, "tensorgrad.testutils.random_tensor_expr": {"tf": 1.7320508075688772}, "tensorgrad.testutils.random_tensor_expr2": {"tf": 1.7320508075688772}, "tensorgrad.utils": {"tf": 1.7320508075688772}, "tensorgrad.utils.DisjointSets": {"tf": 4.58257569495584}, "tensorgrad.utils.DisjointSets.parent": {"tf": 1.7320508075688772}, "tensorgrad.utils.DisjointSets.values": {"tf": 1.7320508075688772}, "tensorgrad.utils.DisjointSets.find": {"tf": 1.7320508075688772}, "tensorgrad.utils.DisjointSets.union": {"tf": 1.7320508075688772}, "tensorgrad.utils.DisjointSets.get": {"tf": 1.7320508075688772}, "tensorgrad.utils.DisjointSets.items": {"tf": 1.7320508075688772}, "tensorgrad.utils.KeyStoringDict": {"tf": 3.7416573867739413}, "tensorgrad.utils.KeyStoringDict.__init__": {"tf": 3.872983346207417}, "tensorgrad.utils.KeyStoringDict.get_with_key": {"tf": 1.7320508075688772}, "tensorgrad.utils.KeyStoringDict.get": {"tf": 1.7320508075688772}, "tensorgrad.utils.KeyStoringDict.pop": {"tf": 2}, "tensorgrad.utils.KeyStoringDict.update": {"tf": 1.7320508075688772}, "tensorgrad.utils.KeyStoringDict.keys": {"tf": 1.7320508075688772}, "tensorgrad.utils.KeyStoringDict.values": {"tf": 1.7320508075688772}, "tensorgrad.utils.KeyStoringDict.items": {"tf": 1.7320508075688772}, "tensorgrad.utils.KeyStoringDict.copy": {"tf": 1.7320508075688772}}, "df": 246, "t": {"0": {"docs": {"tensorgrad.tensor.Function.__init__": {"tf": 1}}, "df": 1}, "1": {"docs": {"tensorgrad.functions.dot": {"tf": 1}, "tensorgrad.tensor.Function.__init__": {"tf": 1}}, "df": 2}, "2": {"docs": {"tensorgrad.functions.dot": {"tf": 1}}, "df": 1}, "docs": {"tensorgrad.functions.diag": {"tf": 1.7320508075688772}, "tensorgrad.functions.tanh": {"tf": 1.4142135623730951}, "tensorgrad.functions.sigmoid": {"tf": 1}, "tensorgrad.functions.sign": {"tf": 1.7320508075688772}, "tensorgrad.functions.gt0": {"tf": 1}, "tensorgrad.functions.Convolution.__init__": {"tf": 1}, "tensorgrad.tensor.TensorMeta": {"tf": 1}, "tensorgrad.tensor.FunctionSignature.simplify": {"tf": 1}}, "df": 8, "a": {"docs": {}, "df": 0, "k": {"docs": {}, "df": 0, "e": {"docs": {"tensorgrad.extras.expectation.Expectation.__init__": {"tf": 1}, "tensorgrad.functions.inverse": {"tf": 1}, "tensorgrad.tensor.Tensor.grad": {"tf": 1.4142135623730951}}, "df": 3, "s": {"docs": {"tensorgrad.tensor.FunctionSignature": {"tf": 1.4142135623730951}, "tensorgrad.tensor.Function.__init__": {"tf": 1}}, "df": 2}}}, "r": {"docs": {}, "df": 0, "g": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "t": {"docs": {"tensorgrad.extras.to_numpy.permute_code": {"tf": 1}, "tensorgrad.functions.inverse": {"tf": 1}}, "df": 2}}}}, "y": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "r": {"docs": {"tensorgrad.functions.taylor": {"tf": 1}}, "df": 1}}}}, "n": {"docs": {}, "df": 0, "h": {"docs": {"tensorgrad.functions.tanh": {"tf": 1}}, "df": 1}}}, "h": {"docs": {"tensorgrad.tensor.FunctionSignature.derivative": {"tf": 1}}, "df": 1, "e": {"docs": {"tensorgrad.extras.expectation.Expectation.__init__": {"tf": 4.242640687119285}, "tensorgrad.extras.expectation.Expectation.structural_graph": {"tf": 2.23606797749979}, "tensorgrad.extras.expectation.Expectation.depends_on": {"tf": 1}, "tensorgrad.extras.to_numpy.compile_to_callable": {"tf": 2}, "tensorgrad.extras.to_numpy.CodegenContext": {"tf": 1}, "tensorgrad.extras.to_pytorch.compile_to_callable": {"tf": 1.4142135623730951}, "tensorgrad.extras.to_pytorch.permute": {"tf": 1.4142135623730951}, "tensorgrad.extras.to_tikz.to_tikz": {"tf": 1}, "tensorgrad.extras.to_tikz.NodeRef": {"tf": 2.23606797749979}, "tensorgrad.extras.to_tikz.depth_tracking_dispatcher.register": {"tf": 1}, "tensorgrad.extras.to_tikz.TikzGraph.add_edge": {"tf": 1.4142135623730951}, "tensorgrad.extras.to_tikz.TikzGraph.add_subgraph": {"tf": 1}, "tensorgrad.extras.to_tikz.TikzGraph.handle_free_edges": {"tf": 1}, "tensorgrad.functions.taylor": {"tf": 1}, "tensorgrad.functions.symmetrize": {"tf": 1}, "tensorgrad.functions.graph": {"tf": 3.4641016151377544}, "tensorgrad.functions.diag": {"tf": 1.4142135623730951}, "tensorgrad.functions.sum": {"tf": 1.4142135623730951}, "tensorgrad.functions.dot": {"tf": 2.6457513110645907}, "tensorgrad.functions.multi_dot": {"tf": 1}, "tensorgrad.functions.inverse": {"tf": 3}, "tensorgrad.functions.tanh": {"tf": 1}, "tensorgrad.functions.sigmoid": {"tf": 1}, "tensorgrad.functions.max_grad": {"tf": 1}, "tensorgrad.functions.max": {"tf": 1.7320508075688772}, "tensorgrad.functions.concat": {"tf": 1}, "tensorgrad.functions.repeat": {"tf": 1.4142135623730951}, "tensorgrad.functions.det": {"tf": 1}, "tensorgrad.functions.Convolution.__init__": {"tf": 2.23606797749979}, "tensorgrad.functions.Reshape": {"tf": 1}, "tensorgrad.tensor.TensorMeta": {"tf": 2}, "tensorgrad.tensor.Tensor.__init__": {"tf": 1}, "tensorgrad.tensor.Tensor.order": {"tf": 1.4142135623730951}, "tensorgrad.tensor.Tensor.grad": {"tf": 3.4641016151377544}, "tensorgrad.tensor.Tensor.rename": {"tf": 1.4142135623730951}, "tensorgrad.tensor.Tensor.simplify": {"tf": 1.4142135623730951}, "tensorgrad.tensor.Tensor.full_simplify": {"tf": 1}, "tensorgrad.tensor.Tensor.weisfeiler_lehman": {"tf": 1}, "tensorgrad.tensor.Tensor.depends_on": {"tf": 1}, "tensorgrad.tensor.Tensor.structural_graph": {"tf": 2.23606797749979}, "tensorgrad.tensor.Tensor.edge_structural_graph": {"tf": 2}, "tensorgrad.tensor.Tensor.graph_to_string": {"tf": 1.4142135623730951}, "tensorgrad.tensor.Tensor.is_isomorphic": {"tf": 1.4142135623730951}, "tensorgrad.tensor.Tensor.isomorphisms": {"tf": 1}, "tensorgrad.tensor.Tensor.symmetries": {"tf": 1.7320508075688772}, "tensorgrad.tensor.Variable.__init__": {"tf": 1.4142135623730951}, "tensorgrad.tensor.Variable.structural_graph": {"tf": 2.23606797749979}, "tensorgrad.tensor.Variable.depends_on": {"tf": 1}, "tensorgrad.tensor.Rename": {"tf": 1.4142135623730951}, "tensorgrad.tensor.Rename.__init__": {"tf": 1}, "tensorgrad.tensor.Rename.depends_on": {"tf": 1}, "tensorgrad.tensor.Rename.merge_renames": {"tf": 1}, "tensorgrad.tensor.Rename.structural_graph": {"tf": 2.23606797749979}, "tensorgrad.tensor.Constant.__init__": {"tf": 1}, "tensorgrad.tensor.Constant.structural_graph": {"tf": 2.23606797749979}, "tensorgrad.tensor.Constant.depends_on": {"tf": 1}, "tensorgrad.tensor.Delta": {"tf": 2.8284271247461903}, "tensorgrad.tensor.Delta.__init__": {"tf": 2}, "tensorgrad.tensor.Delta.structural_graph": {"tf": 2.23606797749979}, "tensorgrad.tensor.FunctionSignature": {"tf": 4.242640687119285}, "tensorgrad.tensor.FunctionSignature.derivative": {"tf": 1.4142135623730951}, "tensorgrad.tensor.FunctionSignature.simplify": {"tf": 1}, "tensorgrad.tensor.function": {"tf": 1.4142135623730951}, "tensorgrad.tensor.Function": {"tf": 1}, "tensorgrad.tensor.Function.__init__": {"tf": 2.23606797749979}, "tensorgrad.tensor.Function.structural_graph": {"tf": 2.23606797749979}, "tensorgrad.tensor.Function.depends_on": {"tf": 1}, "tensorgrad.tensor.Derivative": {"tf": 1}, "tensorgrad.tensor.Derivative.__init__": {"tf": 1.7320508075688772}, "tensorgrad.tensor.Derivative.structural_graph": {"tf": 2.23606797749979}, "tensorgrad.tensor.Derivative.depends_on": {"tf": 1}, "tensorgrad.tensor.Product": {"tf": 1}, "tensorgrad.tensor.Product.merge": {"tf": 1}, "tensorgrad.tensor.Product.components": {"tf": 1}, "tensorgrad.tensor.Product.structural_graph": {"tf": 2.23606797749979}, "tensorgrad.tensor.Product.depends_on": {"tf": 1}, "tensorgrad.tensor.Sum.__init__": {"tf": 1.7320508075688772}, "tensorgrad.tensor.Sum.structural_graph": {"tf": 2.23606797749979}, "tensorgrad.tensor.Sum.depends_on": {"tf": 1}, "tensorgrad.utils.DisjointSets": {"tf": 1}, "tensorgrad.utils.KeyStoringDict": {"tf": 1}, "tensorgrad.utils.KeyStoringDict.get": {"tf": 1}, "tensorgrad.utils.KeyStoringDict.pop": {"tf": 1}}, "df": 83, "m": {"docs": {"tensorgrad.extras.to_numpy.compile_to_callable": {"tf": 1.4142135623730951}, "tensorgrad.extras.to_tikz.TikzGraph.add_edge": {"tf": 1}, "tensorgrad.extras.to_tikz.TikzGraph.add_subgraph": {"tf": 1}}, "df": 3}, "n": {"docs": {"tensorgrad.extras.to_numpy.compile_to_callable": {"tf": 1}, "tensorgrad.tensor.TensorMeta": {"tf": 1}, "tensorgrad.tensor.FunctionSignature": {"tf": 1}, "tensorgrad.utils.DisjointSets": {"tf": 1}}, "df": 4}, "y": {"docs": {"tensorgrad.extras.to_tikz.TikzGraph.add_subgraph": {"tf": 1}, "tensorgrad.functions.inverse": {"tf": 1}, "tensorgrad.tensor.Product.merge": {"tf": 1}, "tensorgrad.utils.DisjointSets": {"tf": 1}}, "df": 4}, "i": {"docs": {}, "df": 0, "r": {"docs": {"tensorgrad.functions.graph": {"tf": 1}, "tensorgrad.tensor.TensorMeta": {"tf": 1.4142135623730951}, "tensorgrad.tensor.Function.__init__": {"tf": 1}}, "df": 3}}, "s": {"docs": {}, "df": 0, "e": {"docs": {"tensorgrad.tensor.TensorMeta": {"tf": 1}, "tensorgrad.tensor.FunctionSignature": {"tf": 1}}, "df": 2}}}, "i": {"docs": {}, "df": 0, "s": {"docs": {"tensorgrad.extras.expectation.Expectation.depends_on": {"tf": 1}, "tensorgrad.extras.to_numpy.compile_to_callable": {"tf": 1}, "tensorgrad.extras.to_numpy.CodegenContext.declare_dimension": {"tf": 1}, "tensorgrad.extras.to_pytorch.CodegenContext.declare_dimension": {"tf": 1}, "tensorgrad.extras.to_tikz.NodeRef": {"tf": 1}, "tensorgrad.extras.to_tikz.TikzGraph.add_node": {"tf": 1}, "tensorgrad.functions.graph": {"tf": 1}, "tensorgrad.functions.diag": {"tf": 1.4142135623730951}, "tensorgrad.tensor.TensorMeta": {"tf": 1}, "tensorgrad.tensor.Tensor.grad": {"tf": 1}, "tensorgrad.tensor.Tensor.rename": {"tf": 1}, "tensorgrad.tensor.Tensor.simplify": {"tf": 1.7320508075688772}, "tensorgrad.tensor.Tensor.depends_on": {"tf": 1}, "tensorgrad.tensor.Tensor.is_isomorphic": {"tf": 1}, "tensorgrad.tensor.Variable.depends_on": {"tf": 1}, "tensorgrad.tensor.Rename": {"tf": 1}, "tensorgrad.tensor.Rename.depends_on": {"tf": 1}, "tensorgrad.tensor.Constant.depends_on": {"tf": 1}, "tensorgrad.tensor.Delta": {"tf": 1}, "tensorgrad.tensor.FunctionSignature": {"tf": 2}, "tensorgrad.tensor.FunctionSignature.simplify": {"tf": 1.4142135623730951}, "tensorgrad.tensor.Function": {"tf": 1}, "tensorgrad.tensor.Function.__init__": {"tf": 1.4142135623730951}, "tensorgrad.tensor.Function.depends_on": {"tf": 1}, "tensorgrad.tensor.Derivative.depends_on": {"tf": 1}, "tensorgrad.tensor.Product.depends_on": {"tf": 1}, "tensorgrad.tensor.Sum.depends_on": {"tf": 1}, "tensorgrad.utils.KeyStoringDict.copy": {"tf": 1}}, "df": 28}}, "a": {"docs": {}, "df": 0, "t": {"docs": {"tensorgrad.extras.to_pytorch.permute": {"tf": 1}, "tensorgrad.extras.to_tikz.TikzGraph.handle_free_edges": {"tf": 1}, "tensorgrad.functions.diag": {"tf": 1.4142135623730951}, "tensorgrad.functions.sign": {"tf": 1}, "tensorgrad.functions.gt0": {"tf": 1}, "tensorgrad.functions.Convolution": {"tf": 1}, "tensorgrad.functions.Convolution.__init__": {"tf": 1}, "tensorgrad.tensor.Rename": {"tf": 1}, "tensorgrad.tensor.Constant": {"tf": 1}, "tensorgrad.tensor.Zero": {"tf": 1}, "tensorgrad.tensor.Ones": {"tf": 1}, "tensorgrad.tensor.FunctionSignature": {"tf": 2}, "tensorgrad.tensor.FunctionSignature.derivative": {"tf": 1}, "tensorgrad.tensor.FunctionSignature.simplify": {"tf": 1}, "tensorgrad.tensor.Function": {"tf": 1}, "tensorgrad.tensor.Function.__init__": {"tf": 1}, "tensorgrad.utils.KeyStoringDict": {"tf": 1}}, "df": 17}}, "r": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "g": {"docs": {}, "df": 0, "h": {"docs": {"tensorgrad.tensor.Tensor.grad": {"tf": 1.4142135623730951}}, "df": 1}}}}}}, "e": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "r": {"docs": {"tensorgrad.extras.expectation.Expectation.__init__": {"tf": 3.3166247903554}, "tensorgrad.extras.expectation.Expectation.structural_graph": {"tf": 1.4142135623730951}, "tensorgrad.extras.expectation.Expectation.depends_on": {"tf": 1}, "tensorgrad.extras.to_latex.to_latex_indexed": {"tf": 1}, "tensorgrad.extras.to_pytorch.compile_to_callable": {"tf": 1.4142135623730951}, "tensorgrad.extras.to_pytorch.CodegenContext": {"tf": 1}, "tensorgrad.extras.to_pytorch.permute": {"tf": 1}, "tensorgrad.extras.to_tikz.to_tikz": {"tf": 1}, "tensorgrad.functions.graph": {"tf": 2.8284271247461903}, "tensorgrad.functions.diag": {"tf": 1.4142135623730951}, "tensorgrad.functions.sum": {"tf": 1}, "tensorgrad.functions.inverse": {"tf": 1.7320508075688772}, "tensorgrad.functions.sign": {"tf": 1}, "tensorgrad.functions.gt0": {"tf": 1}, "tensorgrad.functions.max_grad": {"tf": 1.4142135623730951}, "tensorgrad.functions.repeat": {"tf": 1}, "tensorgrad.functions.Convolution": {"tf": 1.4142135623730951}, "tensorgrad.functions.Convolution.__init__": {"tf": 1}, "tensorgrad.tensor.Tensor.__init__": {"tf": 1.4142135623730951}, "tensorgrad.tensor.Tensor.order": {"tf": 1}, "tensorgrad.tensor.Tensor.grad": {"tf": 1.7320508075688772}, "tensorgrad.tensor.Tensor.rename": {"tf": 1.4142135623730951}, "tensorgrad.tensor.Tensor.simplify": {"tf": 1.4142135623730951}, "tensorgrad.tensor.Tensor.depends_on": {"tf": 1}, "tensorgrad.tensor.Tensor.structural_graph": {"tf": 1.4142135623730951}, "tensorgrad.tensor.Tensor.edge_structural_graph": {"tf": 1}, "tensorgrad.tensor.Tensor.is_isomorphic": {"tf": 1.7320508075688772}, "tensorgrad.tensor.Tensor.isomorphisms": {"tf": 1}, "tensorgrad.tensor.Tensor.symmetries": {"tf": 1}, "tensorgrad.tensor.Variable.__init__": {"tf": 1}, "tensorgrad.tensor.Variable.structural_graph": {"tf": 1.4142135623730951}, "tensorgrad.tensor.Variable.depends_on": {"tf": 1}, "tensorgrad.tensor.Rename": {"tf": 1.4142135623730951}, "tensorgrad.tensor.Rename.__init__": {"tf": 1.4142135623730951}, "tensorgrad.tensor.Rename.depends_on": {"tf": 1}, "tensorgrad.tensor.Rename.structural_graph": {"tf": 1.4142135623730951}, "tensorgrad.tensor.Constant": {"tf": 1.4142135623730951}, "tensorgrad.tensor.Constant.__init__": {"tf": 1}, "tensorgrad.tensor.Constant.structural_graph": {"tf": 1.4142135623730951}, "tensorgrad.tensor.Constant.depends_on": {"tf": 1}, "tensorgrad.tensor.Delta": {"tf": 2.23606797749979}, "tensorgrad.tensor.Delta.__init__": {"tf": 1.7320508075688772}, "tensorgrad.tensor.Delta.structural_graph": {"tf": 1.4142135623730951}, "tensorgrad.tensor.FunctionSignature": {"tf": 2.8284271247461903}, "tensorgrad.tensor.FunctionSignature.simplify": {"tf": 1}, "tensorgrad.tensor.function": {"tf": 1.7320508075688772}, "tensorgrad.tensor.Function": {"tf": 1}, "tensorgrad.tensor.Function.__init__": {"tf": 1.4142135623730951}, "tensorgrad.tensor.Function.structural_graph": {"tf": 1.4142135623730951}, "tensorgrad.tensor.Function.depends_on": {"tf": 1}, "tensorgrad.tensor.Derivative": {"tf": 1.4142135623730951}, "tensorgrad.tensor.Derivative.__init__": {"tf": 2}, "tensorgrad.tensor.Derivative.structural_graph": {"tf": 1.4142135623730951}, "tensorgrad.tensor.Derivative.depends_on": {"tf": 1}, "tensorgrad.tensor.Product": {"tf": 1}, "tensorgrad.tensor.Product.__init__": {"tf": 1}, "tensorgrad.tensor.Product.merge": {"tf": 1}, "tensorgrad.tensor.Product.structural_graph": {"tf": 1.4142135623730951}, "tensorgrad.tensor.Product.depends_on": {"tf": 1}, "tensorgrad.tensor.Sum.__init__": {"tf": 1}, "tensorgrad.tensor.Sum.structural_graph": {"tf": 1.4142135623730951}, "tensorgrad.tensor.Sum.depends_on": {"tf": 1}}, "df": 62, "s": {"docs": {"tensorgrad.extras.to_numpy.compile_to_callable": {"tf": 1}, "tensorgrad.functions.graph": {"tf": 2}, "tensorgrad.functions.prod": {"tf": 1}, "tensorgrad.functions.dot": {"tf": 1}, "tensorgrad.functions.multi_dot": {"tf": 1}, "tensorgrad.functions.concat": {"tf": 1}, "tensorgrad.tensor.Tensor.is_isomorphic": {"tf": 1}, "tensorgrad.tensor.Delta.simplify_outer": {"tf": 1}, "tensorgrad.tensor.FunctionSignature": {"tf": 1.7320508075688772}, "tensorgrad.tensor.Function": {"tf": 1.4142135623730951}, "tensorgrad.tensor.Function.__init__": {"tf": 1.4142135623730951}, "tensorgrad.tensor.Product": {"tf": 1}, "tensorgrad.tensor.Product.__init__": {"tf": 1.4142135623730951}, "tensorgrad.tensor.Product.merge": {"tf": 1.4142135623730951}, "tensorgrad.tensor.Product.components": {"tf": 1}, "tensorgrad.tensor.Sum": {"tf": 1}, "tensorgrad.tensor.Sum.__init__": {"tf": 1.7320508075688772}}, "df": 17}}}}}, "s": {"docs": {}, "df": 0, "t": {"docs": {"tensorgrad.tensor.Tensor.is_isomorphic": {"tf": 1}}, "df": 1, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {"tensorgrad.extras.expectation.Expectation.structural_graph": {"tf": 1}, "tensorgrad.tensor.Tensor.structural_graph": {"tf": 1}, "tensorgrad.tensor.Variable.structural_graph": {"tf": 1}, "tensorgrad.tensor.Rename.structural_graph": {"tf": 1}, "tensorgrad.tensor.Constant.structural_graph": {"tf": 1}, "tensorgrad.tensor.Delta.structural_graph": {"tf": 1}, "tensorgrad.tensor.Function.structural_graph": {"tf": 1}, "tensorgrad.tensor.Derivative.structural_graph": {"tf": 1}, "tensorgrad.tensor.Product.structural_graph": {"tf": 1}, "tensorgrad.tensor.Sum.structural_graph": {"tf": 1}}, "df": 10}}}}}}, "o": {"docs": {"tensorgrad.extras.expectation.Expectation.__init__": {"tf": 2.6457513110645907}, "tensorgrad.extras.expectation.Expectation.structural_graph": {"tf": 1}, "tensorgrad.extras.to_latex.to_latex_indexed": {"tf": 1}, "tensorgrad.extras.to_latex.to_latex_index_free": {"tf": 1}, "tensorgrad.extras.to_numpy.permute_code": {"tf": 1}, "tensorgrad.extras.to_pytorch.permute": {"tf": 1}, "tensorgrad.extras.to_tikz.NodeRef": {"tf": 1.4142135623730951}, "tensorgrad.extras.to_tikz.TikzGraph.add_node": {"tf": 1}, "tensorgrad.extras.to_tikz.TikzGraph.add_subgraph": {"tf": 1}, "tensorgrad.extras.to_tikz.TikzGraph.handle_free_edges": {"tf": 1}, "tensorgrad.extras.to_tikz.format_label": {"tf": 1.4142135623730951}, "tensorgrad.functions.graph": {"tf": 2.449489742783178}, "tensorgrad.functions.inverse": {"tf": 1}, "tensorgrad.functions.max_grad": {"tf": 1}, "tensorgrad.functions.repeat": {"tf": 1}, "tensorgrad.functions.Convolution.__init__": {"tf": 1}, "tensorgrad.tensor.TensorMeta": {"tf": 1}, "tensorgrad.tensor.Tensor.__init__": {"tf": 1}, "tensorgrad.tensor.Tensor.grad": {"tf": 2.23606797749979}, "tensorgrad.tensor.Tensor.rename": {"tf": 1.7320508075688772}, "tensorgrad.tensor.Tensor.simplify": {"tf": 1}, "tensorgrad.tensor.Tensor.structural_graph": {"tf": 1}, "tensorgrad.tensor.Tensor.edge_structural_graph": {"tf": 1}, "tensorgrad.tensor.Tensor.is_isomorphic": {"tf": 2}, "tensorgrad.tensor.Tensor.isomorphisms": {"tf": 1.4142135623730951}, "tensorgrad.tensor.Variable.structural_graph": {"tf": 1}, "tensorgrad.tensor.Rename": {"tf": 1}, "tensorgrad.tensor.Rename.__init__": {"tf": 1.4142135623730951}, "tensorgrad.tensor.Rename.structural_graph": {"tf": 1}, "tensorgrad.tensor.Constant.structural_graph": {"tf": 1}, "tensorgrad.tensor.Delta.simplify_outer": {"tf": 1}, "tensorgrad.tensor.Delta.structural_graph": {"tf": 1}, "tensorgrad.tensor.FunctionSignature": {"tf": 2.449489742783178}, "tensorgrad.tensor.FunctionSignature.derivative": {"tf": 1.4142135623730951}, "tensorgrad.tensor.function": {"tf": 1}, "tensorgrad.tensor.Function": {"tf": 1.4142135623730951}, "tensorgrad.tensor.Function.structural_graph": {"tf": 1}, "tensorgrad.tensor.Derivative": {"tf": 1}, "tensorgrad.tensor.Derivative.__init__": {"tf": 1.7320508075688772}, "tensorgrad.tensor.Derivative.structural_graph": {"tf": 1}, "tensorgrad.tensor.Product.__init__": {"tf": 1}, "tensorgrad.tensor.Product.structural_graph": {"tf": 1}, "tensorgrad.tensor.Sum.__init__": {"tf": 1}, "tensorgrad.tensor.Sum.structural_graph": {"tf": 1}, "tensorgrad.utils.DisjointSets": {"tf": 1.4142135623730951}, "tensorgrad.utils.KeyStoringDict.__init__": {"tf": 1}}, "df": 46, "p": {"docs": {"tensorgrad.extras.expectation.Expectation.structural_graph": {"tf": 1}, "tensorgrad.tensor.Tensor.structural_graph": {"tf": 1}, "tensorgrad.tensor.Variable.structural_graph": {"tf": 1}, "tensorgrad.tensor.Rename.structural_graph": {"tf": 1}, "tensorgrad.tensor.Constant.structural_graph": {"tf": 1}, "tensorgrad.tensor.Delta.structural_graph": {"tf": 1}, "tensorgrad.tensor.Function.structural_graph": {"tf": 1}, "tensorgrad.tensor.Derivative.structural_graph": {"tf": 1}, "tensorgrad.tensor.Product.structural_graph": {"tf": 1}, "tensorgrad.tensor.Sum.structural_graph": {"tf": 1}}, "df": 10}, "r": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "h": {"docs": {"tensorgrad.extras.to_pytorch.compile_to_callable": {"tf": 1.4142135623730951}, "tensorgrad.functions.inverse": {"tf": 1.4142135623730951}, "tensorgrad.functions.sign": {"tf": 1}, "tensorgrad.functions.maximum": {"tf": 1}}, "df": 4, "/": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "y": {"docs": {"tensorgrad.tensor.Tensor.order": {"tf": 1}}, "df": 1}}}}}}}}}, "/": {"docs": {}, "df": 0, "f": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "m": {"docs": {"tensorgrad.extras.to_tikz.NodeRef": {"tf": 1}}, "df": 1}}}}}, "g": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "h": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {"tensorgrad.tensor.Sum.__init__": {"tf": 1}}, "df": 1}}}}}}}, "u": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "e": {"docs": {"tensorgrad.extras.expectation.Expectation.structural_graph": {"tf": 1}, "tensorgrad.functions.dot": {"tf": 1}, "tensorgrad.tensor.Tensor.structural_graph": {"tf": 1}, "tensorgrad.tensor.Tensor.edge_structural_graph": {"tf": 1}, "tensorgrad.tensor.Variable.structural_graph": {"tf": 1}, "tensorgrad.tensor.Rename.structural_graph": {"tf": 1}, "tensorgrad.tensor.Constant.structural_graph": {"tf": 1}, "tensorgrad.tensor.Delta.structural_graph": {"tf": 1}, "tensorgrad.tensor.FunctionSignature": {"tf": 1}, "tensorgrad.tensor.function": {"tf": 1}, "tensorgrad.tensor.Function.structural_graph": {"tf": 1}, "tensorgrad.tensor.Derivative.structural_graph": {"tf": 1}, "tensorgrad.tensor.Product.structural_graph": {"tf": 1}, "tensorgrad.tensor.Sum.structural_graph": {"tf": 1}}, "df": 14, "[": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "p": {"docs": {"tensorgrad.extras.to_numpy.compile_to_callable": {"tf": 1}}, "df": 1}}, "s": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "[": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "r": {"docs": {"tensorgrad.tensor.FunctionSignature": {"tf": 1}}, "df": 1}}}}}}}}, "s": {"docs": {"tensorgrad.tensor.function": {"tf": 1}}, "df": 1}}}}}, "r": {"docs": {"tensorgrad.extras.to_latex.to_latex_index_free": {"tf": 1}}, "df": 1, "e": {"docs": {}, "df": 0, "e": {"docs": {"tensorgrad.extras.expectation.Expectation.structural_graph": {"tf": 1}, "tensorgrad.tensor.Tensor.structural_graph": {"tf": 1}, "tensorgrad.tensor.Tensor.graph_to_string": {"tf": 1}, "tensorgrad.tensor.Variable.structural_graph": {"tf": 1}, "tensorgrad.tensor.Rename.structural_graph": {"tf": 1}, "tensorgrad.tensor.Constant.structural_graph": {"tf": 1}, "tensorgrad.tensor.Delta.structural_graph": {"tf": 1}, "tensorgrad.tensor.Function.structural_graph": {"tf": 1}, "tensorgrad.tensor.Derivative.structural_graph": {"tf": 1}, "tensorgrad.tensor.Product.structural_graph": {"tf": 1}, "tensorgrad.tensor.Sum.structural_graph": {"tf": 1}}, "df": 11}}, "u": {"docs": {}, "df": 0, "e": {"docs": {"tensorgrad.extras.to_latex.to_latex": {"tf": 1}, "tensorgrad.tensor.Tensor.edge_structural_graph": {"tf": 1}, "tensorgrad.tensor.Tensor.is_isomorphic": {"tf": 1}}, "df": 3}}, "a": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "e": {"docs": {"tensorgrad.extras.to_numpy.permute_code": {"tf": 1}}, "df": 1}}}}}}, "i": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {"tensorgrad.extras.to_tikz.format_label": {"tf": 1}}, "df": 1}}}}}, "d": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "l": {"docs": {"tensorgrad.functions.graph": {"tf": 1}}, "df": 1}}}}}}}}, "c": {"docs": {}, "df": 0, "e": {"docs": {"tensorgrad.functions.graph": {"tf": 1}}, "df": 1}}}, "y": {"docs": {"tensorgrad.utils.DisjointSets": {"tf": 1}}, "df": 1}}, "i": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "e": {"docs": {"tensorgrad.extras.to_numpy.CodegenContext.fresh_name": {"tf": 1}, "tensorgrad.extras.to_pytorch.CodegenContext.fresh_name": {"tf": 1}}, "df": 2}}, "k": {"docs": {}, "df": 0, "z": {"docs": {"tensorgrad.extras.to_tikz.to_tikz": {"tf": 1}, "tensorgrad.extras.to_tikz.NodeRef": {"tf": 1.4142135623730951}}, "df": 2}}, "e": {"docs": {"tensorgrad.functions.max_grad": {"tf": 1.4142135623730951}, "tensorgrad.functions.max": {"tf": 1}}, "df": 2}}, "w": {"docs": {}, "df": 0, "o": {"docs": {"tensorgrad.extras.to_tikz.TikzGraph.add_edge": {"tf": 1}, "tensorgrad.functions.dot": {"tf": 1.4142135623730951}, "tensorgrad.functions.multi_dot": {"tf": 1}, "tensorgrad.functions.inverse": {"tf": 1}, "tensorgrad.functions.Convolution.__init__": {"tf": 1}, "tensorgrad.tensor.FunctionSignature": {"tf": 1.4142135623730951}}, "df": 6}}, "^": {"docs": {}, "df": 0, "k": {"docs": {"tensorgrad.functions.pow": {"tf": 1}}, "df": 1}}, "y": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "y": {"docs": {"tensorgrad.functions.Convolution.__init__": {"tf": 1}}, "df": 1}}}}}}, "e": {"docs": {}, "df": 0, "s": {"docs": {"tensorgrad.utils.DisjointSets": {"tf": 1}}, "df": 1}}}}}, "e": {"0": {"0": {"docs": {"tensorgrad.tensor.Function.__init__": {"tf": 1}}, "df": 1}, "1": {"docs": {"tensorgrad.tensor.Function.__init__": {"tf": 1}}, "df": 1}, "docs": {}, "df": 0}, "1": {"0": {"docs": {"tensorgrad.tensor.Function.__init__": {"tf": 1}}, "df": 1}, "docs": {}, "df": 0}, "docs": {"tensorgrad.extras.to_latex.to_latex_index_free": {"tf": 1}, "tensorgrad.extras.to_tikz.NodeRef": {"tf": 1}, "tensorgrad.extras.to_tikz.format_label": {"tf": 1}, "tensorgrad.functions.graph": {"tf": 1}, "tensorgrad.functions.tanh": {"tf": 1.4142135623730951}, "tensorgrad.functions.sigmoid": {"tf": 1}, "tensorgrad.functions.repeat": {"tf": 1}, "tensorgrad.tensor.Delta": {"tf": 1.4142135623730951}, "tensorgrad.tensor.FunctionSignature": {"tf": 1}}, "df": 9, "x": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {"tensorgrad.extras.expectation.Expectation.__init__": {"tf": 2}}, "df": 1}}}}}}}}, "r": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {"tensorgrad.tensor.Tensor.full_simplify": {"tf": 1}}, "df": 1, "s": {"docs": {"tensorgrad.extras.to_numpy.CodegenContext": {"tf": 1}}, "df": 1}}}}}}}}, "l": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "y": {"docs": {"tensorgrad.utils.DisjointSets": {"tf": 1}}, "df": 1}}}}}}}}, "e": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "d": {"docs": {"tensorgrad.extras.to_numpy.compile_to_callable": {"tf": 1}}, "df": 1}}}}}}, "i": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {"tensorgrad.extras.to_tikz.depth_tracking_dispatcher": {"tf": 1}}, "df": 1}}}, "s": {"docs": {"tensorgrad.utils.KeyStoringDict.pop": {"tf": 1}}, "df": 1}}}}, "a": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "e": {"docs": {"tensorgrad.functions.graph": {"tf": 1.4142135623730951}, "tensorgrad.tensor.FunctionSignature": {"tf": 2}}, "df": 2, "s": {"docs": {"tensorgrad.functions.graph": {"tf": 1}, "tensorgrad.functions.max_grad": {"tf": 1}, "tensorgrad.tensor.FunctionSignature": {"tf": 1}}, "df": 3}}}}}}, "t": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "s": {"docs": {"tensorgrad.functions.diag": {"tf": 1}}, "df": 1}}}}}}, "c": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "t": {"docs": {"tensorgrad.utils.DisjointSets": {"tf": 1}}, "df": 1}}}}}, "[": {"docs": {}, "df": 0, "x": {"docs": {"tensorgrad.extras.expectation.Expectation.__init__": {"tf": 1}}, "df": 1}}, "d": {"docs": {}, "df": 0, "g": {"docs": {}, "df": 0, "e": {"docs": {"tensorgrad.extras.expectation.Expectation.structural_graph": {"tf": 1}, "tensorgrad.extras.to_tikz.NodeRef": {"tf": 2.449489742783178}, "tensorgrad.extras.to_tikz.TikzGraph.add_edge": {"tf": 1.4142135623730951}, "tensorgrad.extras.to_tikz.TikzGraph.handle_free_edges": {"tf": 1.4142135623730951}, "tensorgrad.functions.graph": {"tf": 3}, "tensorgrad.tensor.Tensor.edges": {"tf": 1}, "tensorgrad.tensor.Tensor.rename": {"tf": 1.7320508075688772}, "tensorgrad.tensor.Tensor.structural_graph": {"tf": 1}, "tensorgrad.tensor.Tensor.edge_structural_graph": {"tf": 2.23606797749979}, "tensorgrad.tensor.Tensor.is_isomorphic": {"tf": 1.7320508075688772}, "tensorgrad.tensor.Tensor.isomorphisms": {"tf": 1.7320508075688772}, "tensorgrad.tensor.Variable.structural_graph": {"tf": 1}, "tensorgrad.tensor.Rename": {"tf": 1.4142135623730951}, "tensorgrad.tensor.Rename.__init__": {"tf": 1}, "tensorgrad.tensor.Rename.structural_graph": {"tf": 1}, "tensorgrad.tensor.Constant.structural_graph": {"tf": 1}, "tensorgrad.tensor.Delta.structural_graph": {"tf": 1}, "tensorgrad.tensor.FunctionSignature": {"tf": 2.23606797749979}, "tensorgrad.tensor.function": {"tf": 1.4142135623730951}, "tensorgrad.tensor.Function": {"tf": 1}, "tensorgrad.tensor.Function.__init__": {"tf": 1}, "tensorgrad.tensor.Function.structural_graph": {"tf": 1}, "tensorgrad.tensor.Derivative.structural_graph": {"tf": 1}, "tensorgrad.tensor.Product.structural_graph": {"tf": 1}, "tensorgrad.tensor.Sum.structural_graph": {"tf": 1}}, "df": 25, "s": {"docs": {"tensorgrad.extras.expectation.Expectation.__init__": {"tf": 2.23606797749979}, "tensorgrad.extras.expectation.Expectation.structural_graph": {"tf": 1}, "tensorgrad.extras.to_numpy.permute_code": {"tf": 1.4142135623730951}, "tensorgrad.functions.symmetrize": {"tf": 1}, "tensorgrad.functions.graph": {"tf": 1.4142135623730951}, "tensorgrad.functions.dot": {"tf": 1}, "tensorgrad.functions.inverse": {"tf": 2.23606797749979}, "tensorgrad.tensor.Tensor.order": {"tf": 1}, "tensorgrad.tensor.Tensor.grad": {"tf": 1.4142135623730951}, "tensorgrad.tensor.Tensor.rename": {"tf": 2}, "tensorgrad.tensor.Tensor.simplify": {"tf": 1.4142135623730951}, "tensorgrad.tensor.Tensor.structural_graph": {"tf": 1}, "tensorgrad.tensor.Tensor.edge_structural_graph": {"tf": 1.7320508075688772}, "tensorgrad.tensor.Tensor.is_isomorphic": {"tf": 1}, "tensorgrad.tensor.Variable.structural_graph": {"tf": 1}, "tensorgrad.tensor.Rename": {"tf": 1}, "tensorgrad.tensor.Rename.structural_graph": {"tf": 1}, "tensorgrad.tensor.Constant.__init__": {"tf": 1}, "tensorgrad.tensor.Constant.structural_graph": {"tf": 1}, "tensorgrad.tensor.Delta.__init__": {"tf": 1.4142135623730951}, "tensorgrad.tensor.Delta.structural_graph": {"tf": 1}, "tensorgrad.tensor.FunctionSignature": {"tf": 3.872983346207417}, "tensorgrad.tensor.FunctionSignature.derivative": {"tf": 1.4142135623730951}, "tensorgrad.tensor.Function.__init__": {"tf": 1}, "tensorgrad.tensor.Function.structural_graph": {"tf": 1}, "tensorgrad.tensor.Derivative.__init__": {"tf": 1}, "tensorgrad.tensor.Derivative.structural_graph": {"tf": 1}, "tensorgrad.tensor.Product.merge": {"tf": 1}, "tensorgrad.tensor.Product.structural_graph": {"tf": 1}, "tensorgrad.tensor.Sum.structural_graph": {"tf": 1}}, "df": 30}}}}, "a": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "h": {"docs": {"tensorgrad.extras.expectation.Expectation.structural_graph": {"tf": 1}, "tensorgrad.extras.to_numpy.CodegenContext.fresh_name": {"tf": 1}, "tensorgrad.extras.to_pytorch.compile_to_callable": {"tf": 1}, "tensorgrad.extras.to_pytorch.CodegenContext.fresh_name": {"tf": 1}, "tensorgrad.functions.graph": {"tf": 1.4142135623730951}, "tensorgrad.functions.max_grad": {"tf": 1}, "tensorgrad.tensor.Tensor.structural_graph": {"tf": 1}, "tensorgrad.tensor.Variable.structural_graph": {"tf": 1}, "tensorgrad.tensor.Rename.structural_graph": {"tf": 1}, "tensorgrad.tensor.Constant.structural_graph": {"tf": 1}, "tensorgrad.tensor.Delta.structural_graph": {"tf": 1}, "tensorgrad.tensor.FunctionSignature": {"tf": 1.4142135623730951}, "tensorgrad.tensor.function": {"tf": 1}, "tensorgrad.tensor.Function.structural_graph": {"tf": 1}, "tensorgrad.tensor.Derivative.structural_graph": {"tf": 1}, "tensorgrad.tensor.Product.structural_graph": {"tf": 1}, "tensorgrad.tensor.Sum.__init__": {"tf": 1}, "tensorgrad.tensor.Sum.structural_graph": {"tf": 1}}, "df": 18}}}, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {"tensorgrad.extras.to_latex.to_latex_indexed": {"tf": 1}}, "df": 1}}}}, "u": {"docs": {}, "df": 0, "m": {"docs": {"tensorgrad.functions.graph": {"tf": 1}, "tensorgrad.functions.diag": {"tf": 1.4142135623730951}}, "df": 2}}}}, "t": {"docs": {}, "df": 0, "h": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {"tensorgrad.extras.to_numpy.CodegenContext.declare_dimension": {"tf": 1}, "tensorgrad.extras.to_pytorch.CodegenContext.declare_dimension": {"tf": 1}}, "df": 2}}}}}, "v": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "l": {"docs": {"tensorgrad.extras.to_numpy.compile_to_callable": {"tf": 1}, "tensorgrad.tensor.FunctionSignature": {"tf": 1}}, "df": 2}}, "e": {"docs": {}, "df": 0, "n": {"docs": {"tensorgrad.tensor.TensorMeta": {"tf": 1.4142135623730951}}, "df": 1, "t": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "y": {"docs": {"tensorgrad.tensor.FunctionSignature": {"tf": 1}}, "df": 1}}}}}}}}}, "n": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "d": {"docs": {"tensorgrad.extras.to_pytorch.CodegenContext": {"tf": 1.4142135623730951}}, "df": 1}}}}}}}}}, "t": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "y": {"docs": {"tensorgrad.extras.to_tikz.to_tikz": {"tf": 1}}, "df": 1}, "o": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "y": {"docs": {"tensorgrad.tensor.FunctionSignature": {"tf": 1.4142135623730951}}, "df": 1}}}}}}, "t": {"docs": {}, "df": 0, "c": {"docs": {"tensorgrad.extras.to_tikz.format_label": {"tf": 1}, "tensorgrad.utils.DisjointSets": {"tf": 1}}, "df": 2}}, "l": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "t": {"docs": {"tensorgrad.functions.graph": {"tf": 1}, "tensorgrad.functions.prod": {"tf": 1}, "tensorgrad.tensor.FunctionSignature": {"tf": 1}}, "df": 3, "w": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "e": {"docs": {"tensorgrad.functions.pow": {"tf": 1}, "tensorgrad.functions.sqrt": {"tf": 1}}, "df": 2}}}}, "s": {"docs": {"tensorgrad.functions.max_grad": {"tf": 1}}, "df": 1}}}}}}, "s": {"docs": {}, "df": 0, "e": {"docs": {"tensorgrad.functions.gt0": {"tf": 1}, "tensorgrad.tensor.Delta": {"tf": 1}, "tensorgrad.utils.KeyStoringDict.get_with_key": {"tf": 1}}, "df": 3, "w": {"docs": {}, "df": 0, "h": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "e": {"docs": {"tensorgrad.functions.gt0": {"tf": 1}}, "df": 1}}}}}}}}, "^": {"docs": {}, "df": 0, "t": {"docs": {"tensorgrad.functions.tanh": {"tf": 1.4142135623730951}}, "df": 1}}}, "o": {"docs": {"tensorgrad.tensor.Ones": {"tf": 1}}, "df": 1, "f": {"docs": {"tensorgrad.extras.expectation.Expectation.__init__": {"tf": 2}, "tensorgrad.extras.expectation.Expectation.structural_graph": {"tf": 1.4142135623730951}, "tensorgrad.extras.to_numpy.CodegenContext": {"tf": 1}, "tensorgrad.extras.to_pytorch.CodegenContext": {"tf": 1.7320508075688772}, "tensorgrad.functions.taylor": {"tf": 1}, "tensorgrad.functions.symmetrize": {"tf": 1}, "tensorgrad.functions.graph": {"tf": 2.23606797749979}, "tensorgrad.functions.prod": {"tf": 1}, "tensorgrad.functions.dot": {"tf": 1.7320508075688772}, "tensorgrad.functions.multi_dot": {"tf": 1}, "tensorgrad.functions.inverse": {"tf": 1}, "tensorgrad.functions.max_grad": {"tf": 1}, "tensorgrad.functions.repeat": {"tf": 1}, "tensorgrad.functions.det": {"tf": 1}, "tensorgrad.tensor.TensorMeta": {"tf": 1}, "tensorgrad.tensor.Tensor.edges": {"tf": 1}, "tensorgrad.tensor.Tensor.order": {"tf": 1}, "tensorgrad.tensor.Tensor.grad": {"tf": 1.7320508075688772}, "tensorgrad.tensor.Tensor.rename": {"tf": 1}, "tensorgrad.tensor.Tensor.simplify": {"tf": 1.4142135623730951}, "tensorgrad.tensor.Tensor.weisfeiler_lehman": {"tf": 1}, "tensorgrad.tensor.Tensor.structural_graph": {"tf": 1.4142135623730951}, "tensorgrad.tensor.Tensor.edge_structural_graph": {"tf": 1.7320508075688772}, "tensorgrad.tensor.Tensor.graph_to_string": {"tf": 1}, "tensorgrad.tensor.Tensor.is_isomorphic": {"tf": 1}, "tensorgrad.tensor.Tensor.symmetries": {"tf": 1.4142135623730951}, "tensorgrad.tensor.Variable.__init__": {"tf": 1.4142135623730951}, "tensorgrad.tensor.Variable.structural_graph": {"tf": 1.4142135623730951}, "tensorgrad.tensor.Rename": {"tf": 1}, "tensorgrad.tensor.Rename.merge_renames": {"tf": 1}, "tensorgrad.tensor.Rename.structural_graph": {"tf": 1.4142135623730951}, "tensorgrad.tensor.Constant.structural_graph": {"tf": 1.4142135623730951}, "tensorgrad.tensor.Delta": {"tf": 1.4142135623730951}, "tensorgrad.tensor.Delta.__init__": {"tf": 1.4142135623730951}, "tensorgrad.tensor.Delta.simplify_outer": {"tf": 1}, "tensorgrad.tensor.Delta.structural_graph": {"tf": 1.4142135623730951}, "tensorgrad.tensor.FunctionSignature": {"tf": 3}, "tensorgrad.tensor.function": {"tf": 1}, "tensorgrad.tensor.Function": {"tf": 1}, "tensorgrad.tensor.Function.__init__": {"tf": 1.4142135623730951}, "tensorgrad.tensor.Function.structural_graph": {"tf": 1.4142135623730951}, "tensorgrad.tensor.Derivative": {"tf": 1}, "tensorgrad.tensor.Derivative.__init__": {"tf": 1}, "tensorgrad.tensor.Derivative.structural_graph": {"tf": 1.4142135623730951}, "tensorgrad.tensor.Product": {"tf": 1}, "tensorgrad.tensor.Product.__init__": {"tf": 1}, "tensorgrad.tensor.Product.merge": {"tf": 1}, "tensorgrad.tensor.Product.components": {"tf": 1}, "tensorgrad.tensor.Product.structural_graph": {"tf": 1.4142135623730951}, "tensorgrad.tensor.Sum": {"tf": 1}, "tensorgrad.tensor.Sum.__init__": {"tf": 1.4142135623730951}, "tensorgrad.tensor.Sum.structural_graph": {"tf": 1.4142135623730951}, "tensorgrad.utils.DisjointSets": {"tf": 1}, "tensorgrad.utils.KeyStoringDict.__init__": {"tf": 1}, "tensorgrad.utils.KeyStoringDict.keys": {"tf": 1}, "tensorgrad.utils.KeyStoringDict.values": {"tf": 1}, "tensorgrad.utils.KeyStoringDict.items": {"tf": 1}, "tensorgrad.utils.KeyStoringDict.copy": {"tf": 1}}, "df": 58, "t": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "n": {"docs": {"tensorgrad.tensor.FunctionSignature": {"tf": 1}}, "df": 1}}}}, "r": {"docs": {"tensorgrad.extras.to_numpy.compile_to_callable": {"tf": 1}, "tensorgrad.extras.to_tikz.TikzGraph.add_edge": {"tf": 1}, "tensorgrad.extras.to_tikz.format_label": {"tf": 1}, "tensorgrad.extras.to_tikz.choose_layout": {"tf": 1}, "tensorgrad.functions.graph": {"tf": 1.7320508075688772}, "tensorgrad.functions.multi_dot": {"tf": 1}, "tensorgrad.tensor.Variable.__init__": {"tf": 1}, "tensorgrad.tensor.Delta": {"tf": 1}, "tensorgrad.tensor.FunctionSignature": {"tf": 1}, "tensorgrad.tensor.function": {"tf": 1}, "tensorgrad.tensor.Function": {"tf": 1}, "tensorgrad.tensor.Function.__init__": {"tf": 1.4142135623730951}, "tensorgrad.utils.KeyStoringDict.get": {"tf": 1}, "tensorgrad.utils.KeyStoringDict.keys": {"tf": 1}, "tensorgrad.utils.KeyStoringDict.values": {"tf": 1}, "tensorgrad.utils.KeyStoringDict.items": {"tf": 1}}, "df": 16, "i": {"docs": {}, "df": 0, "g": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "l": {"docs": {"tensorgrad.extras.expectation.Expectation.__init__": {"tf": 1.7320508075688772}, "tensorgrad.functions.inverse": {"tf": 1.4142135623730951}}, "df": 2}}}}}, "e": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {"tensorgrad.extras.to_tikz.choose_layout": {"tf": 1}}, "df": 1}}}}}}}}}, "d": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {"tensorgrad.extras.to_pytorch.compile_to_callable": {"tf": 1}, "tensorgrad.extras.to_pytorch.permute": {"tf": 1}, "tensorgrad.functions.taylor": {"tf": 1}, "tensorgrad.functions.diag": {"tf": 1}, "tensorgrad.functions.max_grad": {"tf": 1.4142135623730951}, "tensorgrad.tensor.TensorMeta": {"tf": 1}, "tensorgrad.tensor.Delta": {"tf": 2.23606797749979}}, "df": 7, "e": {"docs": {}, "df": 0, "d": {"docs": {"tensorgrad.tensor.Tensor.edges": {"tf": 1}}, "df": 1}}}}}, "b": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "s": {"docs": {"tensorgrad.tensor.Tensor.symmetries": {"tf": 1}}, "df": 1}}}}}, "n": {"docs": {"tensorgrad.extras.expectation.Expectation.depends_on": {"tf": 1}, "tensorgrad.extras.to_tikz.depth_tracking_dispatcher.register": {"tf": 1}, "tensorgrad.extras.to_tikz.TikzGraph.add_node": {"tf": 1}, "tensorgrad.extras.to_tikz.TikzGraph.add_subgraph": {"tf": 1}, "tensorgrad.tensor.Tensor.grad": {"tf": 1}, "tensorgrad.tensor.Tensor.depends_on": {"tf": 1}, "tensorgrad.tensor.Variable.depends_on": {"tf": 1}, "tensorgrad.tensor.Rename.depends_on": {"tf": 1}, "tensorgrad.tensor.Constant.depends_on": {"tf": 1}, "tensorgrad.tensor.Function.depends_on": {"tf": 1}, "tensorgrad.tensor.Derivative.depends_on": {"tf": 1}, "tensorgrad.tensor.Product.depends_on": {"tf": 1}, "tensorgrad.tensor.Sum.depends_on": {"tf": 1}, "tensorgrad.utils.DisjointSets": {"tf": 1.4142135623730951}}, "df": 14, "l": {"docs": {}, "df": 0, "y": {"docs": {"tensorgrad.extras.to_tikz.TikzGraph.handle_free_edges": {"tf": 1}, "tensorgrad.tensor.Tensor.rename": {"tf": 1}, "tensorgrad.utils.KeyStoringDict": {"tf": 1}}, "df": 3}}, "c": {"docs": {}, "df": 0, "e": {"docs": {"tensorgrad.extras.to_tikz.TikzGraph.handle_free_edges": {"tf": 1}}, "df": 1}}, "e": {"docs": {"tensorgrad.tensor.Tensor.grad": {"tf": 1}, "tensorgrad.tensor.Rename.merge_renames": {"tf": 1}, "tensorgrad.tensor.FunctionSignature": {"tf": 1.4142135623730951}, "tensorgrad.tensor.Function": {"tf": 1}, "tensorgrad.tensor.Function.__init__": {"tf": 1}, "tensorgrad.tensor.Product.merge": {"tf": 1}}, "df": 6}}, "p": {"docs": {"tensorgrad.tensor.FunctionSignature": {"tf": 1}}, "df": 1, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "l": {"docs": {"tensorgrad.extras.to_numpy.compile_to_callable": {"tf": 1}, "tensorgrad.tensor.Tensor.grad": {"tf": 1}, "tensorgrad.tensor.Tensor.simplify": {"tf": 1}, "tensorgrad.tensor.Tensor.edge_structural_graph": {"tf": 1}, "tensorgrad.tensor.Tensor.is_isomorphic": {"tf": 1}, "tensorgrad.tensor.Variable.__init__": {"tf": 1}, "tensorgrad.tensor.Constant.__init__": {"tf": 1}}, "df": 7}}}}}}, "e": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {"tensorgrad.tensor.FunctionSignature": {"tf": 1}}, "df": 1, "s": {"docs": {"tensorgrad.functions.graph": {"tf": 1}}, "df": 1}}}}}}}}}, "v": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {"tensorgrad.functions.symmetrize": {"tf": 1}, "tensorgrad.functions.sum": {"tf": 1}, "tensorgrad.functions.dot": {"tf": 1}, "tensorgrad.functions.inverse": {"tf": 2.23606797749979}, "tensorgrad.functions.max_grad": {"tf": 1.4142135623730951}}, "df": 5, "r": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "n": {"docs": {"tensorgrad.tensor.FunctionSignature": {"tf": 1}}, "df": 1}}}, "e": {"docs": {"tensorgrad.tensor.FunctionSignature.simplify": {"tf": 1}}, "df": 1}}}}}}}, "b": {"docs": {}, "df": 0, "j": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "t": {"docs": {"tensorgrad.functions.graph": {"tf": 1.4142135623730951}, "tensorgrad.utils.KeyStoringDict": {"tf": 1}}, "df": 2}}}}}, "u": {"docs": {}, "df": 0, "t": {"docs": {"tensorgrad.tensor.FunctionSignature": {"tf": 3.1622776601683795}, "tensorgrad.tensor.Function": {"tf": 1}, "tensorgrad.tensor.Function.__init__": {"tf": 1}}, "df": 3, "p": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "t": {"docs": {"tensorgrad.functions.inverse": {"tf": 1}, "tensorgrad.functions.Convolution.__init__": {"tf": 1.4142135623730951}, "tensorgrad.tensor.FunctionSignature": {"tf": 2.6457513110645907}, "tensorgrad.tensor.function": {"tf": 1.7320508075688772}, "tensorgrad.tensor.Function": {"tf": 1}, "tensorgrad.tensor.Function.__init__": {"tf": 1.4142135623730951}}, "df": 6}}}, "e": {"docs": {}, "df": 0, "r": {"docs": {"tensorgrad.tensor.Tensor.edge_structural_graph": {"tf": 1}}, "df": 1}}}}, "t": {"docs": {}, "df": 0, "h": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {"tensorgrad.tensor.Tensor.is_isomorphic": {"tf": 1}, "tensorgrad.tensor.Tensor.isomorphisms": {"tf": 2}}, "df": 2, "w": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "e": {"docs": {"tensorgrad.functions.Convolution.__init__": {"tf": 1}, "tensorgrad.tensor.Tensor.is_isomorphic": {"tf": 1}}, "df": 2}}}}, "s": {"docs": {"tensorgrad.functions.Convolution.__init__": {"tf": 1}}, "df": 1}}}}}, "l": {"docs": {}, "df": 0, "d": {"docs": {"tensorgrad.tensor.Tensor.rename": {"tf": 1}, "tensorgrad.tensor.Rename.__init__": {"tf": 1}, "tensorgrad.tensor.FunctionSignature.derivative": {"tf": 1}}, "df": 3, "e": {"docs": {}, "df": 0, "r": {"docs": {"tensorgrad.utils.DisjointSets": {"tf": 1}}, "df": 1}}}}}, "a": {"docs": {"tensorgrad.extras.expectation.Expectation.__init__": {"tf": 2.23606797749979}, "tensorgrad.extras.expectation.Expectation.structural_graph": {"tf": 2}, "tensorgrad.extras.to_numpy.compile_to_callable": {"tf": 1.4142135623730951}, "tensorgrad.extras.to_numpy.CodegenContext.fresh_name": {"tf": 1}, "tensorgrad.extras.to_numpy.CodegenContext.declare_dimension": {"tf": 1.4142135623730951}, "tensorgrad.extras.to_numpy.permute_code": {"tf": 1}, "tensorgrad.extras.to_pytorch.compile_to_callable": {"tf": 1.4142135623730951}, "tensorgrad.extras.to_pytorch.CodegenContext": {"tf": 1.7320508075688772}, "tensorgrad.extras.to_pytorch.CodegenContext.fresh_name": {"tf": 1}, "tensorgrad.extras.to_pytorch.CodegenContext.declare_dimension": {"tf": 1.4142135623730951}, "tensorgrad.extras.to_pytorch.permute": {"tf": 1}, "tensorgrad.extras.to_tikz.NodeRef": {"tf": 1.7320508075688772}, "tensorgrad.extras.to_tikz.depth_tracking_dispatcher.register": {"tf": 1.4142135623730951}, "tensorgrad.extras.to_tikz.TikzGraph.add_node": {"tf": 1}, "tensorgrad.extras.to_tikz.TikzGraph.add_subgraph": {"tf": 1.7320508075688772}, "tensorgrad.extras.to_tikz.TikzGraph.handle_free_edges": {"tf": 1}, "tensorgrad.extras.to_tikz.format_weight": {"tf": 1}, "tensorgrad.extras.to_tikz.format_function": {"tf": 1}, "tensorgrad.functions.graph": {"tf": 4.123105625617661}, "tensorgrad.functions.diag": {"tf": 2.23606797749979}, "tensorgrad.functions.dot": {"tf": 1}, "tensorgrad.functions.inverse": {"tf": 2}, "tensorgrad.functions.sign": {"tf": 2}, "tensorgrad.functions.gt0": {"tf": 1}, "tensorgrad.functions.repeat": {"tf": 1}, "tensorgrad.functions.Convolution": {"tf": 1}, "tensorgrad.functions.Convolution.__init__": {"tf": 1.7320508075688772}, "tensorgrad.functions.Reshape": {"tf": 1}, "tensorgrad.tensor.TensorMeta": {"tf": 1}, "tensorgrad.tensor.Tensor.__init__": {"tf": 1.4142135623730951}, "tensorgrad.tensor.Tensor.rename": {"tf": 1.4142135623730951}, "tensorgrad.tensor.Tensor.simplify": {"tf": 1}, "tensorgrad.tensor.Tensor.structural_graph": {"tf": 2}, "tensorgrad.tensor.Tensor.edge_structural_graph": {"tf": 1.4142135623730951}, "tensorgrad.tensor.Tensor.graph_to_string": {"tf": 1}, "tensorgrad.tensor.Tensor.is_isomorphic": {"tf": 1}, "tensorgrad.tensor.Variable.__init__": {"tf": 1.7320508075688772}, "tensorgrad.tensor.Variable.structural_graph": {"tf": 2}, "tensorgrad.tensor.Rename": {"tf": 1}, "tensorgrad.tensor.Rename.__init__": {"tf": 1.4142135623730951}, "tensorgrad.tensor.Rename.merge_renames": {"tf": 1}, "tensorgrad.tensor.Rename.structural_graph": {"tf": 2}, "tensorgrad.tensor.Constant": {"tf": 1}, "tensorgrad.tensor.Constant.__init__": {"tf": 1}, "tensorgrad.tensor.Constant.structural_graph": {"tf": 2}, "tensorgrad.tensor.Delta.__init__": {"tf": 1}, "tensorgrad.tensor.Delta.simplify_outer": {"tf": 1.4142135623730951}, "tensorgrad.tensor.Delta.structural_graph": {"tf": 2}, "tensorgrad.tensor.FunctionSignature": {"tf": 3.7416573867739413}, "tensorgrad.tensor.FunctionSignature.derivative": {"tf": 1.4142135623730951}, "tensorgrad.tensor.function": {"tf": 2.449489742783178}, "tensorgrad.tensor.Function": {"tf": 2}, "tensorgrad.tensor.Function.__init__": {"tf": 1.4142135623730951}, "tensorgrad.tensor.Function.structural_graph": {"tf": 2}, "tensorgrad.tensor.Derivative": {"tf": 1.4142135623730951}, "tensorgrad.tensor.Derivative.__init__": {"tf": 1.4142135623730951}, "tensorgrad.tensor.Derivative.structural_graph": {"tf": 2}, "tensorgrad.tensor.Product": {"tf": 1}, "tensorgrad.tensor.Product.__init__": {"tf": 1}, "tensorgrad.tensor.Product.merge": {"tf": 1.4142135623730951}, "tensorgrad.tensor.Product.components": {"tf": 1}, "tensorgrad.tensor.Product.structural_graph": {"tf": 2}, "tensorgrad.tensor.Sum": {"tf": 1}, "tensorgrad.tensor.Sum.__init__": {"tf": 1}, "tensorgrad.tensor.Sum.structural_graph": {"tf": 2}, "tensorgrad.utils.DisjointSets": {"tf": 1.4142135623730951}, "tensorgrad.utils.KeyStoringDict": {"tf": 1}, "tensorgrad.utils.KeyStoringDict.keys": {"tf": 1}, "tensorgrad.utils.KeyStoringDict.values": {"tf": 1}, "tensorgrad.utils.KeyStoringDict.items": {"tf": 1}, "tensorgrad.utils.KeyStoringDict.copy": {"tf": 1}}, "df": 71, "s": {"docs": {"tensorgrad.extras.expectation.Expectation.__init__": {"tf": 1.4142135623730951}, "tensorgrad.extras.to_tikz.depth_tracking_dispatcher": {"tf": 1}, "tensorgrad.extras.to_tikz.TikzGraph.add_subgraph": {"tf": 1}, "tensorgrad.extras.to_tikz.TikzGraph.handle_free_edges": {"tf": 1}, "tensorgrad.functions.graph": {"tf": 1}, "tensorgrad.functions.diag": {"tf": 1}, "tensorgrad.functions.inverse": {"tf": 1}, "tensorgrad.tensor.TensorMeta": {"tf": 1.4142135623730951}, "tensorgrad.tensor.Tensor.order": {"tf": 1}, "tensorgrad.tensor.Variable.__init__": {"tf": 1}, "tensorgrad.tensor.Constant.__init__": {"tf": 1}, "tensorgrad.tensor.Delta": {"tf": 1.4142135623730951}, "tensorgrad.tensor.FunctionSignature": {"tf": 1.4142135623730951}, "tensorgrad.utils.DisjointSets": {"tf": 1}}, "df": 14, "s": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "e": {"docs": {"tensorgrad.functions.inverse": {"tf": 1}}, "df": 1, "d": {"docs": {"tensorgrad.extras.expectation.Expectation.__init__": {"tf": 1}, "tensorgrad.tensor.Delta.simplify_outer": {"tf": 1}}, "df": 2}}}}}, "c": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "i": {"docs": {"tensorgrad.tensor.Tensor.graph_to_string": {"tf": 1}}, "df": 1}}}}, "n": {"docs": {"tensorgrad.extras.to_numpy.compile_to_callable": {"tf": 1}, "tensorgrad.extras.to_numpy.CodegenContext.declare_dimension": {"tf": 1}, "tensorgrad.extras.to_pytorch.CodegenContext.declare_dimension": {"tf": 1}, "tensorgrad.extras.to_tikz.NodeRef": {"tf": 1}, "tensorgrad.extras.to_tikz.TikzGraph.add_edge": {"tf": 1}, "tensorgrad.extras.to_tikz.TikzGraph.handle_free_edges": {"tf": 1.4142135623730951}, "tensorgrad.functions.graph": {"tf": 1}, "tensorgrad.functions.max_grad": {"tf": 1.4142135623730951}, "tensorgrad.functions.Convolution": {"tf": 1}, "tensorgrad.tensor.TensorMeta": {"tf": 1.4142135623730951}, "tensorgrad.tensor.Tensor.edges": {"tf": 1}, "tensorgrad.tensor.Tensor.edge_structural_graph": {"tf": 1}, "tensorgrad.tensor.Tensor.graph_to_string": {"tf": 1}, "tensorgrad.tensor.Rename": {"tf": 1}, "tensorgrad.tensor.Constant": {"tf": 1}, "tensorgrad.tensor.FunctionSignature": {"tf": 1.4142135623730951}, "tensorgrad.tensor.Function.__init__": {"tf": 1}, "tensorgrad.tensor.Product.__init__": {"tf": 1}}, "df": 18, "d": {"docs": {"tensorgrad.extras.expectation.Expectation.__init__": {"tf": 1}, "tensorgrad.extras.to_numpy.compile_to_callable": {"tf": 1}, "tensorgrad.extras.to_numpy.CodegenContext": {"tf": 1}, "tensorgrad.extras.to_pytorch.compile_to_callable": {"tf": 1}, "tensorgrad.extras.to_pytorch.CodegenContext.declare_dimension": {"tf": 1}, "tensorgrad.extras.to_tikz.depth_tracking_dispatcher": {"tf": 1}, "tensorgrad.extras.to_tikz.TikzGraph.add_subgraph": {"tf": 1}, "tensorgrad.extras.to_tikz.format_label": {"tf": 1}, "tensorgrad.functions.graph": {"tf": 1.4142135623730951}, "tensorgrad.functions.diag": {"tf": 1}, "tensorgrad.functions.dot": {"tf": 1}, "tensorgrad.functions.inverse": {"tf": 1.4142135623730951}, "tensorgrad.functions.gt": {"tf": 1}, "tensorgrad.functions.Convolution.__init__": {"tf": 2}, "tensorgrad.tensor.TensorMeta": {"tf": 1.7320508075688772}, "tensorgrad.tensor.Tensor.edge_structural_graph": {"tf": 1}, "tensorgrad.tensor.Tensor.isomorphisms": {"tf": 1}, "tensorgrad.tensor.Rename": {"tf": 1}, "tensorgrad.tensor.FunctionSignature": {"tf": 3.605551275463989}, "tensorgrad.tensor.FunctionSignature.derivative": {"tf": 1}, "tensorgrad.tensor.function": {"tf": 1}, "tensorgrad.tensor.Function.__init__": {"tf": 1.4142135623730951}, "tensorgrad.utils.DisjointSets": {"tf": 1}}, "df": 23}, "y": {"docs": {"tensorgrad.extras.to_tikz.NodeRef": {"tf": 1}, "tensorgrad.extras.to_tikz.TikzGraph.add_edge": {"tf": 1}, "tensorgrad.utils.KeyStoringDict.__init__": {"tf": 1}}, "df": 3}, "o": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "h": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {"tensorgrad.tensor.Tensor.is_isomorphic": {"tf": 1}, "tensorgrad.tensor.Derivative": {"tf": 1}, "tensorgrad.tensor.Derivative.__init__": {"tf": 1}, "tensorgrad.utils.KeyStoringDict.update": {"tf": 1}}, "df": 4}}}}}}, "r": {"docs": {}, "df": 0, "g": {"docs": {}, "df": 0, "s": {"docs": {"tensorgrad.extras.expectation.Expectation.__init__": {"tf": 1}, "tensorgrad.extras.to_pytorch.compile_to_callable": {"tf": 1.4142135623730951}, "tensorgrad.tensor.Tensor.grad": {"tf": 1}, "tensorgrad.tensor.Tensor.rename": {"tf": 1}, "tensorgrad.tensor.Tensor.simplify": {"tf": 1.4142135623730951}, "tensorgrad.tensor.Tensor.edge_structural_graph": {"tf": 1}, "tensorgrad.tensor.Tensor.is_isomorphic": {"tf": 1}, "tensorgrad.tensor.Tensor.isomorphisms": {"tf": 1}, "tensorgrad.tensor.Variable.__init__": {"tf": 1}, "tensorgrad.tensor.Rename.__init__": {"tf": 1}, "tensorgrad.tensor.Rename.merge_renames": {"tf": 1}, "tensorgrad.tensor.Constant.__init__": {"tf": 1}, "tensorgrad.tensor.Delta.__init__": {"tf": 1}, "tensorgrad.tensor.function": {"tf": 1}, "tensorgrad.tensor.Function.__init__": {"tf": 1}, "tensorgrad.tensor.Derivative.__init__": {"tf": 1}, "tensorgrad.tensor.Product.__init__": {"tf": 1}, "tensorgrad.tensor.Product.merge": {"tf": 1}, "tensorgrad.tensor.Sum.__init__": {"tf": 1}}, "df": 19}, "u": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "t": {"docs": {"tensorgrad.functions.Convolution.__init__": {"tf": 1}, "tensorgrad.tensor.Tensor.__init__": {"tf": 1}}, "df": 2, "s": {"docs": {"tensorgrad.extras.to_pytorch.compile_to_callable": {"tf": 1}, "tensorgrad.functions.graph": {"tf": 1}, "tensorgrad.tensor.Tensor.simplify": {"tf": 1}, "tensorgrad.tensor.Variable.__init__": {"tf": 1}}, "df": 4}}}}}}}, "r": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "y": {"docs": {}, "df": 0, "s": {"docs": {"tensorgrad.extras.to_numpy.compile_to_callable": {"tf": 1}}, "df": 1}}}}, "e": {"docs": {"tensorgrad.extras.to_pytorch.compile_to_callable": {"tf": 1}, "tensorgrad.functions.graph": {"tf": 2.449489742783178}, "tensorgrad.functions.Convolution.__init__": {"tf": 1}, "tensorgrad.tensor.Tensor.edge_structural_graph": {"tf": 1}, "tensorgrad.tensor.Tensor.is_isomorphic": {"tf": 1}, "tensorgrad.tensor.Delta": {"tf": 1.4142135623730951}, "tensorgrad.tensor.FunctionSignature": {"tf": 1.4142135623730951}, "tensorgrad.tensor.FunctionSignature.derivative": {"tf": 1}, "tensorgrad.tensor.Product.merge": {"tf": 1}, "tensorgrad.tensor.Sum.__init__": {"tf": 1}}, "df": 10}, "b": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "y": {"docs": {"tensorgrad.tensor.Rename.merge_renames": {"tf": 1}}, "df": 1}}}}}}}}, "b": {"docs": {"tensorgrad.extras.to_latex.to_latex_index_free": {"tf": 1}}, "df": 1, "s": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "t": {"docs": {"tensorgrad.functions.Convolution": {"tf": 1}, "tensorgrad.tensor.TensorMeta": {"tf": 1}, "tensorgrad.tensor.Constant": {"tf": 1}, "tensorgrad.tensor.FunctionSignature": {"tf": 1}, "tensorgrad.utils.DisjointSets": {"tf": 1}}, "df": 5}}}}}}, "c": {"docs": {"tensorgrad.tensor.TensorMeta": {"tf": 2.23606797749979}}, "df": 1, "s": {"docs": {"tensorgrad.tensor.TensorMeta": {"tf": 1.4142135623730951}}, "df": 1}}}, "l": {"docs": {}, "df": 0, "l": {"docs": {"tensorgrad.extras.to_numpy.compile_to_callable": {"tf": 1}, "tensorgrad.functions.symmetrize": {"tf": 1}, "tensorgrad.functions.diag": {"tf": 1}, "tensorgrad.tensor.Tensor.grad": {"tf": 1}, "tensorgrad.tensor.Tensor.isomorphisms": {"tf": 1}, "tensorgrad.tensor.Zero": {"tf": 1}, "tensorgrad.tensor.Ones": {"tf": 1}, "tensorgrad.tensor.FunctionSignature": {"tf": 1}, "tensorgrad.tensor.Sum.__init__": {"tf": 1}}, "df": 9, "o": {"docs": {}, "df": 0, "w": {"docs": {}, "df": 0, "s": {"docs": {"tensorgrad.functions.graph": {"tf": 1}}, "df": 1}}}}, "r": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "y": {"docs": {"tensorgrad.extras.to_tikz.TikzGraph.add_subgraph": {"tf": 1.4142135623730951}}, "df": 1}}}}}, "s": {"docs": {}, "df": 0, "o": {"docs": {"tensorgrad.extras.to_tikz.format_label": {"tf": 1}, "tensorgrad.tensor.TensorMeta": {"tf": 1}, "tensorgrad.utils.KeyStoringDict": {"tf": 1}}, "df": 3}}, "o": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {"tensorgrad.functions.dot": {"tf": 1}, "tensorgrad.functions.max": {"tf": 1}, "tensorgrad.functions.concat": {"tf": 1}, "tensorgrad.functions.repeat": {"tf": 1}}, "df": 4}}}, "t": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "v": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "y": {"docs": {"tensorgrad.tensor.Delta": {"tf": 1}}, "df": 1}}}}}}}}}}}}, "d": {"docs": {}, "df": 0, "d": {"docs": {"tensorgrad.extras.to_tikz.TikzGraph.add_node": {"tf": 1}, "tensorgrad.extras.to_tikz.TikzGraph.add_edge": {"tf": 1}, "tensorgrad.extras.to_tikz.TikzGraph.add_subgraph": {"tf": 1}, "tensorgrad.tensor.Sum.__init__": {"tf": 1}}, "df": 4, "e": {"docs": {}, "df": 0, "d": {"docs": {"tensorgrad.extras.to_tikz.TikzGraph.add_subgraph": {"tf": 1}}, "df": 1}}, "s": {"docs": {}, "df": 0, "/": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "v": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "w": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "s": {"docs": {"tensorgrad.utils.KeyStoringDict.update": {"tf": 1}}, "df": 1}}}}}}}}}}}}}}, "t": {"docs": {"tensorgrad.extras.to_tikz.TikzGraph.add_subgraph": {"tf": 1}, "tensorgrad.functions.taylor": {"tf": 1}}, "df": 2, "t": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "t": {"docs": {"tensorgrad.extras.to_tikz.format_label": {"tf": 1}}, "df": 1}}}, "n": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {"tensorgrad.tensor.FunctionSignature": {"tf": 2}}, "df": 1, "s": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "g": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "e": {"docs": {"tensorgrad.tensor.FunctionSignature": {"tf": 1}}, "df": 1}}}}}}}}}}}}}}}, "r": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "b": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "s": {"docs": {"tensorgrad.tensor.Function": {"tf": 1}}, "df": 1}}}}}}}}}, "p": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "r": {"docs": {"tensorgrad.extras.to_tikz.TikzGraph.add_subgraph": {"tf": 1}}, "df": 1}}}, "r": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "x": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {"tensorgrad.functions.taylor": {"tf": 1}}, "df": 1}}}}}}}}}}, "l": {"docs": {}, "df": 0, "y": {"docs": {"tensorgrad.tensor.Tensor.simplify": {"tf": 1}, "tensorgrad.tensor.FunctionSignature": {"tf": 1}}, "df": 2}, "i": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "s": {"docs": {"tensorgrad.tensor.Tensor.full_simplify": {"tf": 1}}, "df": 1}, "d": {"docs": {"tensorgrad.tensor.Function": {"tf": 1}}, "df": 1}}}}}}, "c": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "l": {"docs": {"tensorgrad.functions.graph": {"tf": 1}, "tensorgrad.utils.KeyStoringDict": {"tf": 1}}, "df": 2}}}, "s": {"docs": {"tensorgrad.tensor.TensorMeta": {"tf": 1}}, "df": 1}}, "c": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {"tensorgrad.tensor.Tensor.rename": {"tf": 1}, "tensorgrad.tensor.FunctionSignature.derivative": {"tf": 1}}, "df": 2}}}}}}, "e": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "t": {"docs": {"tensorgrad.utils.KeyStoringDict.__init__": {"tf": 1}}, "df": 1}}}}}, "u": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "y": {"docs": {"tensorgrad.functions.graph": {"tf": 1}}, "df": 1}}}}}}}}, "o": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "h": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "m": {"docs": {"tensorgrad.tensor.Tensor.symmetries": {"tf": 1}}, "df": 1}}}}}}}}}}}, "v": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "d": {"docs": {"tensorgrad.tensor.Tensor.rename": {"tf": 1}}, "df": 1}}}}, "m": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {"tensorgrad.tensor.FunctionSignature": {"tf": 1}}, "df": 1}}}}, "f": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {"tensorgrad.utils.DisjointSets": {"tf": 1.4142135623730951}}, "df": 1}}}}}, "w": {"0": {"docs": {"tensorgrad.extras.to_numpy.compile_to_callable": {"tf": 1}, "tensorgrad.extras.to_pytorch.compile_to_callable": {"tf": 1}}, "df": 2}, "docs": {"tensorgrad.tensor.FunctionSignature": {"tf": 2.449489742783178}}, "df": 1, "i": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "h": {"docs": {"tensorgrad.extras.expectation.Expectation.__init__": {"tf": 1.7320508075688772}, "tensorgrad.extras.expectation.Expectation.structural_graph": {"tf": 1.4142135623730951}, "tensorgrad.extras.to_numpy.compile_to_callable": {"tf": 1}, "tensorgrad.extras.to_numpy.CodegenContext.declare_dimension": {"tf": 1}, "tensorgrad.functions.graph": {"tf": 1.4142135623730951}, "tensorgrad.functions.diag": {"tf": 1.4142135623730951}, "tensorgrad.functions.inverse": {"tf": 1.4142135623730951}, "tensorgrad.functions.Convolution.__init__": {"tf": 1}, "tensorgrad.functions.Reshape": {"tf": 1}, "tensorgrad.tensor.Tensor.grad": {"tf": 1.4142135623730951}, "tensorgrad.tensor.Tensor.rename": {"tf": 1.4142135623730951}, "tensorgrad.tensor.Tensor.structural_graph": {"tf": 1.4142135623730951}, "tensorgrad.tensor.Tensor.edge_structural_graph": {"tf": 1}, "tensorgrad.tensor.Tensor.is_isomorphic": {"tf": 1}, "tensorgrad.tensor.Variable.structural_graph": {"tf": 1.4142135623730951}, "tensorgrad.tensor.Rename.structural_graph": {"tf": 1.4142135623730951}, "tensorgrad.tensor.Constant.__init__": {"tf": 1}, "tensorgrad.tensor.Constant.structural_graph": {"tf": 1.4142135623730951}, "tensorgrad.tensor.Delta.structural_graph": {"tf": 1.4142135623730951}, "tensorgrad.tensor.FunctionSignature": {"tf": 2}, "tensorgrad.tensor.FunctionSignature.derivative": {"tf": 1}, "tensorgrad.tensor.function": {"tf": 1}, "tensorgrad.tensor.Function.structural_graph": {"tf": 1.4142135623730951}, "tensorgrad.tensor.Derivative": {"tf": 1}, "tensorgrad.tensor.Derivative.__init__": {"tf": 1}, "tensorgrad.tensor.Derivative.structural_graph": {"tf": 1.4142135623730951}, "tensorgrad.tensor.Product.structural_graph": {"tf": 1.4142135623730951}, "tensorgrad.tensor.Sum.structural_graph": {"tf": 1.4142135623730951}, "tensorgrad.utils.KeyStoringDict": {"tf": 1}}, "df": 29, "o": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "t": {"docs": {"tensorgrad.tensor.Rename": {"tf": 1}}, "df": 1}}}}}, "l": {"docs": {}, "df": 0, "l": {"docs": {"tensorgrad.extras.to_numpy.compile_to_callable": {"tf": 1}, "tensorgrad.extras.to_pytorch.compile_to_callable": {"tf": 1}, "tensorgrad.functions.Convolution.__init__": {"tf": 1}, "tensorgrad.tensor.TensorMeta": {"tf": 1.4142135623730951}, "tensorgrad.tensor.Tensor.grad": {"tf": 1}, "tensorgrad.tensor.Derivative.__init__": {"tf": 1}}, "df": 6}}, "s": {"docs": {}, "df": 0, "e": {"docs": {"tensorgrad.functions.graph": {"tf": 1}, "tensorgrad.functions.prod": {"tf": 1}}, "df": 2}}, "n": {"docs": {"tensorgrad.functions.Convolution.__init__": {"tf": 2.23606797749979}}, "df": 1}}, "e": {"docs": {"tensorgrad.extras.to_tikz.NodeRef": {"tf": 1}, "tensorgrad.extras.to_tikz.TikzGraph.add_node": {"tf": 1}, "tensorgrad.extras.to_tikz.TikzGraph.add_edge": {"tf": 1.4142135623730951}, "tensorgrad.extras.to_tikz.TikzGraph.add_subgraph": {"tf": 1.7320508075688772}, "tensorgrad.extras.to_tikz.TikzGraph.handle_free_edges": {"tf": 1}, "tensorgrad.functions.inverse": {"tf": 1.4142135623730951}, "tensorgrad.functions.Convolution.__init__": {"tf": 1.4142135623730951}, "tensorgrad.tensor.FunctionSignature": {"tf": 3}, "tensorgrad.utils.KeyStoringDict": {"tf": 1}}, "df": 9, "l": {"docs": {}, "df": 0, "l": {"docs": {"tensorgrad.extras.expectation.Expectation.__init__": {"tf": 1}}, "df": 1}}, "i": {"docs": {}, "df": 0, "g": {"docs": {}, "df": 0, "h": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "s": {"docs": {"tensorgrad.extras.to_tikz.format_weight": {"tf": 1}, "tensorgrad.extras.to_tikz.format_function": {"tf": 1}, "tensorgrad.tensor.Sum.__init__": {"tf": 1.7320508075688772}}, "df": 3}, "e": {"docs": {}, "df": 0, "d": {"docs": {"tensorgrad.tensor.Sum": {"tf": 1}, "tensorgrad.tensor.Sum.__init__": {"tf": 1}}, "df": 2}}}}}}}, "r": {"docs": {}, "df": 0, "t": {"docs": {"tensorgrad.extras.expectation.Expectation.__init__": {"tf": 1.7320508075688772}}, "df": 1}, "a": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {"tensorgrad.extras.to_tikz.depth_tracking_dispatcher": {"tf": 1}, "tensorgrad.tensor.Tensor.__init__": {"tf": 1}}, "df": 2}}}}}}}, "h": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "h": {"docs": {"tensorgrad.extras.expectation.Expectation.__init__": {"tf": 1}, "tensorgrad.extras.expectation.Expectation.structural_graph": {"tf": 1}, "tensorgrad.functions.graph": {"tf": 1}, "tensorgrad.tensor.Tensor.structural_graph": {"tf": 1}, "tensorgrad.tensor.Variable.structural_graph": {"tf": 1}, "tensorgrad.tensor.Rename.structural_graph": {"tf": 1}, "tensorgrad.tensor.Constant.structural_graph": {"tf": 1}, "tensorgrad.tensor.Delta.structural_graph": {"tf": 1}, "tensorgrad.tensor.Function.structural_graph": {"tf": 1}, "tensorgrad.tensor.Derivative.__init__": {"tf": 1}, "tensorgrad.tensor.Derivative.structural_graph": {"tf": 1}, "tensorgrad.tensor.Product.structural_graph": {"tf": 1}, "tensorgrad.tensor.Sum.structural_graph": {"tf": 1}}, "df": 13}}, "l": {"docs": {}, "df": 0, "e": {"docs": {"tensorgrad.tensor.FunctionSignature": {"tf": 1}}, "df": 1}}}, "e": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "e": {"docs": {"tensorgrad.extras.to_numpy.compile_to_callable": {"tf": 1}, "tensorgrad.extras.to_pytorch.compile_to_callable": {"tf": 1}, "tensorgrad.functions.sign": {"tf": 1.7320508075688772}, "tensorgrad.functions.gt0": {"tf": 1}, "tensorgrad.functions.gt": {"tf": 1.7320508075688772}, "tensorgrad.tensor.Tensor.edge_structural_graph": {"tf": 1}, "tensorgrad.tensor.Delta": {"tf": 1.4142135623730951}, "tensorgrad.tensor.FunctionSignature": {"tf": 1}, "tensorgrad.tensor.FunctionSignature.derivative": {"tf": 1}, "tensorgrad.tensor.function": {"tf": 1}}, "df": 10}}, "n": {"docs": {"tensorgrad.functions.graph": {"tf": 1}, "tensorgrad.utils.DisjointSets": {"tf": 1}}, "df": 2}, "t": {"docs": {}, "df": 0, "h": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {"tensorgrad.tensor.Tensor.is_isomorphic": {"tf": 1.4142135623730951}}, "df": 1}}}}}}, "a": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "t": {"docs": {"tensorgrad.extras.to_tikz.TikzGraph.add_subgraph": {"tf": 1}, "tensorgrad.tensor.Tensor.grad": {"tf": 1}, "tensorgrad.tensor.FunctionSignature": {"tf": 1}}, "df": 3}}, "y": {"docs": {"tensorgrad.functions.graph": {"tf": 1}, "tensorgrad.tensor.Tensor.grad": {"tf": 1}}, "df": 2}}, "o": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "d": {"docs": {"tensorgrad.functions.inverse": {"tf": 1}, "tensorgrad.functions.Convolution.__init__": {"tf": 1.4142135623730951}}, "df": 2}}, "t": {"docs": {"tensorgrad.functions.Convolution.__init__": {"tf": 2.23606797749979}}, "df": 1}}, "n": {"docs": {"tensorgrad.tensor.TensorMeta": {"tf": 1}}, "df": 1}}, "l": {"docs": {"tensorgrad.tensor.Tensor.weisfeiler_lehman": {"tf": 1}}, "df": 1}}, "r": {"docs": {}, "df": 0, "e": {"docs": {"tensorgrad.extras.to_tikz.TikzGraph.add_subgraph": {"tf": 1}}, "df": 1, "s": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "t": {"docs": {"tensorgrad.extras.expectation.Expectation.__init__": {"tf": 1.4142135623730951}, "tensorgrad.tensor.Tensor.grad": {"tf": 1.4142135623730951}, "tensorgrad.tensor.FunctionSignature.derivative": {"tf": 1}, "tensorgrad.tensor.Derivative": {"tf": 1}, "tensorgrad.tensor.Derivative.__init__": {"tf": 1}}, "df": 5}}}}, "u": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "t": {"docs": {"tensorgrad.extras.to_numpy.compile_to_callable": {"tf": 1}, "tensorgrad.extras.to_pytorch.compile_to_callable": {"tf": 1}, "tensorgrad.functions.graph": {"tf": 2}}, "df": 3}}}, "t": {"docs": {"tensorgrad.functions.inverse": {"tf": 1}}, "df": 1}, "o": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {"tensorgrad.tensor.TensorMeta": {"tf": 1}}, "df": 1}}}}}}}}, "p": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "t": {"docs": {"tensorgrad.extras.to_tikz.TikzGraph.handle_free_edges": {"tf": 1}, "tensorgrad.functions.Convolution.__init__": {"tf": 1}, "tensorgrad.tensor.FunctionSignature": {"tf": 1.4142135623730951}}, "df": 3, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {"tensorgrad.extras.expectation.Expectation.structural_graph": {"tf": 1}, "tensorgrad.tensor.Tensor.structural_graph": {"tf": 1}, "tensorgrad.tensor.Tensor.graph_to_string": {"tf": 1}, "tensorgrad.tensor.Variable.structural_graph": {"tf": 1}, "tensorgrad.tensor.Rename.structural_graph": {"tf": 1}, "tensorgrad.tensor.Constant.structural_graph": {"tf": 1}, "tensorgrad.tensor.Delta.structural_graph": {"tf": 1}, "tensorgrad.tensor.Function.structural_graph": {"tf": 1}, "tensorgrad.tensor.Derivative.structural_graph": {"tf": 1}, "tensorgrad.tensor.Product.structural_graph": {"tf": 1}, "tensorgrad.tensor.Sum.structural_graph": {"tf": 1}}, "df": 11}}}}}, "s": {"docs": {"tensorgrad.functions.graph": {"tf": 1}, "tensorgrad.functions.Convolution": {"tf": 1}, "tensorgrad.tensor.Constant": {"tf": 1}, "tensorgrad.tensor.FunctionSignature.derivative": {"tf": 1}, "tensorgrad.tensor.Function": {"tf": 1}}, "df": 5}, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {"tensorgrad.functions.graph": {"tf": 1.4142135623730951}, "tensorgrad.tensor.Tensor.grad": {"tf": 1}, "tensorgrad.tensor.Rename.merge_renames": {"tf": 1}, "tensorgrad.tensor.FunctionSignature": {"tf": 1}, "tensorgrad.tensor.Derivative": {"tf": 1}, "tensorgrad.tensor.Derivative.__init__": {"tf": 1}, "tensorgrad.tensor.Product": {"tf": 1}, "tensorgrad.tensor.Product.components": {"tf": 1}}, "df": 8}}}, "e": {"docs": {}, "df": 0, "d": {"docs": {"tensorgrad.functions.graph": {"tf": 1.4142135623730951}}, "df": 1}}}}}}}}, "e": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {"tensorgrad.functions.repeat": {"tf": 1.4142135623730951}}, "df": 1}}}}, "t": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "n": {"docs": {"tensorgrad.extras.to_numpy.compile_to_callable": {"tf": 1}, "tensorgrad.extras.to_numpy.CodegenContext.declare_dimension": {"tf": 1}, "tensorgrad.extras.to_numpy.permute_code": {"tf": 1}, "tensorgrad.extras.to_pytorch.compile_to_callable": {"tf": 1}, "tensorgrad.extras.to_pytorch.CodegenContext.declare_dimension": {"tf": 1}, "tensorgrad.extras.to_pytorch.permute": {"tf": 1}, "tensorgrad.functions.taylor": {"tf": 1}, "tensorgrad.functions.max": {"tf": 1}, "tensorgrad.tensor.Tensor.symmetries": {"tf": 1}, "tensorgrad.utils.DisjointSets": {"tf": 1.4142135623730951}, "tensorgrad.utils.KeyStoringDict": {"tf": 1}, "tensorgrad.utils.KeyStoringDict.get_with_key": {"tf": 1.4142135623730951}, "tensorgrad.utils.KeyStoringDict.keys": {"tf": 1}, "tensorgrad.utils.KeyStoringDict.values": {"tf": 1}, "tensorgrad.utils.KeyStoringDict.items": {"tf": 1}, "tensorgrad.utils.KeyStoringDict.copy": {"tf": 1}}, "df": 16, "s": {"docs": {"tensorgrad.extras.expectation.Expectation.structural_graph": {"tf": 1}, "tensorgrad.functions.graph": {"tf": 1}, "tensorgrad.functions.sign": {"tf": 1}, "tensorgrad.functions.gt0": {"tf": 1}, "tensorgrad.functions.gt": {"tf": 1}, "tensorgrad.tensor.Tensor.edges": {"tf": 1}, "tensorgrad.tensor.Tensor.grad": {"tf": 1}, "tensorgrad.tensor.Tensor.rename": {"tf": 1}, "tensorgrad.tensor.Tensor.simplify": {"tf": 1}, "tensorgrad.tensor.Tensor.structural_graph": {"tf": 1}, "tensorgrad.tensor.Tensor.edge_structural_graph": {"tf": 1}, "tensorgrad.tensor.Tensor.graph_to_string": {"tf": 1.4142135623730951}, "tensorgrad.tensor.Tensor.is_isomorphic": {"tf": 1}, "tensorgrad.tensor.Variable.structural_graph": {"tf": 1}, "tensorgrad.tensor.Rename.merge_renames": {"tf": 1}, "tensorgrad.tensor.Rename.structural_graph": {"tf": 1}, "tensorgrad.tensor.Constant.structural_graph": {"tf": 1}, "tensorgrad.tensor.Delta.structural_graph": {"tf": 1}, "tensorgrad.tensor.FunctionSignature.derivative": {"tf": 1}, "tensorgrad.tensor.FunctionSignature.simplify": {"tf": 1}, "tensorgrad.tensor.function": {"tf": 1}, "tensorgrad.tensor.Function.structural_graph": {"tf": 1}, "tensorgrad.tensor.Derivative.structural_graph": {"tf": 1}, "tensorgrad.tensor.Product.merge": {"tf": 1}, "tensorgrad.tensor.Product.components": {"tf": 1}, "tensorgrad.tensor.Product.structural_graph": {"tf": 1}, "tensorgrad.tensor.Sum.structural_graph": {"tf": 1}}, "df": 27}, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {"tensorgrad.extras.to_numpy.compile_to_callable": {"tf": 1}, "tensorgrad.utils.KeyStoringDict.get": {"tf": 1}}, "df": 2}}}}}}, "r": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "v": {"docs": {}, "df": 0, "e": {"docs": {"tensorgrad.utils.KeyStoringDict": {"tf": 1}}, "df": 1}}}}}}, "o": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {"tensorgrad.extras.to_numpy.permute_code": {"tf": 1}}, "df": 1}}}}}, "c": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "d": {"docs": {"tensorgrad.extras.to_pytorch.CodegenContext.declare_dimension": {"tf": 1}}, "df": 1}}}}, "g": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {"tensorgrad.extras.to_tikz.depth_tracking_dispatcher.register": {"tf": 1}, "tensorgrad.tensor.TensorMeta": {"tf": 1}}, "df": 2, "s": {"docs": {"tensorgrad.extras.to_tikz.depth_tracking_dispatcher.register": {"tf": 1}}, "df": 1}, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {"tensorgrad.tensor.TensorMeta": {"tf": 1.7320508075688772}}, "df": 1}}}}}}}}}, "l": {"docs": {}, "df": 0, "y": {"docs": {"tensorgrad.extras.to_tikz.TikzGraph.add_node": {"tf": 1}, "tensorgrad.extras.to_tikz.TikzGraph.add_subgraph": {"tf": 1}}, "df": 2}}, "f": {"docs": {"tensorgrad.extras.to_tikz.TikzGraph.add_node": {"tf": 1}}, "df": 1}, "m": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {"tensorgrad.functions.dot": {"tf": 1}, "tensorgrad.functions.inverse": {"tf": 1}}, "df": 2}}}}}}, "o": {"docs": {}, "df": 0, "v": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {"tensorgrad.utils.KeyStoringDict.pop": {"tf": 1}}, "df": 1}}}}}}, "n": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "e": {"docs": {"tensorgrad.tensor.Tensor.rename": {"tf": 1}, "tensorgrad.tensor.Tensor.simplify": {"tf": 1}, "tensorgrad.tensor.Rename.__init__": {"tf": 1.4142135623730951}}, "df": 3, "d": {"docs": {"tensorgrad.tensor.Tensor.rename": {"tf": 1.7320508075688772}, "tensorgrad.tensor.Rename.__init__": {"tf": 1}}, "df": 2}, "s": {"docs": {"tensorgrad.tensor.Rename": {"tf": 1}, "tensorgrad.tensor.Rename.merge_renames": {"tf": 1}}, "df": 2}}, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {"tensorgrad.tensor.Tensor.is_isomorphic": {"tf": 1}, "tensorgrad.tensor.Rename.merge_renames": {"tf": 1.7320508075688772}, "tensorgrad.tensor.Derivative.__init__": {"tf": 1}, "tensorgrad.tensor.Product.merge": {"tf": 1}}, "df": 4, "s": {"docs": {"tensorgrad.tensor.Tensor.isomorphisms": {"tf": 1}}, "df": 1}}}}}}}, "q": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "e": {"docs": {"tensorgrad.tensor.Tensor.is_isomorphic": {"tf": 1}}, "df": 1, "d": {"docs": {"tensorgrad.tensor.FunctionSignature": {"tf": 1.4142135623730951}, "tensorgrad.tensor.function": {"tf": 1}}, "df": 2}}}}}}}, "o": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "t": {"docs": {"tensorgrad.extras.expectation.Expectation.structural_graph": {"tf": 1}, "tensorgrad.tensor.Tensor.structural_graph": {"tf": 1}, "tensorgrad.tensor.Variable.structural_graph": {"tf": 1}, "tensorgrad.tensor.Rename.structural_graph": {"tf": 1}, "tensorgrad.tensor.Constant.structural_graph": {"tf": 1}, "tensorgrad.tensor.Delta.structural_graph": {"tf": 1}, "tensorgrad.tensor.Function.structural_graph": {"tf": 1}, "tensorgrad.tensor.Derivative.structural_graph": {"tf": 1}, "tensorgrad.tensor.Product.structural_graph": {"tf": 1}, "tensorgrad.tensor.Sum.structural_graph": {"tf": 1}}, "df": 10}}}, "a": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "e": {"docs": {"tensorgrad.extras.to_latex.to_latex_indexed": {"tf": 1}, "tensorgrad.utils.KeyStoringDict.pop": {"tf": 1}}, "df": 2, "s": {"docs": {"tensorgrad.functions.graph": {"tf": 1}}, "df": 1}}}}}, "u": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "s": {"docs": {"tensorgrad.tensor.Tensor.simplify": {"tf": 1}, "tensorgrad.tensor.Tensor.full_simplify": {"tf": 1}}, "df": 2}}}}}, "v": {"docs": {"tensorgrad.tensor.FunctionSignature": {"tf": 1.4142135623730951}}, "df": 1, "a": {"docs": {}, "df": 0, "r": {"docs": {"tensorgrad.extras.to_numpy.compile_to_callable": {"tf": 1.4142135623730951}, "tensorgrad.extras.to_pytorch.compile_to_callable": {"tf": 1.4142135623730951}, "tensorgrad.extras.to_pytorch.CodegenContext": {"tf": 1}}, "df": 3, "i": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "b": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "e": {"docs": {"tensorgrad.extras.expectation.Expectation.__init__": {"tf": 1.7320508075688772}, "tensorgrad.extras.expectation.Expectation.depends_on": {"tf": 1}, "tensorgrad.extras.to_numpy.compile_to_callable": {"tf": 1}, "tensorgrad.extras.to_numpy.CodegenContext.fresh_name": {"tf": 1}, "tensorgrad.extras.to_pytorch.compile_to_callable": {"tf": 1}, "tensorgrad.extras.to_pytorch.CodegenContext.fresh_name": {"tf": 1}, "tensorgrad.functions.graph": {"tf": 2.449489742783178}, "tensorgrad.functions.Convolution": {"tf": 1}, "tensorgrad.tensor.Tensor.grad": {"tf": 1.4142135623730951}, "tensorgrad.tensor.Tensor.depends_on": {"tf": 1}, "tensorgrad.tensor.Variable.__init__": {"tf": 1.4142135623730951}, "tensorgrad.tensor.Variable.depends_on": {"tf": 1}, "tensorgrad.tensor.Rename.depends_on": {"tf": 1}, "tensorgrad.tensor.Constant": {"tf": 1}, "tensorgrad.tensor.Constant.depends_on": {"tf": 1}, "tensorgrad.tensor.Function.depends_on": {"tf": 1}, "tensorgrad.tensor.Derivative": {"tf": 1}, "tensorgrad.tensor.Derivative.__init__": {"tf": 1}, "tensorgrad.tensor.Derivative.depends_on": {"tf": 1}, "tensorgrad.tensor.Product.depends_on": {"tf": 1}, "tensorgrad.tensor.Sum.depends_on": {"tf": 1}}, "df": 21, "s": {"docs": {"tensorgrad.extras.to_pytorch.CodegenContext": {"tf": 1}, "tensorgrad.functions.graph": {"tf": 1}}, "df": 2}}}}}}, "s": {"docs": {"tensorgrad.functions.graph": {"tf": 1}}, "df": 1}}, "l": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "e": {"1": {"docs": {"tensorgrad.utils.KeyStoringDict.__init__": {"tf": 1}}, "df": 1}, "2": {"docs": {"tensorgrad.utils.KeyStoringDict.__init__": {"tf": 1}}, "df": 1}, "docs": {"tensorgrad.functions.graph": {"tf": 1}, "tensorgrad.utils.KeyStoringDict": {"tf": 1.4142135623730951}, "tensorgrad.utils.KeyStoringDict.get_with_key": {"tf": 1}, "tensorgrad.utils.KeyStoringDict.get": {"tf": 1}, "tensorgrad.utils.KeyStoringDict.pop": {"tf": 1}, "tensorgrad.utils.KeyStoringDict.items": {"tf": 1}}, "df": 6, "s": {"docs": {"tensorgrad.extras.expectation.Expectation.structural_graph": {"tf": 1}, "tensorgrad.extras.to_numpy.compile_to_callable": {"tf": 1.4142135623730951}, "tensorgrad.extras.to_pytorch.compile_to_callable": {"tf": 1.7320508075688772}, "tensorgrad.tensor.Tensor.structural_graph": {"tf": 1}, "tensorgrad.tensor.Variable.structural_graph": {"tf": 1}, "tensorgrad.tensor.Rename.structural_graph": {"tf": 1}, "tensorgrad.tensor.Constant.structural_graph": {"tf": 1}, "tensorgrad.tensor.Delta.structural_graph": {"tf": 1}, "tensorgrad.tensor.Function.structural_graph": {"tf": 1}, "tensorgrad.tensor.Derivative.structural_graph": {"tf": 1}, "tensorgrad.tensor.Product.structural_graph": {"tf": 1}, "tensorgrad.tensor.Sum.structural_graph": {"tf": 1}, "tensorgrad.utils.KeyStoringDict.values": {"tf": 1}}, "df": 13}, "e": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "r": {"docs": {"tensorgrad.functions.graph": {"tf": 1}}, "df": 1}}}}}}}}}, "e": {"docs": {"tensorgrad.extras.to_tikz.TikzGraph.add_subgraph": {"tf": 1}}, "df": 1, "r": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "s": {"docs": {"tensorgrad.extras.expectation.Expectation.structural_graph": {"tf": 1}, "tensorgrad.tensor.Tensor.structural_graph": {"tf": 1}, "tensorgrad.tensor.Variable.structural_graph": {"tf": 1}, "tensorgrad.tensor.Rename.structural_graph": {"tf": 1}, "tensorgrad.tensor.Constant.structural_graph": {"tf": 1}, "tensorgrad.tensor.Delta.structural_graph": {"tf": 1}, "tensorgrad.tensor.Function.structural_graph": {"tf": 1}, "tensorgrad.tensor.Derivative.structural_graph": {"tf": 1}, "tensorgrad.tensor.Product.structural_graph": {"tf": 1}, "tensorgrad.tensor.Sum.structural_graph": {"tf": 1}}, "df": 10}}}}}, "s": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {"tensorgrad.tensor.Tensor.simplify": {"tf": 1}}, "df": 1, "s": {"docs": {"tensorgrad.utils.DisjointSets": {"tf": 1}}, "df": 1}}}}}}, "c": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "r": {"docs": {"tensorgrad.functions.diag": {"tf": 1.4142135623730951}}, "df": 1, "s": {"docs": {"tensorgrad.tensor.Delta": {"tf": 1}}, "df": 1}}}}}}, "i": {"docs": {}, "df": 0, "a": {"docs": {"tensorgrad.extras.to_numpy.compile_to_callable": {"tf": 1}, "tensorgrad.tensor.TensorMeta": {"tf": 1}, "tensorgrad.tensor.FunctionSignature": {"tf": 1}, "tensorgrad.utils.KeyStoringDict": {"tf": 1}}, "df": 4}, "s": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "b": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "e": {"docs": {"tensorgrad.extras.to_tikz.TikzGraph.handle_free_edges": {"tf": 1}}, "df": 1}}}}}, "r": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "l": {"docs": {"tensorgrad.tensor.TensorMeta": {"tf": 1}}, "df": 1}}}}}, "e": {"docs": {}, "df": 0, "w": {"docs": {"tensorgrad.utils.KeyStoringDict.keys": {"tf": 1}, "tensorgrad.utils.KeyStoringDict.values": {"tf": 1}, "tensorgrad.utils.KeyStoringDict.items": {"tf": 1}}, "df": 3}}}, "t": {"docs": {"tensorgrad.utils.DisjointSets": {"tf": 2.449489742783178}}, "df": 1}}, "h": {"0": {"docs": {"tensorgrad.extras.to_numpy.compile_to_callable": {"tf": 1}, "tensorgrad.extras.to_pytorch.compile_to_callable": {"tf": 1}}, "df": 2}, "docs": {"tensorgrad.tensor.FunctionSignature": {"tf": 2.449489742783178}}, "df": 1, "a": {"docs": {}, "df": 0, "v": {"docs": {}, "df": 0, "e": {"docs": {"tensorgrad.extras.expectation.Expectation.__init__": {"tf": 1}, "tensorgrad.extras.to_pytorch.compile_to_callable": {"tf": 1}, "tensorgrad.extras.to_tikz.TikzGraph.add_edge": {"tf": 1}, "tensorgrad.tensor.FunctionSignature": {"tf": 1.4142135623730951}, "tensorgrad.utils.DisjointSets": {"tf": 1}}, "df": 5}}, "s": {"docs": {"tensorgrad.tensor.Tensor.order": {"tf": 1}, "tensorgrad.tensor.FunctionSignature": {"tf": 2.6457513110645907}, "tensorgrad.utils.DisjointSets": {"tf": 1}}, "df": 3, "h": {"docs": {"tensorgrad.tensor.Tensor.weisfeiler_lehman": {"tf": 1}}, "df": 1, "a": {"docs": {}, "df": 0, "b": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "e": {"docs": {"tensorgrad.extras.expectation.Expectation.structural_graph": {"tf": 1}, "tensorgrad.tensor.Tensor.structural_graph": {"tf": 1}, "tensorgrad.tensor.Variable.structural_graph": {"tf": 1}, "tensorgrad.tensor.Rename.structural_graph": {"tf": 1}, "tensorgrad.tensor.Constant.structural_graph": {"tf": 1}, "tensorgrad.tensor.Delta.structural_graph": {"tf": 1}, "tensorgrad.tensor.Function.structural_graph": {"tf": 1}, "tensorgrad.tensor.Derivative.structural_graph": {"tf": 1}, "tensorgrad.tensor.Product.structural_graph": {"tf": 1}, "tensorgrad.tensor.Sum.structural_graph": {"tf": 1}}, "df": 10}}}}}}, "n": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "e": {"docs": {"tensorgrad.extras.to_tikz.format_label": {"tf": 1}}, "df": 1, "s": {"docs": {"tensorgrad.extras.to_tikz.depth_tracking_dispatcher": {"tf": 1}}, "df": 1}, "d": {"docs": {"tensorgrad.functions.max": {"tf": 1}}, "df": 1}}}}}}, "o": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "s": {"docs": {"tensorgrad.extras.to_pytorch.CodegenContext": {"tf": 1}, "tensorgrad.extras.to_tikz.NodeRef": {"tf": 1}}, "df": 2}, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {"tensorgrad.tensor.Variable.__init__": {"tf": 1}}, "df": 1}}}}}, "n": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "r": {"docs": {"tensorgrad.extras.to_tikz.TikzGraph.add_edge": {"tf": 1}}, "df": 1}}}, "w": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "v": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {"tensorgrad.extras.to_tikz.TikzGraph.add_subgraph": {"tf": 1}, "tensorgrad.utils.DisjointSets": {"tf": 1}}, "df": 2}}}}}, "u": {"docs": {}, "df": 0, "t": {"docs": {"tensorgrad.functions.Convolution.__init__": {"tf": 1}}, "df": 1}}}, "i": {"docs": {}, "df": 0, "g": {"docs": {}, "df": 0, "h": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {"tensorgrad.extras.to_tikz.TikzGraph.add_subgraph": {"tf": 1}, "tensorgrad.functions.diag": {"tf": 1}, "tensorgrad.tensor.Delta": {"tf": 1}}, "df": 3}}}}, "n": {"docs": {"tensorgrad.functions.Convolution.__init__": {"tf": 1}}, "df": 1}}, "e": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {"tensorgrad.extras.to_tikz.format_weight": {"tf": 1}, "tensorgrad.extras.to_tikz.format_function": {"tf": 1}}, "df": 2}}}}, "x": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "l": {"docs": {"tensorgrad.tensor.Tensor.weisfeiler_lehman": {"tf": 1}}, "df": 1}}}}}}}}}, "r": {"docs": {}, "df": 0, "e": {"docs": {"tensorgrad.tensor.FunctionSignature": {"tf": 1}}, "df": 1}}}, "y": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "h": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "n": {"docs": {"tensorgrad.functions.graph": {"tf": 1}}, "df": 1, "s": {"docs": {"tensorgrad.functions.graph": {"tf": 1}}, "df": 1}}}}, "e": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "g": {"docs": {}, "df": 0, "e": {"docs": {"tensorgrad.functions.graph": {"tf": 1}}, "df": 1}}}}}}}}}, "m": {"docs": {}, "df": 0, "u": {"docs": {"tensorgrad.extras.expectation.Expectation.__init__": {"tf": 1.4142135623730951}}, "df": 1, "l": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {"tensorgrad.extras.expectation.Expectation.__init__": {"tf": 1}, "tensorgrad.tensor.FunctionSignature": {"tf": 1.4142135623730951}}, "df": 2, "p": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {"tensorgrad.functions.graph": {"tf": 1.4142135623730951}, "tensorgrad.tensor.FunctionSignature": {"tf": 1}}, "df": 2}}}}}}, "e": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "/": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "d": {"docs": {"tensorgrad.tensor.Product.__init__": {"tf": 1}}, "df": 1}}}}}}}}}}}}}}, "e": {"docs": {"tensorgrad.functions.max_grad": {"tf": 1}, "tensorgrad.tensor.Tensor.full_simplify": {"tf": 1}, "tensorgrad.tensor.Sum.__init__": {"tf": 1}}, "df": 3}, "y": {"docs": {"tensorgrad.tensor.FunctionSignature": {"tf": 1}}, "df": 1}}}}}}, "^": {"docs": {}, "df": 0, "t": {"docs": {"tensorgrad.extras.expectation.Expectation.__init__": {"tf": 1}}, "df": 1}}, "s": {"docs": {}, "df": 0, "t": {"docs": {"tensorgrad.tensor.FunctionSignature": {"tf": 1.7320508075688772}}, "df": 1}}}, "a": {"docs": {}, "df": 0, "p": {"docs": {"tensorgrad.extras.expectation.Expectation.__init__": {"tf": 1.4142135623730951}}, "df": 1, "p": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {"tensorgrad.extras.expectation.Expectation.__init__": {"tf": 1}, "tensorgrad.tensor.Tensor.rename": {"tf": 1}, "tensorgrad.tensor.Tensor.edge_structural_graph": {"tf": 1}, "tensorgrad.tensor.Tensor.is_isomorphic": {"tf": 1}, "tensorgrad.tensor.Tensor.isomorphisms": {"tf": 1}, "tensorgrad.tensor.Rename.__init__": {"tf": 1}, "tensorgrad.tensor.function": {"tf": 1}, "tensorgrad.tensor.Function": {"tf": 1}, "tensorgrad.tensor.Derivative.__init__": {"tf": 1}, "tensorgrad.utils.DisjointSets": {"tf": 1}, "tensorgrad.utils.KeyStoringDict.__init__": {"tf": 1}}, "df": 11, "[": {"docs": {}, "df": 0, "k": {"docs": {}, "df": 0, "t": {"docs": {"tensorgrad.utils.DisjointSets": {"tf": 1.4142135623730951}}, "df": 1}, "e": {"docs": {}, "df": 0, "y": {"docs": {"tensorgrad.utils.DisjointSets": {"tf": 1}}, "df": 1}}}}}}}}, "s": {"docs": {"tensorgrad.functions.max_grad": {"tf": 1}}, "df": 1}}, "t": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "x": {"docs": {"tensorgrad.extras.to_latex.to_latex": {"tf": 1}, "tensorgrad.functions.graph": {"tf": 1}, "tensorgrad.functions.inverse": {"tf": 1.4142135623730951}, "tensorgrad.tensor.Delta": {"tf": 1}, "tensorgrad.tensor.Zero": {"tf": 1}, "tensorgrad.tensor.Ones": {"tf": 1}, "tensorgrad.tensor.FunctionSignature": {"tf": 1}}, "df": 7}, "c": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "s": {"docs": {"tensorgrad.functions.inverse": {"tf": 1}, "tensorgrad.functions.repeat": {"tf": 1}, "tensorgrad.functions.det": {"tf": 1}, "tensorgrad.functions.Reshape": {"tf": 1}, "tensorgrad.tensor.Delta": {"tf": 1}}, "df": 5}}}}}, "c": {"docs": {}, "df": 0, "h": {"docs": {"tensorgrad.extras.to_pytorch.permute": {"tf": 1}, "tensorgrad.tensor.Tensor.edge_structural_graph": {"tf": 1.4142135623730951}, "tensorgrad.tensor.Tensor.is_isomorphic": {"tf": 1}}, "df": 3, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {"tensorgrad.tensor.Tensor.is_isomorphic": {"tf": 1}}, "df": 1}}}}}, "m": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "l": {"docs": {"tensorgrad.tensor.FunctionSignature": {"tf": 1.4142135623730951}}, "df": 1, "s": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "g": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "e": {"docs": {"tensorgrad.tensor.FunctionSignature": {"tf": 1}}, "df": 1}}}}}}}}}}}}}, "i": {"docs": {}, "df": 0, "n": {"docs": {"tensorgrad.extras.to_tikz.to_tikz": {"tf": 1}}, "df": 1, "t": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "s": {"docs": {"tensorgrad.extras.to_numpy.CodegenContext": {"tf": 1}}, "df": 1}}}}}}}, "x": {"docs": {"tensorgrad.functions.max_grad": {"tf": 2.23606797749979}, "tensorgrad.functions.max": {"tf": 1.4142135623730951}}, "df": 2, "i": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "m": {"docs": {"tensorgrad.functions.maximum": {"tf": 1}}, "df": 1}}}}}, "y": {"docs": {"tensorgrad.tensor.Tensor.rename": {"tf": 1}, "tensorgrad.tensor.Tensor.simplify": {"tf": 1}, "tensorgrad.tensor.FunctionSignature": {"tf": 1}}, "df": 3}}, "e": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "n": {"docs": {"tensorgrad.extras.expectation.Expectation.__init__": {"tf": 1}}, "df": 1, "s": {"docs": {"tensorgrad.functions.diag": {"tf": 1.4142135623730951}}, "df": 1}}}, "t": {"docs": {}, "df": 0, "h": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "d": {"docs": {"tensorgrad.extras.to_tikz.depth_tracking_dispatcher": {"tf": 1}, "tensorgrad.extras.to_tikz.depth_tracking_dispatcher.register": {"tf": 1.4142135623730951}, "tensorgrad.tensor.TensorMeta": {"tf": 1.4142135623730951}, "tensorgrad.tensor.FunctionSignature.simplify": {"tf": 1}}, "df": 4, "s": {"docs": {"tensorgrad.extras.to_tikz.depth_tracking_dispatcher": {"tf": 1}, "tensorgrad.tensor.FunctionSignature": {"tf": 1}}, "df": 2}}}}, "a": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "s": {"docs": {"tensorgrad.tensor.TensorMeta": {"tf": 1.4142135623730951}}, "df": 1}}}}}}}, "n": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "d": {"docs": {"tensorgrad.functions.graph": {"tf": 1}}, "df": 1}}}}}}}, "r": {"docs": {}, "df": 0, "g": {"docs": {}, "df": 0, "e": {"docs": {"tensorgrad.tensor.Rename.merge_renames": {"tf": 1}, "tensorgrad.tensor.Product.merge": {"tf": 1}}, "df": 2, "d": {"docs": {"tensorgrad.tensor.Rename.merge_renames": {"tf": 1}}, "df": 1}}, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {"tensorgrad.tensor.Product.merge": {"tf": 1}}, "df": 1}}}}}}, "o": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "e": {"docs": {"tensorgrad.functions.graph": {"tf": 1}, "tensorgrad.functions.multi_dot": {"tf": 1}, "tensorgrad.tensor.FunctionSignature": {"tf": 1}, "tensorgrad.tensor.Function": {"tf": 1}, "tensorgrad.tensor.Function.__init__": {"tf": 1}}, "df": 5}}, "d": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "f": {"docs": {}, "df": 0, "y": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {"tensorgrad.tensor.Rename": {"tf": 1}}, "df": 1}}}}}}}}, "i": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "s": {"docs": {"tensorgrad.functions.inverse": {"tf": 1}}, "df": 1}}}}}, "x": {"docs": {"tensorgrad.tensor.TensorMeta": {"tf": 1}}, "df": 1}, "g": {"docs": {}, "df": 0, "h": {"docs": {}, "df": 0, "t": {"docs": {"tensorgrad.tensor.FunctionSignature": {"tf": 2}}, "df": 1}}}}, "r": {"docs": {}, "df": 0, "o": {"docs": {"tensorgrad.tensor.TensorMeta": {"tf": 1}}, "df": 1}}}, "n": {"docs": {"tensorgrad.functions.max_grad": {"tf": 1.4142135623730951}, "tensorgrad.tensor.Delta": {"tf": 2}, "tensorgrad.tensor.FunctionSignature": {"tf": 2.6457513110645907}}, "df": 3, "o": {"docs": {"tensorgrad.tensor.Tensor.full_simplify": {"tf": 1}, "tensorgrad.tensor.FunctionSignature": {"tf": 1}}, "df": 2, "r": {"docs": {"tensorgrad.tensor.TensorMeta": {"tf": 1}}, "df": 1, "m": {"docs": {"tensorgrad.functions.graph": {"tf": 1}}, "df": 1, "a": {"docs": {}, "df": 0, "l": {"docs": {"tensorgrad.extras.expectation.Expectation.__init__": {"tf": 1}, "tensorgrad.extras.to_tikz.NodeRef": {"tf": 1}, "tensorgrad.utils.KeyStoringDict": {"tf": 1}, "tensorgrad.utils.KeyStoringDict.get": {"tf": 1}}, "df": 4}}}}, "t": {"docs": {"tensorgrad.extras.expectation.Expectation.__init__": {"tf": 1}, "tensorgrad.extras.to_tikz.TikzGraph.add_subgraph": {"tf": 1}, "tensorgrad.functions.graph": {"tf": 1}, "tensorgrad.tensor.TensorMeta": {"tf": 1}, "tensorgrad.tensor.Tensor.grad": {"tf": 1}, "tensorgrad.tensor.Delta": {"tf": 1}, "tensorgrad.tensor.Derivative.__init__": {"tf": 1}, "tensorgrad.tensor.Sum.__init__": {"tf": 1}, "tensorgrad.utils.KeyStoringDict.pop": {"tf": 1}}, "df": 9, "e": {"docs": {"tensorgrad.extras.expectation.Expectation.__init__": {"tf": 1.4142135623730951}, "tensorgrad.tensor.Tensor.grad": {"tf": 1}, "tensorgrad.tensor.Delta": {"tf": 1}}, "df": 3}, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {"tensorgrad.extras.to_latex.to_latex_indexed": {"tf": 1}, "tensorgrad.extras.to_latex.to_latex_index_free": {"tf": 1}, "tensorgrad.extras.to_latex.to_latex": {"tf": 1.4142135623730951}, "tensorgrad.functions.graph": {"tf": 1}}, "df": 4}}}}}}, "d": {"docs": {}, "df": 0, "e": {"1": {"2": {"docs": {"tensorgrad.extras.to_tikz.NodeRef": {"tf": 1}}, "df": 1}, "docs": {}, "df": 0}, "docs": {"tensorgrad.extras.expectation.Expectation.structural_graph": {"tf": 1.7320508075688772}, "tensorgrad.extras.to_tikz.NodeRef": {"tf": 1.4142135623730951}, "tensorgrad.extras.to_tikz.TikzGraph.add_node": {"tf": 1.4142135623730951}, "tensorgrad.extras.to_tikz.TikzGraph.handle_free_edges": {"tf": 1}, "tensorgrad.tensor.Tensor.structural_graph": {"tf": 1.7320508075688772}, "tensorgrad.tensor.Variable.structural_graph": {"tf": 1.7320508075688772}, "tensorgrad.tensor.Rename.structural_graph": {"tf": 1.7320508075688772}, "tensorgrad.tensor.Constant.structural_graph": {"tf": 1.7320508075688772}, "tensorgrad.tensor.Delta.structural_graph": {"tf": 1.7320508075688772}, "tensorgrad.tensor.Function.structural_graph": {"tf": 1.7320508075688772}, "tensorgrad.tensor.Derivative.structural_graph": {"tf": 1.7320508075688772}, "tensorgrad.tensor.Product.structural_graph": {"tf": 1.7320508075688772}, "tensorgrad.tensor.Sum.structural_graph": {"tf": 1.7320508075688772}}, "df": 13, "r": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "f": {"docs": {"tensorgrad.extras.to_tikz.TikzGraph.add_edge": {"tf": 1}}, "df": 1, "s": {"docs": {"tensorgrad.extras.to_tikz.TikzGraph.add_edge": {"tf": 1}}, "df": 1}}}}, "s": {"docs": {"tensorgrad.extras.to_tikz.TikzGraph.add_subgraph": {"tf": 1}, "tensorgrad.tensor.Tensor.edge_structural_graph": {"tf": 1}}, "df": 2}}}, "n": {"docs": {"tensorgrad.extras.to_tikz.depth_tracking_dispatcher": {"tf": 1}, "tensorgrad.functions.Convolution": {"tf": 1}, "tensorgrad.tensor.Constant": {"tf": 1}}, "df": 3, "e": {"docs": {"tensorgrad.extras.to_numpy.compile_to_callable": {"tf": 1}, "tensorgrad.functions.inverse": {"tf": 1}}, "df": 2}}}, "e": {"docs": {}, "df": 0, "w": {"docs": {"tensorgrad.extras.expectation.Expectation.__init__": {"tf": 1}, "tensorgrad.extras.to_tikz.depth_tracking_dispatcher.register": {"tf": 1}, "tensorgrad.tensor.Tensor.grad": {"tf": 1.7320508075688772}, "tensorgrad.tensor.Tensor.rename": {"tf": 1.7320508075688772}, "tensorgrad.tensor.Rename.__init__": {"tf": 1}, "tensorgrad.tensor.FunctionSignature": {"tf": 1.7320508075688772}, "tensorgrad.tensor.FunctionSignature.derivative": {"tf": 1.7320508075688772}, "tensorgrad.tensor.Derivative.__init__": {"tf": 1}, "tensorgrad.tensor.Product.merge": {"tf": 1}}, "df": 9, "l": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "s": {"docs": {"tensorgrad.functions.graph": {"tf": 1}}, "df": 1}}}}}, "e": {"docs": {}, "df": 0, "r": {"docs": {"tensorgrad.utils.DisjointSets": {"tf": 1}}, "df": 1}}}, "t": {"docs": {}, "df": 0, "w": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "k": {"docs": {"tensorgrad.functions.graph": {"tf": 1.7320508075688772}}, "df": 1, "x": {"docs": {"tensorgrad.extras.expectation.Expectation.structural_graph": {"tf": 1}, "tensorgrad.tensor.Tensor.structural_graph": {"tf": 1}, "tensorgrad.tensor.Variable.structural_graph": {"tf": 1}, "tensorgrad.tensor.Rename.structural_graph": {"tf": 1}, "tensorgrad.tensor.Constant.structural_graph": {"tf": 1}, "tensorgrad.tensor.Delta.structural_graph": {"tf": 1}, "tensorgrad.tensor.Function.structural_graph": {"tf": 1}, "tensorgrad.tensor.Derivative.structural_graph": {"tf": 1}, "tensorgrad.tensor.Product.structural_graph": {"tf": 1}, "tensorgrad.tensor.Sum.structural_graph": {"tf": 1}}, "df": 10}, "s": {"docs": {"tensorgrad.functions.graph": {"tf": 1}}, "df": 1}}}}}}, "e": {"docs": {}, "df": 0, "d": {"docs": {"tensorgrad.extras.to_tikz.NodeRef": {"tf": 1}}, "df": 1, "e": {"docs": {}, "df": 0, "d": {"docs": {"tensorgrad.extras.to_numpy.permute_code": {"tf": 1}}, "df": 1}}}}, "c": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "y": {"docs": {"tensorgrad.tensor.Tensor.rename": {"tf": 1}}, "df": 1}}}}}}}, "v": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {"tensorgrad.tensor.Tensor.simplify": {"tf": 1}}, "df": 1}}}}, "a": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "e": {"docs": {"tensorgrad.extras.expectation.Expectation.__init__": {"tf": 1.7320508075688772}, "tensorgrad.extras.expectation.Expectation.structural_graph": {"tf": 1.4142135623730951}, "tensorgrad.extras.to_numpy.compile_to_callable": {"tf": 1}, "tensorgrad.extras.to_numpy.CodegenContext.fresh_name": {"tf": 1}, "tensorgrad.extras.to_numpy.CodegenContext.declare_dimension": {"tf": 1}, "tensorgrad.extras.to_pytorch.compile_to_callable": {"tf": 1}, "tensorgrad.extras.to_pytorch.CodegenContext": {"tf": 1}, "tensorgrad.extras.to_pytorch.CodegenContext.fresh_name": {"tf": 1}, "tensorgrad.extras.to_pytorch.CodegenContext.declare_dimension": {"tf": 1}, "tensorgrad.extras.to_tikz.NodeRef": {"tf": 1.7320508075688772}, "tensorgrad.extras.to_tikz.TikzGraph.add_node": {"tf": 1}, "tensorgrad.functions.graph": {"tf": 1.4142135623730951}, "tensorgrad.tensor.Tensor.structural_graph": {"tf": 1.4142135623730951}, "tensorgrad.tensor.Variable.__init__": {"tf": 1.4142135623730951}, "tensorgrad.tensor.Variable.structural_graph": {"tf": 1.4142135623730951}, "tensorgrad.tensor.Rename.structural_graph": {"tf": 1.4142135623730951}, "tensorgrad.tensor.Constant.structural_graph": {"tf": 1.4142135623730951}, "tensorgrad.tensor.Delta.structural_graph": {"tf": 1.4142135623730951}, "tensorgrad.tensor.FunctionSignature": {"tf": 2.449489742783178}, "tensorgrad.tensor.FunctionSignature.derivative": {"tf": 1.4142135623730951}, "tensorgrad.tensor.function": {"tf": 1.7320508075688772}, "tensorgrad.tensor.Function.__init__": {"tf": 1}, "tensorgrad.tensor.Function.structural_graph": {"tf": 1.4142135623730951}, "tensorgrad.tensor.Derivative.structural_graph": {"tf": 1.4142135623730951}, "tensorgrad.tensor.Product.structural_graph": {"tf": 1.4142135623730951}, "tensorgrad.tensor.Sum.structural_graph": {"tf": 1.4142135623730951}, "tensorgrad.utils.DisjointSets": {"tf": 1}}, "df": 27, "s": {"docs": {"tensorgrad.extras.expectation.Expectation.__init__": {"tf": 1.4142135623730951}, "tensorgrad.functions.graph": {"tf": 2.23606797749979}, "tensorgrad.tensor.Tensor.edges": {"tf": 1}, "tensorgrad.tensor.Tensor.grad": {"tf": 1.7320508075688772}, "tensorgrad.tensor.Tensor.rename": {"tf": 1.7320508075688772}, "tensorgrad.tensor.Tensor.edge_structural_graph": {"tf": 2}, "tensorgrad.tensor.Tensor.is_isomorphic": {"tf": 1.4142135623730951}, "tensorgrad.tensor.Tensor.isomorphisms": {"tf": 1.4142135623730951}, "tensorgrad.tensor.Rename": {"tf": 1.4142135623730951}, "tensorgrad.tensor.Rename.__init__": {"tf": 1.4142135623730951}, "tensorgrad.tensor.Delta.__init__": {"tf": 1}, "tensorgrad.tensor.function": {"tf": 1.4142135623730951}, "tensorgrad.tensor.Function": {"tf": 1}, "tensorgrad.tensor.Function.__init__": {"tf": 1.4142135623730951}, "tensorgrad.tensor.Derivative.__init__": {"tf": 1}}, "df": 15}, "d": {"docs": {"tensorgrad.tensor.FunctionSignature": {"tf": 1}}, "df": 1}, "[": {"docs": {}, "df": 0, "k": {"docs": {}, "df": 0, "t": {"docs": {"tensorgrad.utils.DisjointSets": {"tf": 1}}, "df": 1}}}}, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {"tensorgrad.extras.to_numpy.CodegenContext.declare_dimension": {"tf": 1}, "tensorgrad.extras.to_pytorch.CodegenContext.declare_dimension": {"tf": 1}}, "df": 2}}}}}, "u": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "y": {"docs": {"tensorgrad.extras.to_numpy.compile_to_callable": {"tf": 1}, "tensorgrad.extras.to_numpy.permute_code": {"tf": 1}}, "df": 2}}, "b": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {"tensorgrad.functions.inverse": {"tf": 1}, "tensorgrad.tensor.Tensor.order": {"tf": 1}, "tensorgrad.tensor.Rename.merge_renames": {"tf": 1}}, "df": 3}}}}}, "p": {"docs": {"tensorgrad.extras.to_numpy.compile_to_callable": {"tf": 1.4142135623730951}}, "df": 1}, "d": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "y": {"docs": {"tensorgrad.extras.to_numpy.compile_to_callable": {"tf": 1.7320508075688772}}, "df": 1}}}}}, "i": {"docs": {}, "df": 0, "m": {"docs": {"tensorgrad.tensor.Tensor.order": {"tf": 1}}, "df": 1}}}, "t": {"docs": {}, "df": 0, "h": {"docs": {"tensorgrad.functions.taylor": {"tf": 1}}, "df": 1}}}, "d": {"docs": {"tensorgrad.extras.to_tikz.format_label": {"tf": 1}, "tensorgrad.functions.repeat": {"tf": 1}, "tensorgrad.tensor.FunctionSignature": {"tf": 3}}, "df": 3, "i": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "b": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {"tensorgrad.extras.expectation.Expectation.__init__": {"tf": 1}}, "df": 1}}}}}}}}, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "t": {"docs": {"tensorgrad.extras.to_pytorch.compile_to_callable": {"tf": 1}, "tensorgrad.tensor.Product.merge": {"tf": 1}}, "df": 2}}}}}, "j": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "t": {"docs": {"tensorgrad.extras.expectation.Expectation.__init__": {"tf": 1}, "tensorgrad.tensor.Product.components": {"tf": 1.4142135623730951}}, "df": 2}}}}}, "p": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "h": {"docs": {"tensorgrad.extras.to_tikz.depth_tracking_dispatcher": {"tf": 1}}, "df": 1}}}}}}, "c": {"docs": {}, "df": 0, "t": {"docs": {"tensorgrad.extras.expectation.Expectation.structural_graph": {"tf": 1}, "tensorgrad.extras.to_numpy.compile_to_callable": {"tf": 1.4142135623730951}, "tensorgrad.extras.to_pytorch.compile_to_callable": {"tf": 1}, "tensorgrad.functions.graph": {"tf": 1}, "tensorgrad.tensor.Tensor.structural_graph": {"tf": 1}, "tensorgrad.tensor.Variable.structural_graph": {"tf": 1}, "tensorgrad.tensor.Rename.structural_graph": {"tf": 1}, "tensorgrad.tensor.Constant.structural_graph": {"tf": 1}, "tensorgrad.tensor.Delta.structural_graph": {"tf": 1}, "tensorgrad.tensor.FunctionSignature.derivative": {"tf": 1}, "tensorgrad.tensor.Function.structural_graph": {"tf": 1}, "tensorgrad.tensor.Derivative.structural_graph": {"tf": 1}, "tensorgrad.tensor.Product.structural_graph": {"tf": 1}, "tensorgrad.tensor.Sum.structural_graph": {"tf": 1}, "tensorgrad.utils.KeyStoringDict.__init__": {"tf": 1}, "tensorgrad.utils.KeyStoringDict.get": {"tf": 1}}, "df": 16, "[": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "r": {"docs": {"tensorgrad.extras.expectation.Expectation.__init__": {"tf": 1}}, "df": 1}}}}, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "y": {"docs": {"tensorgrad.tensor.Tensor.rename": {"tf": 1}, "tensorgrad.tensor.Tensor.simplify": {"tf": 1}, "tensorgrad.tensor.Rename.__init__": {"tf": 1}, "tensorgrad.tensor.Rename.merge_renames": {"tf": 1}, "tensorgrad.tensor.function": {"tf": 1}, "tensorgrad.tensor.Function": {"tf": 1}, "tensorgrad.utils.KeyStoringDict": {"tf": 1}}, "df": 7}, "i": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "s": {"docs": {"tensorgrad.tensor.Tensor.isomorphisms": {"tf": 1}, "tensorgrad.tensor.Rename.merge_renames": {"tf": 1.4142135623730951}}, "df": 2}}}}}}}}, "/": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {"tensorgrad.utils.KeyStoringDict.update": {"tf": 1}}, "df": 1}}}}}}}}}}, "r": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "d": {"docs": {"tensorgrad.extras.expectation.Expectation.structural_graph": {"tf": 1}, "tensorgrad.tensor.Tensor.structural_graph": {"tf": 1}, "tensorgrad.tensor.Variable.structural_graph": {"tf": 1}, "tensorgrad.tensor.Rename.structural_graph": {"tf": 1}, "tensorgrad.tensor.Constant.structural_graph": {"tf": 1}, "tensorgrad.tensor.Delta.structural_graph": {"tf": 1}, "tensorgrad.tensor.Function.structural_graph": {"tf": 1}, "tensorgrad.tensor.Derivative.structural_graph": {"tf": 1}, "tensorgrad.tensor.Product.structural_graph": {"tf": 1}, "tensorgrad.tensor.Sum.structural_graph": {"tf": 1}}, "df": 10}}, "l": {"docs": {}, "df": 0, "y": {"docs": {"tensorgrad.tensor.TensorMeta": {"tf": 1}}, "df": 1}}}}}}, "m": {"docs": {"tensorgrad.functions.max": {"tf": 1.4142135623730951}, "tensorgrad.functions.Convolution.__init__": {"tf": 1}}, "df": 2, "e": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {"tensorgrad.extras.to_numpy.compile_to_callable": {"tf": 1}, "tensorgrad.extras.to_numpy.CodegenContext.declare_dimension": {"tf": 1}, "tensorgrad.extras.to_pytorch.compile_to_callable": {"tf": 1}, "tensorgrad.extras.to_pytorch.CodegenContext.declare_dimension": {"tf": 1}, "tensorgrad.functions.dot": {"tf": 1.7320508075688772}, "tensorgrad.functions.concat": {"tf": 1}, "tensorgrad.tensor.Delta.__init__": {"tf": 1}, "tensorgrad.tensor.FunctionSignature": {"tf": 1.7320508075688772}}, "df": 8, "s": {"docs": {"tensorgrad.functions.sum": {"tf": 1}, "tensorgrad.functions.dot": {"tf": 1}, "tensorgrad.functions.repeat": {"tf": 1}, "tensorgrad.tensor.Variable.__init__": {"tf": 1.4142135623730951}, "tensorgrad.tensor.Constant.__init__": {"tf": 1.4142135623730951}, "tensorgrad.tensor.FunctionSignature": {"tf": 1}}, "df": 6}}}}}}}, "s": {"docs": {"tensorgrad.functions.diag": {"tf": 1}, "tensorgrad.functions.inverse": {"tf": 1}, "tensorgrad.functions.Convolution.__init__": {"tf": 1}}, "df": 3}}, "f": {"docs": {}, "df": 0, "f": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {"tensorgrad.extras.to_tikz.NodeRef": {"tf": 1}}, "df": 1, "e": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "t": {"docs": {"tensorgrad.functions.graph": {"tf": 1}, "tensorgrad.functions.Reshape": {"tf": 1}}, "df": 2, "i": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "e": {"docs": {"tensorgrad.tensor.Derivative.__init__": {"tf": 1.4142135623730951}}, "df": 1}}}}}}}}}}}, "a": {"docs": {}, "df": 0, "g": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "m": {"docs": {"tensorgrad.extras.to_tikz.TikzGraph.handle_free_edges": {"tf": 1}}, "df": 1}}}, "o": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "l": {"docs": {"tensorgrad.functions.diag": {"tf": 1.7320508075688772}}, "df": 1}}}}}}, "g": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "s": {"docs": {"tensorgrad.extras.to_tikz.format_label": {"tf": 1}}, "df": 1}}}}, "d": {"docs": {"tensorgrad.functions.Convolution.__init__": {"tf": 1}}, "df": 1}}, "e": {"docs": {}, "df": 0, "f": {"docs": {"tensorgrad.extras.to_numpy.compile_to_callable": {"tf": 1}, "tensorgrad.extras.to_pytorch.compile_to_callable": {"tf": 1}, "tensorgrad.utils.DisjointSets": {"tf": 1.4142135623730951}}, "df": 3, "a": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "t": {"docs": {"tensorgrad.extras.to_latex.to_latex_indexed": {"tf": 1}, "tensorgrad.tensor.FunctionSignature": {"tf": 1}, "tensorgrad.tensor.FunctionSignature.simplify": {"tf": 1}, "tensorgrad.utils.DisjointSets": {"tf": 1.4142135623730951}, "tensorgrad.utils.KeyStoringDict.get_with_key": {"tf": 1}, "tensorgrad.utils.KeyStoringDict.get": {"tf": 1}}, "df": 6, "s": {"docs": {"tensorgrad.extras.expectation.Expectation.__init__": {"tf": 1.4142135623730951}}, "df": 1}}}}}, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "e": {"docs": {"tensorgrad.functions.graph": {"tf": 1}, "tensorgrad.tensor.FunctionSignature": {"tf": 1.7320508075688772}}, "df": 2, "d": {"docs": {"tensorgrad.tensor.TensorMeta": {"tf": 1}, "tensorgrad.tensor.Delta": {"tf": 1.4142135623730951}}, "df": 2}}, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {"tensorgrad.tensor.TensorMeta": {"tf": 1}, "tensorgrad.tensor.Function.__init__": {"tf": 1}}, "df": 2}}}}}}, "r": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "v": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "v": {"docs": {}, "df": 0, "e": {"docs": {"tensorgrad.extras.expectation.Expectation.__init__": {"tf": 1}, "tensorgrad.functions.max": {"tf": 1}, "tensorgrad.tensor.Tensor.grad": {"tf": 2.23606797749979}, "tensorgrad.tensor.FunctionSignature": {"tf": 1}, "tensorgrad.tensor.FunctionSignature.derivative": {"tf": 1}, "tensorgrad.tensor.Derivative": {"tf": 1}, "tensorgrad.tensor.Derivative.__init__": {"tf": 1}}, "df": 7}}}}}}}}, "p": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "s": {"docs": {"tensorgrad.extras.expectation.Expectation.depends_on": {"tf": 1}, "tensorgrad.tensor.Tensor.depends_on": {"tf": 1}, "tensorgrad.tensor.Variable.depends_on": {"tf": 1}, "tensorgrad.tensor.Rename.depends_on": {"tf": 1}, "tensorgrad.tensor.Constant.depends_on": {"tf": 1}, "tensorgrad.tensor.Function.depends_on": {"tf": 1}, "tensorgrad.tensor.Derivative.depends_on": {"tf": 1}, "tensorgrad.tensor.Product.depends_on": {"tf": 1}, "tensorgrad.tensor.Sum.depends_on": {"tf": 1}}, "df": 9}}}}, "t": {"docs": {}, "df": 0, "h": {"docs": {"tensorgrad.extras.to_tikz.choose_layout": {"tf": 1}}, "df": 1}}}, "s": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "r": {"docs": {"tensorgrad.extras.to_tikz.depth_tracking_dispatcher": {"tf": 1.4142135623730951}}, "df": 1, "s": {"docs": {"tensorgrad.extras.to_tikz.depth_tracking_dispatcher": {"tf": 1}}, "df": 1}}}, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {"tensorgrad.functions.graph": {"tf": 1}}, "df": 1}}, "v": {"docs": {}, "df": 0, "e": {"docs": {"tensorgrad.tensor.FunctionSignature": {"tf": 1}}, "df": 1}}}}}, "b": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {"tensorgrad.functions.graph": {"tf": 1}}, "df": 1}}}, "e": {"docs": {}, "df": 0, "d": {"docs": {"tensorgrad.functions.graph": {"tf": 1}}, "df": 1}}}}}, "e": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "s": {"docs": {"tensorgrad.tensor.TensorMeta": {"tf": 1}}, "df": 1}}}}}}}}, "i": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "d": {"docs": {"tensorgrad.extras.to_tikz.choose_layout": {"tf": 1}}, "df": 1}}}, "g": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "d": {"docs": {"tensorgrad.tensor.FunctionSignature": {"tf": 1}}, "df": 1}}}}}}, "l": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "d": {"docs": {"tensorgrad.functions.graph": {"tf": 1}}, "df": 1}}}}}}, "t": {"docs": {}, "df": 0, "a": {"docs": {"tensorgrad.functions.graph": {"tf": 1}, "tensorgrad.functions.repeat": {"tf": 1}, "tensorgrad.tensor.Delta": {"tf": 2}, "tensorgrad.tensor.Delta.__init__": {"tf": 1}}, "df": 4}}}, "t": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "t": {"docs": {"tensorgrad.functions.det": {"tf": 1}}, "df": 1}}}}}}}}}, "c": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "e": {"docs": {"tensorgrad.tensor.Product.components": {"tf": 1}}, "df": 1}}}}}}, "l": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "e": {"docs": {"tensorgrad.utils.DisjointSets": {"tf": 1}}, "df": 1, "d": {"docs": {"tensorgrad.utils.DisjointSets": {"tf": 1}}, "df": 1}}}}}}}, "o": {"docs": {"tensorgrad.extras.to_tikz.TikzGraph.add_subgraph": {"tf": 1.4142135623730951}, "tensorgrad.functions.repeat": {"tf": 1}}, "df": 2, "u": {"docs": {}, "df": 0, "b": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "e": {"docs": {"tensorgrad.extras.to_tikz.format_label": {"tf": 1}}, "df": 1}}}}, "t": {"docs": {"tensorgrad.functions.graph": {"tf": 2.23606797749979}, "tensorgrad.functions.multi_dot": {"tf": 1}, "tensorgrad.tensor.FunctionSignature": {"tf": 1.4142135623730951}}, "df": 3}, "n": {"docs": {"tensorgrad.functions.Convolution.__init__": {"tf": 1}}, "df": 1}}, "a": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {"tensorgrad.extras.to_tikz.TikzGraph.handle_free_edges": {"tf": 1}}, "df": 1}}}}}}}, "c": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "v": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {"tensorgrad.functions.Convolution.__init__": {"tf": 1}}, "df": 1}}}}}}}}}}}, "u": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "y": {"docs": {"tensorgrad.tensor.Tensor.edge_structural_graph": {"tf": 1}}, "df": 1}}}}}, "g": {"docs": {"tensorgrad.extras.to_latex.to_latex_index_free": {"tf": 1}, "tensorgrad.extras.to_tikz.NodeRef": {"tf": 1}, "tensorgrad.extras.to_tikz.format_label": {"tf": 1}, "tensorgrad.functions.graph": {"tf": 1}, "tensorgrad.functions.repeat": {"tf": 1}, "tensorgrad.tensor.Tensor.edge_structural_graph": {"tf": 1.4142135623730951}, "tensorgrad.tensor.FunctionSignature": {"tf": 1}}, "df": 7, "i": {"docs": {}, "df": 0, "v": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "n": {"docs": {"tensorgrad.extras.expectation.Expectation.__init__": {"tf": 1.4142135623730951}, "tensorgrad.extras.to_numpy.compile_to_callable": {"tf": 1}, "tensorgrad.extras.to_tikz.depth_tracking_dispatcher.register": {"tf": 1}, "tensorgrad.functions.sum": {"tf": 1}, "tensorgrad.functions.dot": {"tf": 1}, "tensorgrad.functions.concat": {"tf": 1}, "tensorgrad.functions.repeat": {"tf": 1}, "tensorgrad.tensor.Constant.__init__": {"tf": 1}}, "df": 8}}, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {"tensorgrad.tensor.Function.__init__": {"tf": 1}}, "df": 1}}}}}, "r": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "h": {"docs": {"tensorgrad.extras.expectation.Expectation.structural_graph": {"tf": 1.4142135623730951}, "tensorgrad.extras.to_tikz.TikzGraph.add_node": {"tf": 1}, "tensorgrad.functions.graph": {"tf": 3.4641016151377544}, "tensorgrad.tensor.Tensor.weisfeiler_lehman": {"tf": 1}, "tensorgrad.tensor.Tensor.structural_graph": {"tf": 1.4142135623730951}, "tensorgrad.tensor.Tensor.edge_structural_graph": {"tf": 1.4142135623730951}, "tensorgrad.tensor.Tensor.graph_to_string": {"tf": 1.4142135623730951}, "tensorgrad.tensor.Variable.structural_graph": {"tf": 1.4142135623730951}, "tensorgrad.tensor.Rename.structural_graph": {"tf": 1.4142135623730951}, "tensorgrad.tensor.Constant.structural_graph": {"tf": 1.4142135623730951}, "tensorgrad.tensor.Delta.structural_graph": {"tf": 1.4142135623730951}, "tensorgrad.tensor.Function.structural_graph": {"tf": 1.4142135623730951}, "tensorgrad.tensor.Derivative.structural_graph": {"tf": 1.4142135623730951}, "tensorgrad.tensor.Product.structural_graph": {"tf": 1.4142135623730951}, "tensorgrad.tensor.Sum.structural_graph": {"tf": 1.4142135623730951}}, "df": 15}}, "d": {"docs": {"tensorgrad.functions.max_grad": {"tf": 1.7320508075688772}}, "df": 1, "i": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "t": {"docs": {"tensorgrad.functions.max_grad": {"tf": 1}}, "df": 1}}}}}}, "o": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "p": {"docs": {"tensorgrad.tensor.Tensor.symmetries": {"tf": 1}}, "df": 1, "s": {"docs": {"tensorgrad.tensor.Constant.__init__": {"tf": 1}}, "df": 1}}}}}, "t": {"docs": {"tensorgrad.extras.to_latex.to_latex": {"tf": 1.4142135623730951}, "tensorgrad.functions.graph": {"tf": 6.48074069840786}, "tensorgrad.functions.sign": {"tf": 1}, "tensorgrad.functions.gt0": {"tf": 1}, "tensorgrad.functions.gt": {"tf": 1}, "tensorgrad.functions.max": {"tf": 1}, "tensorgrad.utils.DisjointSets": {"tf": 1.4142135623730951}}, "df": 7}, "e": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "r": {"docs": {"tensorgrad.extras.to_numpy.compile_to_callable": {"tf": 1}}, "df": 1}}, "e": {"docs": {"tensorgrad.extras.to_numpy.CodegenContext.fresh_name": {"tf": 1}, "tensorgrad.extras.to_pytorch.CodegenContext.fresh_name": {"tf": 1}}, "df": 2, "d": {"docs": {"tensorgrad.extras.to_numpy.compile_to_callable": {"tf": 2}, "tensorgrad.extras.to_numpy.CodegenContext": {"tf": 1}, "tensorgrad.extras.to_pytorch.compile_to_callable": {"tf": 1.7320508075688772}, "tensorgrad.tensor.Tensor.grad": {"tf": 1}, "tensorgrad.tensor.Derivative.__init__": {"tf": 1}}, "df": 5}}}, "l": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "z": {"docs": {}, "df": 0, "e": {"docs": {"tensorgrad.functions.inverse": {"tf": 1}}, "df": 1}}}}}, "i": {"docs": {}, "df": 0, "c": {"docs": {"tensorgrad.extras.to_tikz.depth_tracking_dispatcher": {"tf": 1}, "tensorgrad.extras.to_tikz.depth_tracking_dispatcher.register": {"tf": 1.4142135623730951}, "tensorgrad.utils.DisjointSets": {"tf": 2.449489742783178}}, "df": 3}}}}}, "t": {"docs": {"tensorgrad.functions.inverse": {"tf": 1}, "tensorgrad.tensor.Tensor.rename": {"tf": 1}, "tensorgrad.tensor.FunctionSignature": {"tf": 1.4142135623730951}, "tensorgrad.utils.KeyStoringDict": {"tf": 1}, "tensorgrad.utils.KeyStoringDict.get": {"tf": 1}}, "df": 5, "s": {"docs": {"tensorgrad.functions.max_grad": {"tf": 1}}, "df": 1}, "i": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "m": {"docs": {"tensorgrad.utils.DisjointSets": {"tf": 1}}, "df": 1}}}}}}, "l": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "b": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "l": {"docs": {"tensorgrad.functions.max": {"tf": 1}}, "df": 1}}}}}}, "c": {"0": {"docs": {"tensorgrad.extras.to_numpy.compile_to_callable": {"tf": 1}, "tensorgrad.extras.to_pytorch.compile_to_callable": {"tf": 1}}, "df": 2}, "docs": {"tensorgrad.tensor.Delta": {"tf": 1}, "tensorgrad.tensor.FunctionSignature": {"tf": 2}}, "df": 2, "o": {"docs": {}, "df": 0, "v": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "r": {"docs": {"tensorgrad.extras.expectation.Expectation.__init__": {"tf": 2.449489742783178}}, "df": 1, "i": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "e": {"docs": {"tensorgrad.extras.expectation.Expectation.__init__": {"tf": 1.7320508075688772}}, "df": 1}}}}}}}}, "p": {"docs": {}, "df": 0, "y": {"docs": {"tensorgrad.extras.expectation.Expectation.__init__": {"tf": 1}, "tensorgrad.utils.KeyStoringDict.copy": {"tf": 1}}, "df": 2}}, "m": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "e": {"docs": {"tensorgrad.functions.multi_dot": {"tf": 1}, "tensorgrad.functions.det": {"tf": 1}, "tensorgrad.tensor.FunctionSignature": {"tf": 1}}, "df": 3, "d": {"docs": {"tensorgrad.extras.expectation.Expectation.__init__": {"tf": 1}}, "df": 1}}}}, "a": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "e": {"docs": {"tensorgrad.tensor.Tensor.is_isomorphic": {"tf": 1}, "tensorgrad.tensor.Tensor.isomorphisms": {"tf": 1}}, "df": 2, "d": {"docs": {"tensorgrad.functions.graph": {"tf": 1}}, "df": 1}}}}, "o": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "s": {"docs": {"tensorgrad.tensor.Product.components": {"tf": 1.4142135623730951}}, "df": 1}}}}}}}, "b": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "e": {"docs": {"tensorgrad.extras.to_tikz.TikzGraph.add_edge": {"tf": 1}}, "df": 1}, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {"tensorgrad.utils.KeyStoringDict.__init__": {"tf": 1}}, "df": 1}}}}}}}}}, "n": {"docs": {}, "df": 0, "v": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "t": {"docs": {"tensorgrad.extras.to_latex.to_latex_indexed": {"tf": 1}, "tensorgrad.extras.to_latex.to_latex_index_free": {"tf": 1}}, "df": 2}}}, "o": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {"tensorgrad.functions.Convolution.__init__": {"tf": 2.23606797749979}}, "df": 1}}}}}}}}, "s": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "d": {"docs": {"tensorgrad.extras.to_tikz.TikzGraph.add_subgraph": {"tf": 1}}, "df": 1}}, "o": {"docs": {}, "df": 0, "r": {"docs": {"tensorgrad.utils.KeyStoringDict.__init__": {"tf": null}}, "df": 1}}}}}}, "a": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "t": {"docs": {"tensorgrad.functions.Convolution": {"tf": 1}, "tensorgrad.tensor.Constant": {"tf": 1}, "tensorgrad.tensor.Constant.__init__": {"tf": 1}}, "df": 3}}}}, "i": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "d": {"docs": {"tensorgrad.tensor.TensorMeta": {"tf": 1}}, "df": 1}}}}}}, "u": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "s": {"docs": {"tensorgrad.tensor.FunctionSignature": {"tf": 1.4142135623730951}}, "df": 1}}}}}, "n": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "t": {"docs": {"tensorgrad.functions.graph": {"tf": 1}}, "df": 1, "e": {"docs": {}, "df": 0, "d": {"docs": {"tensorgrad.extras.to_tikz.TikzGraph.handle_free_edges": {"tf": 1}}, "df": 1}}, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {"tensorgrad.functions.graph": {"tf": 1}}, "df": 1, "s": {"docs": {"tensorgrad.functions.graph": {"tf": 1}}, "df": 1}}}}, "s": {"docs": {"tensorgrad.functions.graph": {"tf": 1.4142135623730951}}, "df": 1}}}}}, "t": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "t": {"docs": {"tensorgrad.functions.dot": {"tf": 1}, "tensorgrad.functions.inverse": {"tf": 1}}, "df": 2, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {"tensorgrad.tensor.Rename": {"tf": 1}, "tensorgrad.tensor.Product": {"tf": 1}}, "df": 2, "s": {"docs": {"tensorgrad.functions.graph": {"tf": 1}}, "df": 1}}}}}}}, "o": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {"tensorgrad.tensor.Tensor.simplify": {"tf": 1}}, "df": 1}}}}}}}}, "c": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "e": {"docs": {"tensorgrad.functions.concat": {"tf": 1}}, "df": 1}}}}}}}, "r": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "e": {"docs": {"tensorgrad.tensor.TensorMeta": {"tf": 1}}, "df": 1}}}}, "e": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "y": {"docs": {"tensorgrad.tensor.FunctionSignature": {"tf": 1}}, "df": 1}}}}}}}}}}, "d": {"docs": {}, "df": 0, "e": {"docs": {"tensorgrad.extras.to_numpy.compile_to_callable": {"tf": 1}, "tensorgrad.extras.to_numpy.CodegenContext": {"tf": 1}, "tensorgrad.extras.to_pytorch.CodegenContext": {"tf": 1}, "tensorgrad.extras.to_tikz.to_tikz": {"tf": 1}}, "df": 4}}, "r": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {"tensorgrad.functions.graph": {"tf": 1}}, "df": 1}}}}}}}}}}}, "u": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "d": {"docs": {"tensorgrad.functions.inverse": {"tf": 1}, "tensorgrad.tensor.FunctionSignature": {"tf": 1}}, "df": 2}}}}, "l": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "s": {"docs": {"tensorgrad.extras.expectation.Expectation.__init__": {"tf": 1}, "tensorgrad.tensor.TensorMeta": {"tf": 1}, "tensorgrad.tensor.FunctionSignature": {"tf": 1.4142135623730951}, "tensorgrad.utils.DisjointSets": {"tf": 2}, "tensorgrad.utils.KeyStoringDict": {"tf": 1}}, "df": 5, "i": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "l": {"docs": {"tensorgrad.extras.to_latex.to_latex_index_free": {"tf": 1}}, "df": 1}}}}, "e": {"docs": {}, "df": 0, "s": {"docs": {"tensorgrad.tensor.TensorMeta": {"tf": 1.7320508075688772}, "tensorgrad.utils.DisjointSets": {"tf": 1.4142135623730951}}, "df": 2}}}, "h": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "s": {"docs": {"tensorgrad.tensor.Tensor.rename": {"tf": 1}}, "df": 1}}}}}, "s": {"docs": {"tensorgrad.extras.to_tikz.depth_tracking_dispatcher.register": {"tf": 1.4142135623730951}}, "df": 1}, "u": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {"tensorgrad.extras.to_tikz.TikzGraph.add_subgraph": {"tf": 1}}, "df": 1}}}}}}, "r": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "e": {"docs": {"tensorgrad.extras.expectation.Expectation.structural_graph": {"tf": 1}, "tensorgrad.extras.to_tikz.TikzGraph.handle_free_edges": {"tf": 1}, "tensorgrad.functions.graph": {"tf": 1}, "tensorgrad.functions.repeat": {"tf": 1}, "tensorgrad.tensor.TensorMeta": {"tf": 1}, "tensorgrad.tensor.Tensor.structural_graph": {"tf": 1}, "tensorgrad.tensor.Variable.structural_graph": {"tf": 1}, "tensorgrad.tensor.Rename.structural_graph": {"tf": 1}, "tensorgrad.tensor.Constant.structural_graph": {"tf": 1}, "tensorgrad.tensor.Delta.structural_graph": {"tf": 1}, "tensorgrad.tensor.function": {"tf": 1}, "tensorgrad.tensor.Function.structural_graph": {"tf": 1}, "tensorgrad.tensor.Derivative.structural_graph": {"tf": 1}, "tensorgrad.tensor.Product.structural_graph": {"tf": 1}, "tensorgrad.tensor.Sum.structural_graph": {"tf": 1}}, "df": 15, "d": {"docs": {"tensorgrad.functions.graph": {"tf": 1}, "tensorgrad.tensor.Tensor.grad": {"tf": 1}, "tensorgrad.tensor.FunctionSignature.derivative": {"tf": 1}}, "df": 3}, "s": {"docs": {"tensorgrad.functions.diag": {"tf": 1.4142135623730951}}, "df": 1}}}}}, "o": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "s": {"docs": {"tensorgrad.tensor.FunctionSignature": {"tf": 1.4142135623730951}}, "df": 1, "e": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "y": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "g": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "e": {"docs": {"tensorgrad.tensor.FunctionSignature": {"tf": 1}}, "df": 1}}}}}}}}}}}}}}}}}}}}, "a": {"docs": {}, "df": 0, "n": {"docs": {"tensorgrad.extras.expectation.Expectation.structural_graph": {"tf": 1}, "tensorgrad.functions.graph": {"tf": 1.4142135623730951}, "tensorgrad.functions.repeat": {"tf": 1}, "tensorgrad.tensor.TensorMeta": {"tf": 1.4142135623730951}, "tensorgrad.tensor.Tensor.rename": {"tf": 1}, "tensorgrad.tensor.Tensor.structural_graph": {"tf": 1}, "tensorgrad.tensor.Variable.structural_graph": {"tf": 1}, "tensorgrad.tensor.Rename.structural_graph": {"tf": 1}, "tensorgrad.tensor.Constant.structural_graph": {"tf": 1}, "tensorgrad.tensor.Delta.structural_graph": {"tf": 1}, "tensorgrad.tensor.FunctionSignature.simplify": {"tf": 1}, "tensorgrad.tensor.Function.structural_graph": {"tf": 1}, "tensorgrad.tensor.Derivative.structural_graph": {"tf": 1}, "tensorgrad.tensor.Product.structural_graph": {"tf": 1}, "tensorgrad.tensor.Sum.structural_graph": {"tf": 1}, "tensorgrad.utils.DisjointSets": {"tf": 1}, "tensorgrad.utils.KeyStoringDict": {"tf": 1}, "tensorgrad.utils.KeyStoringDict.__init__": {"tf": 1}}, "df": 18, "c": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "l": {"docs": {"tensorgrad.functions.inverse": {"tf": 1}}, "df": 1}}}}, "l": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "b": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "e": {"docs": {"tensorgrad.extras.to_numpy.compile_to_callable": {"tf": 1}, "tensorgrad.extras.to_pytorch.compile_to_callable": {"tf": 1}, "tensorgrad.tensor.TensorMeta": {"tf": 1}}, "df": 3, "s": {"docs": {"tensorgrad.extras.to_tikz.depth_tracking_dispatcher": {"tf": 1}}, "df": 1}}}}}, "e": {"docs": {}, "df": 0, "d": {"docs": {"tensorgrad.extras.to_numpy.CodegenContext.fresh_name": {"tf": 1}, "tensorgrad.extras.to_pytorch.CodegenContext.fresh_name": {"tf": 1}}, "df": 2}}, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {"tensorgrad.tensor.Tensor.__init__": {"tf": 1}}, "df": 1}}}}}, "c": {"docs": {}, "df": 0, "h": {"docs": {}, "df": 0, "e": {"docs": {"tensorgrad.extras.to_pytorch.CodegenContext": {"tf": 1}}, "df": 1, "s": {"docs": {"tensorgrad.extras.to_numpy.CodegenContext": {"tf": 1}}, "df": 1}}}}, "p": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "e": {"docs": {"tensorgrad.tensor.FunctionSignature": {"tf": 1}}, "df": 1}}}}}}, "h": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "k": {"docs": {"tensorgrad.extras.expectation.Expectation.depends_on": {"tf": 1}, "tensorgrad.tensor.Tensor.depends_on": {"tf": 1}, "tensorgrad.tensor.Variable.depends_on": {"tf": 1}, "tensorgrad.tensor.Rename.depends_on": {"tf": 1}, "tensorgrad.tensor.Constant.depends_on": {"tf": 1}, "tensorgrad.tensor.Function.depends_on": {"tf": 1}, "tensorgrad.tensor.Derivative.depends_on": {"tf": 1}, "tensorgrad.tensor.Product.depends_on": {"tf": 1}, "tensorgrad.tensor.Sum.depends_on": {"tf": 1}}, "df": 9, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {"tensorgrad.extras.to_numpy.CodegenContext.declare_dimension": {"tf": 1}}, "df": 1}}}}}}, "a": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {}, "df": 0, "e": {"docs": {"tensorgrad.tensor.Tensor.simplify": {"tf": 1}, "tensorgrad.tensor.Rename": {"tf": 1}}, "df": 2, "s": {"docs": {"tensorgrad.tensor.Tensor.full_simplify": {"tf": 1}}, "df": 1}}}}}}, "[": {"docs": {}, "df": 0, "i": {"docs": {"tensorgrad.functions.Convolution.__init__": {"tf": 1.4142135623730951}}, "df": 1}}, "u": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "y": {"docs": {"tensorgrad.functions.Convolution.__init__": {"tf": 1}}, "df": 1}}}}}}}, "s": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "m": {"docs": {"tensorgrad.tensor.FunctionSignature.simplify": {"tf": 1}}, "df": 1}}}}}, "e": {"docs": {"tensorgrad.tensor.FunctionSignature": {"tf": 2.23606797749979}}, "df": 1}}, "s": {"docs": {"tensorgrad.extras.to_numpy.CodegenContext.declare_dimension": {"tf": 1.4142135623730951}, "tensorgrad.extras.to_pytorch.CodegenContext.declare_dimension": {"tf": 1.4142135623730951}, "tensorgrad.extras.to_pytorch.permute": {"tf": 1}, "tensorgrad.extras.to_tikz.TikzGraph.add_edge": {"tf": 1}, "tensorgrad.extras.to_tikz.TikzGraph.add_subgraph": {"tf": 1}, "tensorgrad.functions.sign": {"tf": 1}, "tensorgrad.functions.gt0": {"tf": 1}, "tensorgrad.functions.max": {"tf": 1}, "tensorgrad.tensor.Delta": {"tf": 1}, "tensorgrad.utils.DisjointSets": {"tf": 1}, "tensorgrad.utils.KeyStoringDict.__init__": {"tf": 1}}, "df": 11, "h": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "d": {"docs": {"tensorgrad.extras.expectation.Expectation.__init__": {"tf": 1.7320508075688772}, "tensorgrad.extras.expectation.Expectation.structural_graph": {"tf": 1}, "tensorgrad.tensor.Tensor.simplify": {"tf": 1}, "tensorgrad.tensor.Tensor.structural_graph": {"tf": 1}, "tensorgrad.tensor.Variable.structural_graph": {"tf": 1}, "tensorgrad.tensor.Rename.structural_graph": {"tf": 1}, "tensorgrad.tensor.Constant.structural_graph": {"tf": 1}, "tensorgrad.tensor.Delta.structural_graph": {"tf": 1}, "tensorgrad.tensor.Function.structural_graph": {"tf": 1}, "tensorgrad.tensor.Derivative.structural_graph": {"tf": 1}, "tensorgrad.tensor.Product.structural_graph": {"tf": 1}, "tensorgrad.tensor.Sum.structural_graph": {"tf": 1}}, "df": 12}}}, "w": {"docs": {"tensorgrad.tensor.TensorMeta": {"tf": 1}}, "df": 1, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {"tensorgrad.tensor.Tensor.graph_to_string": {"tf": 1}}, "df": 1}}}}, "r": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "t": {"docs": {"tensorgrad.tensor.Tensor.__init__": {"tf": 1}}, "df": 1}}}}}}, "a": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "e": {"0": {"docs": {"tensorgrad.tensor.Variable.__init__": {"tf": 1}, "tensorgrad.tensor.Constant.__init__": {"tf": 1}}, "df": 2}, "1": {"docs": {"tensorgrad.tensor.Variable.__init__": {"tf": 1}, "tensorgrad.tensor.Constant.__init__": {"tf": 1}}, "df": 2}, "docs": {"tensorgrad.functions.Reshape": {"tf": 1}, "tensorgrad.tensor.FunctionSignature": {"tf": 3.3166247903554}, "tensorgrad.tensor.function": {"tf": 1.4142135623730951}, "tensorgrad.tensor.Function": {"tf": 1}, "tensorgrad.tensor.Function.__init__": {"tf": 1}}, "df": 5, "s": {"docs": {"tensorgrad.extras.to_numpy.compile_to_callable": {"tf": 1.4142135623730951}}, "df": 1}}}, "r": {"docs": {}, "df": 0, "e": {"docs": {"tensorgrad.tensor.FunctionSignature": {"tf": 1.7320508075688772}}, "df": 1, "d": {"docs": {"tensorgrad.functions.dot": {"tf": 1}, "tensorgrad.tensor.FunctionSignature": {"tf": 1.4142135623730951}}, "df": 2}}}, "l": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "w": {"docs": {"tensorgrad.utils.KeyStoringDict.copy": {"tf": 1}}, "df": 1}}}}}}, "a": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "e": {"docs": {"tensorgrad.extras.expectation.Expectation.__init__": {"tf": 1}, "tensorgrad.functions.diag": {"tf": 1}, "tensorgrad.functions.inverse": {"tf": 1}, "tensorgrad.tensor.Tensor.order": {"tf": 1}}, "df": 4}}}, "t": {"docs": {}, "df": 0, "r": {"docs": {"tensorgrad.extras.expectation.Expectation.__init__": {"tf": 1}, "tensorgrad.extras.to_numpy.CodegenContext.declare_dimension": {"tf": 1}, "tensorgrad.extras.to_pytorch.CodegenContext.declare_dimension": {"tf": 1}, "tensorgrad.functions.graph": {"tf": 1}, "tensorgrad.tensor.FunctionSignature": {"tf": 1}}, "df": 5, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {"tensorgrad.extras.to_numpy.CodegenContext.declare_dimension": {"tf": 1}, "tensorgrad.extras.to_numpy.permute_code": {"tf": 1}, "tensorgrad.extras.to_pytorch.CodegenContext.declare_dimension": {"tf": 1}, "tensorgrad.extras.to_pytorch.permute": {"tf": 1}, "tensorgrad.extras.to_tikz.NodeRef": {"tf": 1}, "tensorgrad.functions.graph": {"tf": 1}, "tensorgrad.functions.dot": {"tf": 1}, "tensorgrad.tensor.Tensor.weisfeiler_lehman": {"tf": 1}, "tensorgrad.tensor.Tensor.graph_to_string": {"tf": 1}, "tensorgrad.tensor.Variable.__init__": {"tf": 1}, "tensorgrad.tensor.FunctionSignature": {"tf": 1}, "tensorgrad.tensor.function": {"tf": 1}, "tensorgrad.tensor.Function.__init__": {"tf": 1}}, "df": 13, "s": {"docs": {"tensorgrad.functions.dot": {"tf": 1}}, "df": 1}}}, "d": {"docs": {}, "df": 0, "e": {"docs": {"tensorgrad.functions.Convolution.__init__": {"tf": 1.7320508075688772}}, "df": 1}}}, "u": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "l": {"docs": {"tensorgrad.tensor.Tensor.edge_structural_graph": {"tf": 1}, "tensorgrad.tensor.Tensor.graph_to_string": {"tf": 1}}, "df": 2}}, "e": {"docs": {"tensorgrad.tensor.Tensor.graph_to_string": {"tf": 1}, "tensorgrad.tensor.FunctionSignature": {"tf": 1}}, "df": 2}}}}}}}, "y": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "e": {"docs": {"tensorgrad.extras.to_latex.to_latex_indexed": {"tf": 1}, "tensorgrad.extras.to_latex.to_latex": {"tf": 1}, "tensorgrad.extras.to_tikz.NodeRef": {"tf": 1.4142135623730951}, "tensorgrad.extras.to_tikz.TikzGraph.add_edge": {"tf": 1}}, "df": 4, "s": {"docs": {"tensorgrad.extras.to_tikz.TikzGraph.add_edge": {"tf": 1}}, "df": 1}}}}, "o": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "e": {"docs": {"tensorgrad.utils.KeyStoringDict": {"tf": 1}}, "df": 1, "d": {"docs": {"tensorgrad.extras.to_tikz.TikzGraph.add_edge": {"tf": 1}, "tensorgrad.utils.KeyStoringDict": {"tf": 1}, "tensorgrad.utils.KeyStoringDict.get_with_key": {"tf": 1}}, "df": 3}, "s": {"docs": {"tensorgrad.utils.KeyStoringDict": {"tf": 1}}, "df": 1}}}}, "a": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {"tensorgrad.functions.graph": {"tf": 1}}, "df": 1}}}, "s": {"docs": {"tensorgrad.tensor.function": {"tf": 1}}, "df": 1}}}}, "e": {"docs": {}, "df": 0, "p": {"docs": {"tensorgrad.tensor.Tensor.grad": {"tf": 1}}, "df": 1}}}, "y": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "y": {"docs": {"tensorgrad.extras.to_numpy.compile_to_callable": {"tf": 1}, "tensorgrad.extras.to_numpy.CodegenContext.declare_dimension": {"tf": 1}, "tensorgrad.extras.to_pytorch.compile_to_callable": {"tf": 1}, "tensorgrad.extras.to_pytorch.CodegenContext": {"tf": 1}, "tensorgrad.extras.to_pytorch.CodegenContext.declare_dimension": {"tf": 1}, "tensorgrad.tensor.Variable.__init__": {"tf": 1}, "tensorgrad.tensor.Constant.__init__": {"tf": 1}}, "df": 7}}, "b": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "l": {"docs": {"tensorgrad.extras.to_numpy.compile_to_callable": {"tf": 1.4142135623730951}, "tensorgrad.extras.to_numpy.CodegenContext.declare_dimension": {"tf": 1.7320508075688772}, "tensorgrad.extras.to_pytorch.compile_to_callable": {"tf": 2}, "tensorgrad.extras.to_pytorch.CodegenContext.declare_dimension": {"tf": 2}}, "df": 4, "s": {"docs": {"tensorgrad.extras.to_numpy.compile_to_callable": {"tf": 1}, "tensorgrad.extras.to_pytorch.CodegenContext": {"tf": 1}, "tensorgrad.extras.to_pytorch.CodegenContext.declare_dimension": {"tf": 1}, "tensorgrad.functions.graph": {"tf": 2}, "tensorgrad.tensor.Variable.__init__": {"tf": 1}, "tensorgrad.tensor.Constant.__init__": {"tf": 1}}, "df": 6}, "i": {"docs": {}, "df": 0, "c": {"docs": {"tensorgrad.tensor.FunctionSignature": {"tf": 1}}, "df": 1, "a": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "y": {"docs": {"tensorgrad.tensor.FunctionSignature": {"tf": 1}}, "df": 1}}}}}}}}}, "m": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "s": {"docs": {"tensorgrad.tensor.Variable.__init__": {"tf": 1.4142135623730951}, "tensorgrad.tensor.Constant.__init__": {"tf": 1}}, "df": 2}}}, "y": {"docs": {"tensorgrad.tensor.Constant.__init__": {"tf": 1}}, "df": 1}}}}}}, "n": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "x": {"docs": {"tensorgrad.functions.graph": {"tf": 2}}, "df": 1}}}}}, "i": {"docs": {}, "df": 0, "z": {"docs": {}, "df": 0, "e": {"docs": {"tensorgrad.functions.diag": {"tf": 1}, "tensorgrad.functions.Convolution.__init__": {"tf": 2}, "tensorgrad.tensor.Delta.__init__": {"tf": 1.4142135623730951}, "tensorgrad.tensor.FunctionSignature": {"tf": 1}}, "df": 4, "s": {"docs": {"tensorgrad.extras.to_numpy.compile_to_callable": {"tf": 1}, "tensorgrad.functions.graph": {"tf": 1}, "tensorgrad.tensor.function": {"tf": 1}, "tensorgrad.tensor.Function": {"tf": 1}}, "df": 4}, "/": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {"tensorgrad.tensor.Delta": {"tf": 1}}, "df": 1}}}}}}}}}}}}, "g": {"docs": {}, "df": 0, "n": {"docs": {"tensorgrad.functions.sign": {"tf": 1}}, "df": 1, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "e": {"docs": {"tensorgrad.extras.to_numpy.compile_to_callable": {"tf": 1}, "tensorgrad.tensor.FunctionSignature": {"tf": 1}, "tensorgrad.tensor.FunctionSignature.simplify": {"tf": 1}, "tensorgrad.tensor.Function": {"tf": 1}, "tensorgrad.tensor.Function.__init__": {"tf": 1}}, "df": 5}}}}}}, "m": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "d": {"docs": {"tensorgrad.functions.sigmoid": {"tf": 1}}, "df": 1}}}}}, "n": {"docs": {}, "df": 0, "g": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "e": {"docs": {"tensorgrad.extras.to_tikz.depth_tracking_dispatcher": {"tf": 1}, "tensorgrad.extras.to_tikz.TikzGraph.add_node": {"tf": 1}, "tensorgrad.tensor.Rename.merge_renames": {"tf": 1}}, "df": 3}}}}, "m": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "r": {"docs": {"tensorgrad.functions.graph": {"tf": 1}, "tensorgrad.utils.KeyStoringDict.__init__": {"tf": 1}}, "df": 2}}}}, "p": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "f": {"docs": {}, "df": 0, "y": {"docs": {"tensorgrad.tensor.Tensor.grad": {"tf": 1}, "tensorgrad.tensor.FunctionSignature": {"tf": 1}}, "df": 2}, "i": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {"tensorgrad.tensor.Tensor.simplify": {"tf": 1.4142135623730951}, "tensorgrad.tensor.Tensor.full_simplify": {"tf": 1}}, "df": 2, "s": {"docs": {"tensorgrad.tensor.FunctionSignature.simplify": {"tf": 1}}, "df": 1}}}}}}}, "e": {"docs": {}, "df": 0, "d": {"docs": {"tensorgrad.tensor.Tensor.simplify": {"tf": 1}}, "df": 1}, "s": {"docs": {"tensorgrad.tensor.Delta.simplify_outer": {"tf": 1}, "tensorgrad.tensor.FunctionSignature.simplify": {"tf": 1}}, "df": 2}}}}}}}}}, "o": {"docs": {"tensorgrad.extras.to_tikz.TikzGraph.handle_free_edges": {"tf": 1}, "tensorgrad.tensor.FunctionSignature": {"tf": 1}, "tensorgrad.tensor.Product.merge": {"tf": 1}}, "df": 3, "r": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "s": {"docs": {"tensorgrad.extras.to_numpy.compile_to_callable": {"tf": 1}}, "df": 1}, "e": {"docs": {}, "df": 0, "d": {"docs": {"tensorgrad.extras.to_pytorch.compile_to_callable": {"tf": 1}}, "df": 1}}}}, "m": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "h": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {"tensorgrad.extras.to_numpy.compile_to_callable": {"tf": 1}}, "df": 1}}}}, "i": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "s": {"docs": {"tensorgrad.tensor.Rename": {"tf": 1}}, "df": 1}}}}}}}, "u": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "e": {"docs": {"tensorgrad.extras.to_numpy.permute_code": {"tf": 1}}, "df": 1}}}}, "f": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "x": {"docs": {"tensorgrad.tensor.FunctionSignature": {"tf": 1}}, "df": 1}}}}}}, "e": {"docs": {}, "df": 0, "t": {"docs": {"tensorgrad.extras.to_pytorch.CodegenContext": {"tf": 1.4142135623730951}, "tensorgrad.tensor.Tensor.edges": {"tf": 1}, "tensorgrad.tensor.Variable.__init__": {"tf": 1}, "tensorgrad.tensor.FunctionSignature": {"tf": 1}}, "df": 4, "[": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "r": {"docs": {"tensorgrad.tensor.FunctionSignature": {"tf": 1}}, "df": 1}}}}}, "l": {"docs": {}, "df": 0, "f": {"docs": {"tensorgrad.extras.to_pytorch.CodegenContext.declare_dimension": {"tf": 1}, "tensorgrad.tensor.Tensor.isomorphisms": {"tf": 1.4142135623730951}, "tensorgrad.utils.DisjointSets": {"tf": 1}, "tensorgrad.utils.KeyStoringDict": {"tf": 1}}, "df": 4}, "e": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "d": {"docs": {"tensorgrad.functions.inverse": {"tf": 1}}, "df": 1}}}}}}, "e": {"docs": {}, "df": 0, "n": {"docs": {"tensorgrad.extras.to_pytorch.CodegenContext.declare_dimension": {"tf": 1}}, "df": 1}}, "c": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "d": {"docs": {"tensorgrad.extras.to_tikz.TikzGraph.add_edge": {"tf": 1}, "tensorgrad.functions.dot": {"tf": 1}, "tensorgrad.tensor.FunctionSignature": {"tf": 1}}, "df": 3}}}}, "p": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "d": {"docs": {"tensorgrad.functions.graph": {"tf": 1.4142135623730951}}, "df": 1}}}}}}}, "m": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "s": {"docs": {"tensorgrad.functions.graph": {"tf": 1}}, "df": 1}}}}}}}}, "v": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "l": {"docs": {"tensorgrad.tensor.Rename.merge_renames": {"tf": 1}, "tensorgrad.tensor.Product": {"tf": 1}, "tensorgrad.tensor.Product.merge": {"tf": 1}, "tensorgrad.tensor.Sum": {"tf": 1}}, "df": 4}}}}}, "r": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "s": {"docs": {"tensorgrad.tensor.FunctionSignature": {"tf": 1}}, "df": 1}}}}, "q": {"docs": {"tensorgrad.tensor.FunctionSignature": {"tf": 2.23606797749979}}, "df": 1, "u": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "e": {"docs": {"tensorgrad.tensor.function": {"tf": 1}}, "df": 1}}}}}}}, "u": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "t": {"docs": {"tensorgrad.functions.Convolution.__init__": {"tf": 1}}, "df": 1, "s": {"docs": {"tensorgrad.extras.to_tikz.depth_tracking_dispatcher": {"tf": 1}}, "df": 1}}}, "s": {"docs": {}, "df": 0, "e": {"docs": {"tensorgrad.tensor.FunctionSignature": {"tf": 2}}, "df": 1}}}}, "e": {"docs": {}, "df": 0, "r": {"docs": {"tensorgrad.tensor.TensorMeta": {"tf": 1}}, "df": 1}}}, "b": {"docs": {}, "df": 0, "g": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "h": {"docs": {"tensorgrad.extras.to_tikz.TikzGraph.add_subgraph": {"tf": 2}}, "df": 1, "s": {"docs": {"tensorgrad.tensor.Product.components": {"tf": 1}}, "df": 1}}}, "d": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "t": {"docs": {"tensorgrad.functions.max_grad": {"tf": 1}}, "df": 1}}}}}}}}, "c": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "d": {"docs": {"tensorgrad.tensor.TensorMeta": {"tf": 1}}, "df": 1}, "s": {"docs": {"tensorgrad.tensor.TensorMeta": {"tf": 1.4142135623730951}, "tensorgrad.tensor.FunctionSignature": {"tf": 1}, "tensorgrad.tensor.FunctionSignature.simplify": {"tf": 1}}, "df": 3}}}}}}}}, "m": {"docs": {"tensorgrad.functions.symmetrize": {"tf": 1}, "tensorgrad.functions.sum": {"tf": 1}, "tensorgrad.tensor.Sum": {"tf": 1}, "tensorgrad.tensor.Sum.__init__": {"tf": 1.4142135623730951}}, "df": 4, "s": {"docs": {"tensorgrad.extras.to_tikz.format_weight": {"tf": 1}, "tensorgrad.extras.to_tikz.format_function": {"tf": 1}}, "df": 2}}, "c": {"docs": {}, "df": 0, "h": {"docs": {"tensorgrad.functions.graph": {"tf": 1}, "tensorgrad.functions.Convolution.__init__": {"tf": 1}, "tensorgrad.tensor.Zero": {"tf": 1}, "tensorgrad.tensor.Ones": {"tf": 1}}, "df": 4}}}, "c": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "e": {"docs": {"tensorgrad.extras.to_tikz.TikzGraph.add_subgraph": {"tf": 1}}, "df": 1}}}, "a": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "r": {"docs": {"tensorgrad.tensor.FunctionSignature": {"tf": 1}}, "df": 1}}}}}, "m": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "l": {"docs": {"tensorgrad.extras.to_tikz.format_weight": {"tf": 1}, "tensorgrad.extras.to_tikz.format_function": {"tf": 1}}, "df": 2}}}}, "w": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "h": {"docs": {"tensorgrad.extras.to_tikz.choose_layout": {"tf": 1}}, "df": 1}}}}}, "p": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "f": {"docs": {}, "df": 0, "y": {"docs": {"tensorgrad.functions.graph": {"tf": 1}}, "df": 1}, "i": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {"tensorgrad.functions.graph": {"tf": 1}}, "df": 1, "s": {"docs": {"tensorgrad.functions.graph": {"tf": 1}}, "df": 1}}}}}}}}}}}}, "l": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {"tensorgrad.functions.max_grad": {"tf": 1}, "tensorgrad.functions.max": {"tf": 1}}, "df": 2}}}}}}}}, "q": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "e": {"docs": {"tensorgrad.functions.det": {"tf": 1}}, "df": 1, "d": {"docs": {"tensorgrad.functions.graph": {"tf": 1}}, "df": 1}}}}}, "r": {"docs": {}, "df": 0, "t": {"docs": {"tensorgrad.functions.sqrt": {"tf": 1}}, "df": 1}}}}, "b": {"docs": {"tensorgrad.functions.graph": {"tf": 3.1622776601683795}, "tensorgrad.functions.repeat": {"tf": 1}, "tensorgrad.tensor.FunctionSignature": {"tf": 4.58257569495584}}, "df": 3, "e": {"docs": {"tensorgrad.extras.expectation.Expectation.__init__": {"tf": 1.4142135623730951}, "tensorgrad.extras.expectation.Expectation.structural_graph": {"tf": 1.4142135623730951}, "tensorgrad.extras.to_numpy.compile_to_callable": {"tf": 1}, "tensorgrad.functions.graph": {"tf": 1}, "tensorgrad.functions.inverse": {"tf": 1}, "tensorgrad.functions.Convolution.__init__": {"tf": 1.7320508075688772}, "tensorgrad.tensor.TensorMeta": {"tf": 1.7320508075688772}, "tensorgrad.tensor.Tensor.grad": {"tf": 1}, "tensorgrad.tensor.Tensor.rename": {"tf": 1}, "tensorgrad.tensor.Tensor.structural_graph": {"tf": 1.4142135623730951}, "tensorgrad.tensor.Variable.structural_graph": {"tf": 1.4142135623730951}, "tensorgrad.tensor.Rename.__init__": {"tf": 1}, "tensorgrad.tensor.Rename.structural_graph": {"tf": 1.4142135623730951}, "tensorgrad.tensor.Constant.structural_graph": {"tf": 1.4142135623730951}, "tensorgrad.tensor.Delta.simplify_outer": {"tf": 1}, "tensorgrad.tensor.Delta.structural_graph": {"tf": 1.4142135623730951}, "tensorgrad.tensor.FunctionSignature": {"tf": 1.4142135623730951}, "tensorgrad.tensor.Function.structural_graph": {"tf": 1.4142135623730951}, "tensorgrad.tensor.Derivative.__init__": {"tf": 1}, "tensorgrad.tensor.Derivative.structural_graph": {"tf": 1.4142135623730951}, "tensorgrad.tensor.Product.__init__": {"tf": 1}, "tensorgrad.tensor.Product.structural_graph": {"tf": 1.4142135623730951}, "tensorgrad.tensor.Sum.structural_graph": {"tf": 1.4142135623730951}, "tensorgrad.utils.DisjointSets": {"tf": 1.4142135623730951}}, "df": 24, "t": {"docs": {}, "df": 0, "w": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "n": {"docs": {"tensorgrad.extras.to_tikz.TikzGraph.add_edge": {"tf": 1}, "tensorgrad.functions.graph": {"tf": 1}, "tensorgrad.tensor.Tensor.isomorphisms": {"tf": 1}, "tensorgrad.tensor.FunctionSignature": {"tf": 1}}, "df": 4}}}}}, "e": {"docs": {}, "df": 0, "n": {"docs": {"tensorgrad.extras.to_tikz.TikzGraph.add_subgraph": {"tf": 1}, "tensorgrad.utils.DisjointSets": {"tf": 1}}, "df": 2}}}, "y": {"docs": {"tensorgrad.extras.to_latex.to_latex_indexed": {"tf": 1}, "tensorgrad.extras.to_numpy.compile_to_callable": {"tf": 1}, "tensorgrad.extras.to_pytorch.compile_to_callable": {"tf": 1}, "tensorgrad.extras.to_tikz.choose_layout": {"tf": 1}, "tensorgrad.functions.graph": {"tf": 2.23606797749979}, "tensorgrad.functions.max": {"tf": 1}, "tensorgrad.tensor.TensorMeta": {"tf": 1.4142135623730951}, "tensorgrad.tensor.Tensor.grad": {"tf": 1}, "tensorgrad.tensor.Delta": {"tf": 1}, "tensorgrad.tensor.FunctionSignature": {"tf": 1.4142135623730951}, "tensorgrad.tensor.function": {"tf": 1}}, "df": 11}, "a": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "e": {"docs": {"tensorgrad.tensor.TensorMeta": {"tf": 1}, "tensorgrad.tensor.FunctionSignature": {"tf": 1}, "tensorgrad.utils.DisjointSets": {"tf": 1}}, "df": 3, "d": {"docs": {"tensorgrad.extras.to_latex.to_latex": {"tf": 1}, "tensorgrad.tensor.Tensor.grad": {"tf": 1}}, "df": 2}}, "i": {"docs": {}, "df": 0, "s": {"docs": {"tensorgrad.tensor.Delta": {"tf": 1}}, "df": 1}}}, "t": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "h": {"docs": {"tensorgrad.extras.to_numpy.compile_to_callable": {"tf": 1}, "tensorgrad.extras.to_pytorch.compile_to_callable": {"tf": 1}, "tensorgrad.functions.repeat": {"tf": 1}, "tensorgrad.tensor.FunctionSignature": {"tf": 1}}, "df": 4}}}}, "u": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "d": {"docs": {"tensorgrad.extras.to_numpy.compile_to_callable": {"tf": 1}, "tensorgrad.extras.to_pytorch.compile_to_callable": {"tf": 1}, "tensorgrad.tensor.Tensor.edge_structural_graph": {"tf": 1}}, "df": 3}, "t": {"docs": {"tensorgrad.tensor.TensorMeta": {"tf": 1.4142135623730951}}, "df": 1}}}, "t": {"docs": {"tensorgrad.functions.inverse": {"tf": 1}, "tensorgrad.functions.Convolution.__init__": {"tf": 1}, "tensorgrad.functions.Reshape": {"tf": 1}, "tensorgrad.tensor.TensorMeta": {"tf": 1}, "tensorgrad.tensor.Tensor.simplify": {"tf": 1}, "tensorgrad.utils.KeyStoringDict": {"tf": 1}}, "df": 6}}, "o": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "h": {"docs": {"tensorgrad.extras.to_tikz.TikzGraph.add_edge": {"tf": 1}, "tensorgrad.tensor.FunctionSignature": {"tf": 1}}, "df": 2}}}, "l": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "k": {"docs": {"tensorgrad.extras.to_tikz.TikzGraph.add_subgraph": {"tf": 1}}, "df": 1}}}}, "r": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "t": {"docs": {"tensorgrad.tensor.FunctionSignature": {"tf": 1}}, "df": 1, "e": {"docs": {}, "df": 0, "d": {"docs": {"tensorgrad.functions.graph": {"tf": 1}, "tensorgrad.functions.max_grad": {"tf": 1.4142135623730951}, "tensorgrad.tensor.FunctionSignature": {"tf": 1}}, "df": 3}}, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {"tensorgrad.functions.dot": {"tf": 1}}, "df": 1}}}, "s": {"docs": {"tensorgrad.functions.inverse": {"tf": 1}}, "df": 1}}}}}}}}}}, "x": {"1": {"docs": {"tensorgrad.functions.graph": {"tf": 1.7320508075688772}}, "df": 1}, "2": {"docs": {"tensorgrad.functions.graph": {"tf": 1.7320508075688772}}, "df": 1}, "docs": {"tensorgrad.extras.expectation.Expectation.__init__": {"tf": 1}, "tensorgrad.extras.expectation.Expectation.depends_on": {"tf": 1}, "tensorgrad.extras.to_latex.to_latex_index_free": {"tf": 1.4142135623730951}, "tensorgrad.extras.to_tikz.format_label": {"tf": 1.4142135623730951}, "tensorgrad.functions.graph": {"tf": 4.242640687119285}, "tensorgrad.functions.gt": {"tf": 1.7320508075688772}, "tensorgrad.tensor.Tensor.grad": {"tf": 1.7320508075688772}, "tensorgrad.tensor.Tensor.depends_on": {"tf": 1}, "tensorgrad.tensor.Variable.depends_on": {"tf": 1}, "tensorgrad.tensor.Rename.depends_on": {"tf": 1}, "tensorgrad.tensor.Constant.depends_on": {"tf": 1}, "tensorgrad.tensor.FunctionSignature": {"tf": 2.23606797749979}, "tensorgrad.tensor.Function.depends_on": {"tf": 1}, "tensorgrad.tensor.Derivative.__init__": {"tf": 1}, "tensorgrad.tensor.Derivative.depends_on": {"tf": 1}, "tensorgrad.tensor.Product.depends_on": {"tf": 1}, "tensorgrad.tensor.Sum.depends_on": {"tf": 1}}, "df": 17, "^": {"docs": {}, "df": 0, "t": {"docs": {"tensorgrad.extras.expectation.Expectation.__init__": {"tf": 1}, "tensorgrad.extras.to_latex.to_latex_index_free": {"tf": 1}}, "df": 2}}, "+": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "s": {"docs": {"tensorgrad.functions.taylor": {"tf": 1}}, "df": 1}}}}}, "i": {"docs": {"tensorgrad.functions.graph": {"tf": 4.898979485566356}, "tensorgrad.functions.diag": {"tf": 1.4142135623730951}, "tensorgrad.functions.max_grad": {"tf": 2.8284271247461903}, "tensorgrad.functions.repeat": {"tf": 1.7320508075688772}, "tensorgrad.functions.Convolution.__init__": {"tf": 1.7320508075688772}, "tensorgrad.tensor.Delta": {"tf": 1.7320508075688772}, "tensorgrad.tensor.Zero": {"tf": 1.4142135623730951}, "tensorgrad.tensor.Ones": {"tf": 1.4142135623730951}, "tensorgrad.tensor.FunctionSignature": {"tf": 2.6457513110645907}, "tensorgrad.tensor.FunctionSignature.derivative": {"tf": 1}}, "df": 10, "n": {"docs": {"tensorgrad.extras.expectation.Expectation.__init__": {"tf": 1.4142135623730951}, "tensorgrad.extras.expectation.Expectation.structural_graph": {"tf": 1}, "tensorgrad.extras.to_latex.to_latex_indexed": {"tf": 1}, "tensorgrad.extras.to_numpy.compile_to_callable": {"tf": 1.4142135623730951}, "tensorgrad.extras.to_numpy.permute_code": {"tf": 1}, "tensorgrad.extras.to_pytorch.compile_to_callable": {"tf": 1}, "tensorgrad.extras.to_pytorch.CodegenContext.declare_dimension": {"tf": 1}, "tensorgrad.extras.to_tikz.NodeRef": {"tf": 1.4142135623730951}, "tensorgrad.extras.to_tikz.TikzGraph.add_edge": {"tf": 1}, "tensorgrad.extras.to_tikz.TikzGraph.add_subgraph": {"tf": 1}, "tensorgrad.extras.to_tikz.TikzGraph.handle_free_edges": {"tf": 1}, "tensorgrad.extras.to_tikz.format_weight": {"tf": 1}, "tensorgrad.extras.to_tikz.format_function": {"tf": 1}, "tensorgrad.functions.graph": {"tf": 1.7320508075688772}, "tensorgrad.functions.diag": {"tf": 1.4142135623730951}, "tensorgrad.functions.inverse": {"tf": 1}, "tensorgrad.tensor.TensorMeta": {"tf": 2}, "tensorgrad.tensor.Tensor.__init__": {"tf": 1}, "tensorgrad.tensor.Tensor.order": {"tf": 1}, "tensorgrad.tensor.Tensor.structural_graph": {"tf": 1}, "tensorgrad.tensor.Tensor.isomorphisms": {"tf": 1.4142135623730951}, "tensorgrad.tensor.Variable.structural_graph": {"tf": 1}, "tensorgrad.tensor.Rename.structural_graph": {"tf": 1}, "tensorgrad.tensor.Constant.structural_graph": {"tf": 1}, "tensorgrad.tensor.Delta.structural_graph": {"tf": 1}, "tensorgrad.tensor.FunctionSignature": {"tf": 2.23606797749979}, "tensorgrad.tensor.Function.structural_graph": {"tf": 1}, "tensorgrad.tensor.Derivative.structural_graph": {"tf": 1}, "tensorgrad.tensor.Product.structural_graph": {"tf": 1}, "tensorgrad.tensor.Sum.__init__": {"tf": 1}, "tensorgrad.tensor.Sum.structural_graph": {"tf": 1}, "tensorgrad.utils.KeyStoringDict": {"tf": 1}, "tensorgrad.utils.KeyStoringDict.__init__": {"tf": 1}}, "df": 33, "c": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "e": {"docs": {"tensorgrad.extras.expectation.Expectation.__init__": {"tf": 1}}, "df": 1}}}}, "o": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "t": {"docs": {"tensorgrad.functions.graph": {"tf": 1}}, "df": 1}}}}}}}}}}, "p": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "t": {"docs": {"tensorgrad.extras.expectation.Expectation.__init__": {"tf": 1}, "tensorgrad.functions.graph": {"tf": 1}, "tensorgrad.functions.inverse": {"tf": 1.4142135623730951}, "tensorgrad.functions.Convolution.__init__": {"tf": 1.4142135623730951}, "tensorgrad.tensor.Tensor.weisfeiler_lehman": {"tf": 1}, "tensorgrad.tensor.FunctionSignature": {"tf": 2.449489742783178}, "tensorgrad.tensor.FunctionSignature.derivative": {"tf": 1}, "tensorgrad.tensor.Function": {"tf": 1.4142135623730951}, "tensorgrad.tensor.Function.__init__": {"tf": 1.7320508075688772}}, "df": 9, "s": {"docs": {"tensorgrad.tensor.FunctionSignature": {"tf": 3.3166247903554}, "tensorgrad.tensor.function": {"tf": 1.4142135623730951}, "tensorgrad.tensor.Function": {"tf": 1}, "tensorgrad.tensor.Function.__init__": {"tf": 1}, "tensorgrad.tensor.Product.merge": {"tf": 1}}, "df": 5}}}}, "d": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "x": {"docs": {"tensorgrad.extras.to_latex.to_latex_indexed": {"tf": 1}, "tensorgrad.extras.to_latex.to_latex": {"tf": 1.7320508075688772}}, "df": 2}}, "i": {"docs": {}, "df": 0, "v": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "y": {"docs": {"tensorgrad.extras.to_tikz.TikzGraph.add_subgraph": {"tf": 1}}, "df": 1}}}}}}}}}}, "t": {"docs": {"tensorgrad.extras.to_numpy.compile_to_callable": {"tf": 1}, "tensorgrad.extras.to_pytorch.CodegenContext.declare_dimension": {"tf": 1}}, "df": 2, "e": {"docs": {}, "df": 0, "g": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {"tensorgrad.extras.to_numpy.CodegenContext.declare_dimension": {"tf": 1}, "tensorgrad.extras.to_pytorch.compile_to_callable": {"tf": 1}}, "df": 2}}}, "r": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "l": {"docs": {"tensorgrad.extras.to_tikz.NodeRef": {"tf": 1}}, "df": 1, "l": {"docs": {}, "df": 0, "y": {"docs": {"tensorgrad.utils.KeyStoringDict": {"tf": 1}}, "df": 1}}}}}}}, "o": {"docs": {"tensorgrad.extras.to_numpy.permute_code": {"tf": 1}, "tensorgrad.tensor.Rename.merge_renames": {"tf": 1}, "tensorgrad.tensor.Product.merge": {"tf": 1}, "tensorgrad.tensor.Product.components": {"tf": 1}}, "df": 4}, "u": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "v": {"docs": {}, "df": 0, "e": {"docs": {"tensorgrad.functions.graph": {"tf": 1}}, "df": 1}}}}}}, "r": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "s": {"docs": {"tensorgrad.tensor.FunctionSignature": {"tf": 1}}, "df": 1}}}}}}}}, "s": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "s": {"docs": {"tensorgrad.extras.to_numpy.compile_to_callable": {"tf": 1}}, "df": 1}}}}}, "t": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "e": {"docs": {"tensorgrad.extras.to_tikz.depth_tracking_dispatcher": {"tf": 1}}, "df": 1}}}}}, "e": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "t": {"docs": {"tensorgrad.extras.to_tikz.TikzGraph.add_subgraph": {"tf": 1}}, "df": 1}}}}, "v": {"docs": {"tensorgrad.functions.inverse": {"tf": 1}}, "df": 1, "i": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "b": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "e": {"docs": {"tensorgrad.extras.to_tikz.TikzGraph.handle_free_edges": {"tf": 1}}, "df": 1}}}}}}, "a": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "d": {"docs": {"tensorgrad.functions.graph": {"tf": 1.4142135623730951}}, "df": 1}}}}, "e": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "e": {"docs": {"tensorgrad.functions.inverse": {"tf": 1.7320508075688772}}, "df": 1}}}}}, "n": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {"tensorgrad.tensor.Tensor.rename": {"tf": 1}, "tensorgrad.tensor.Tensor.simplify": {"tf": 1}, "tensorgrad.tensor.Rename": {"tf": 1.4142135623730951}, "tensorgrad.tensor.Rename.__init__": {"tf": 1}, "tensorgrad.tensor.Product.merge": {"tf": 1}}, "df": 5}}}, "i": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "z": {"docs": {}, "df": 0, "e": {"docs": {"tensorgrad.tensor.Rename.__init__": {"tf": 1}, "tensorgrad.tensor.Delta.__init__": {"tf": 1}, "tensorgrad.tensor.Product.__init__": {"tf": 1}}, "df": 3}}}}}}}}, "h": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "t": {"docs": {"tensorgrad.utils.DisjointSets": {"tf": 1.4142135623730951}}, "df": 1}}}}}}, "s": {"docs": {"tensorgrad.extras.expectation.Expectation.__init__": {"tf": 1.4142135623730951}, "tensorgrad.extras.expectation.Expectation.structural_graph": {"tf": 1}, "tensorgrad.extras.to_numpy.compile_to_callable": {"tf": 1.7320508075688772}, "tensorgrad.extras.to_numpy.CodegenContext.fresh_name": {"tf": 1}, "tensorgrad.extras.to_pytorch.compile_to_callable": {"tf": 1}, "tensorgrad.extras.to_pytorch.CodegenContext.fresh_name": {"tf": 1}, "tensorgrad.extras.to_tikz.TikzGraph.handle_free_edges": {"tf": 1}, "tensorgrad.functions.graph": {"tf": 2}, "tensorgrad.functions.diag": {"tf": 1.4142135623730951}, "tensorgrad.functions.dot": {"tf": 1.7320508075688772}, "tensorgrad.functions.inverse": {"tf": 1.4142135623730951}, "tensorgrad.functions.gt0": {"tf": 1}, "tensorgrad.functions.max": {"tf": 1}, "tensorgrad.functions.Convolution.__init__": {"tf": 1.4142135623730951}, "tensorgrad.tensor.Tensor.__init__": {"tf": 1}, "tensorgrad.tensor.Tensor.structural_graph": {"tf": 1}, "tensorgrad.tensor.Tensor.edge_structural_graph": {"tf": 1.4142135623730951}, "tensorgrad.tensor.Tensor.is_isomorphic": {"tf": 1}, "tensorgrad.tensor.Variable.structural_graph": {"tf": 1}, "tensorgrad.tensor.Rename": {"tf": 1}, "tensorgrad.tensor.Rename.structural_graph": {"tf": 1}, "tensorgrad.tensor.Constant.structural_graph": {"tf": 1}, "tensorgrad.tensor.Delta": {"tf": 2.23606797749979}, "tensorgrad.tensor.Delta.structural_graph": {"tf": 1}, "tensorgrad.tensor.FunctionSignature": {"tf": 2.23606797749979}, "tensorgrad.tensor.Function.structural_graph": {"tf": 1}, "tensorgrad.tensor.Derivative.structural_graph": {"tf": 1}, "tensorgrad.tensor.Product.structural_graph": {"tf": 1}, "tensorgrad.tensor.Sum.structural_graph": {"tf": 1}, "tensorgrad.utils.KeyStoringDict.get_with_key": {"tf": 1}}, "df": 30, "o": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "h": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "m": {"docs": {"tensorgrad.extras.expectation.Expectation.structural_graph": {"tf": 1}, "tensorgrad.tensor.Tensor.structural_graph": {"tf": 1}, "tensorgrad.tensor.Variable.structural_graph": {"tf": 1}, "tensorgrad.tensor.Rename.structural_graph": {"tf": 1}, "tensorgrad.tensor.Constant.structural_graph": {"tf": 1}, "tensorgrad.tensor.Delta.structural_graph": {"tf": 1}, "tensorgrad.tensor.Function.structural_graph": {"tf": 1}, "tensorgrad.tensor.Derivative.structural_graph": {"tf": 1}, "tensorgrad.tensor.Product.structural_graph": {"tf": 1}, "tensorgrad.tensor.Sum.structural_graph": {"tf": 1}}, "df": 10, "s": {"docs": {"tensorgrad.tensor.Tensor.isomorphisms": {"tf": 1}}, "df": 1}}}, "c": {"docs": {"tensorgrad.tensor.Tensor.is_isomorphic": {"tf": 1.4142135623730951}}, "df": 1}}}}}}}}, "s": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "b": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "s": {"docs": {"tensorgrad.tensor.TensorMeta": {"tf": 1}}, "df": 1}}}}}}}}}, "d": {"docs": {"tensorgrad.extras.expectation.Expectation.structural_graph": {"tf": 1}, "tensorgrad.tensor.Tensor.structural_graph": {"tf": 1}, "tensorgrad.tensor.Variable.structural_graph": {"tf": 1}, "tensorgrad.tensor.Rename.structural_graph": {"tf": 1}, "tensorgrad.tensor.Constant.structural_graph": {"tf": 1}, "tensorgrad.tensor.Delta.structural_graph": {"tf": 1}, "tensorgrad.tensor.Function.structural_graph": {"tf": 1}, "tensorgrad.tensor.Derivative.structural_graph": {"tf": 1}, "tensorgrad.tensor.Product.structural_graph": {"tf": 1}, "tensorgrad.tensor.Sum.structural_graph": {"tf": 1}}, "df": 10, "e": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "y": {"docs": {"tensorgrad.extras.expectation.Expectation.__init__": {"tf": 1}, "tensorgrad.functions.repeat": {"tf": 1}, "tensorgrad.functions.Reshape": {"tf": 1}, "tensorgrad.tensor.Delta": {"tf": 1.7320508075688772}}, "df": 4}, "i": {"docs": {}, "df": 0, "y": {"docs": {"tensorgrad.functions.inverse": {"tf": 1}}, "df": 1}}}, "f": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "s": {"docs": {"tensorgrad.tensor.FunctionSignature": {"tf": 1}}, "df": 1}}}}}}}}}}, "t": {"docs": {"tensorgrad.extras.expectation.Expectation.__init__": {"tf": 1}, "tensorgrad.extras.to_numpy.CodegenContext.fresh_name": {"tf": 1}, "tensorgrad.extras.to_numpy.CodegenContext.declare_dimension": {"tf": 1.4142135623730951}, "tensorgrad.extras.to_pytorch.CodegenContext.fresh_name": {"tf": 1}, "tensorgrad.extras.to_pytorch.CodegenContext.declare_dimension": {"tf": 1.4142135623730951}, "tensorgrad.extras.to_tikz.NodeRef": {"tf": 1}, "tensorgrad.functions.graph": {"tf": 1}, "tensorgrad.functions.inverse": {"tf": 1}, "tensorgrad.functions.max": {"tf": 1}, "tensorgrad.tensor.Tensor.grad": {"tf": 1}, "tensorgrad.tensor.Derivative.__init__": {"tf": 1}, "tensorgrad.utils.DisjointSets": {"tf": 1}, "tensorgrad.utils.KeyStoringDict.__init__": {"tf": 1}, "tensorgrad.utils.KeyStoringDict.pop": {"tf": 1}}, "df": 14, "\u2019": {"docs": {}, "df": 0, "s": {"docs": {"tensorgrad.extras.to_tikz.TikzGraph.handle_free_edges": {"tf": 1}}, "df": 1}}, "s": {"docs": {"tensorgrad.tensor.FunctionSignature": {"tf": 1.4142135623730951}}, "df": 1}, "e": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "b": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "e": {"docs": {"tensorgrad.tensor.Product.__init__": {"tf": 1}, "tensorgrad.utils.KeyStoringDict.__init__": {"tf": 1}, "tensorgrad.utils.KeyStoringDict.keys": {"tf": 1}, "tensorgrad.utils.KeyStoringDict.values": {"tf": 1}, "tensorgrad.utils.KeyStoringDict.items": {"tf": 1}}, "df": 5}}}}}, "m": {"docs": {"tensorgrad.utils.KeyStoringDict.pop": {"tf": 1}}, "df": 1, "s": {"docs": {"tensorgrad.utils.KeyStoringDict.update": {"tf": 1}}, "df": 1}}}}, "f": {"docs": {"tensorgrad.extras.expectation.Expectation.depends_on": {"tf": 1}, "tensorgrad.extras.to_latex.to_latex_indexed": {"tf": 1}, "tensorgrad.extras.to_latex.to_latex": {"tf": 1.4142135623730951}, "tensorgrad.extras.to_numpy.CodegenContext.declare_dimension": {"tf": 1.4142135623730951}, "tensorgrad.extras.to_numpy.permute_code": {"tf": 1}, "tensorgrad.extras.to_pytorch.CodegenContext.declare_dimension": {"tf": 1.4142135623730951}, "tensorgrad.extras.to_tikz.NodeRef": {"tf": 1.4142135623730951}, "tensorgrad.extras.to_tikz.TikzGraph.add_edge": {"tf": 1}, "tensorgrad.extras.to_tikz.TikzGraph.add_subgraph": {"tf": 1}, "tensorgrad.extras.to_tikz.TikzGraph.handle_free_edges": {"tf": 1}, "tensorgrad.extras.to_tikz.choose_layout": {"tf": 1}, "tensorgrad.functions.graph": {"tf": 1}, "tensorgrad.functions.diag": {"tf": 1.4142135623730951}, "tensorgrad.functions.dot": {"tf": 1}, "tensorgrad.functions.inverse": {"tf": 1.4142135623730951}, "tensorgrad.functions.max_grad": {"tf": 1}, "tensorgrad.functions.max": {"tf": 1}, "tensorgrad.functions.Convolution.__init__": {"tf": 1.7320508075688772}, "tensorgrad.tensor.Tensor.grad": {"tf": 1.4142135623730951}, "tensorgrad.tensor.Tensor.rename": {"tf": 1}, "tensorgrad.tensor.Tensor.depends_on": {"tf": 1}, "tensorgrad.tensor.Tensor.edge_structural_graph": {"tf": 1}, "tensorgrad.tensor.Tensor.is_isomorphic": {"tf": 1}, "tensorgrad.tensor.Variable.depends_on": {"tf": 1}, "tensorgrad.tensor.Rename.depends_on": {"tf": 1}, "tensorgrad.tensor.Constant.depends_on": {"tf": 1}, "tensorgrad.tensor.Delta": {"tf": 1}, "tensorgrad.tensor.FunctionSignature": {"tf": 1}, "tensorgrad.tensor.Function.depends_on": {"tf": 1}, "tensorgrad.tensor.Derivative.__init__": {"tf": 1}, "tensorgrad.tensor.Derivative.depends_on": {"tf": 1}, "tensorgrad.tensor.Product.depends_on": {"tf": 1}, "tensorgrad.tensor.Sum.__init__": {"tf": 1}, "tensorgrad.tensor.Sum.depends_on": {"tf": 1}, "tensorgrad.utils.KeyStoringDict.get_with_key": {"tf": 1}, "tensorgrad.utils.KeyStoringDict.pop": {"tf": 1.4142135623730951}}, "df": 36}, "m": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "t": {"docs": {"tensorgrad.tensor.FunctionSignature": {"tf": 1}}, "df": 1, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {"tensorgrad.extras.to_tikz.depth_tracking_dispatcher.register": {"tf": 1}, "tensorgrad.tensor.FunctionSignature": {"tf": 1}, "tensorgrad.tensor.FunctionSignature.simplify": {"tf": 1}}, "df": 3, "s": {"docs": {"tensorgrad.tensor.TensorMeta": {"tf": 1}}, "df": 1}}}}}}, "s": {"docs": {"tensorgrad.functions.tanh": {"tf": 1}, "tensorgrad.functions.sigmoid": {"tf": 1}}, "df": 2}}}}}}, "i": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "y": {"docs": {"tensorgrad.utils.DisjointSets": {"tf": 1}}, "df": 1}}}}}}}}}, "i": {"docs": {}, "df": 0, "i": {"docs": {"tensorgrad.functions.diag": {"tf": 1.4142135623730951}}, "df": 1}}}, "f": {"docs": {"tensorgrad.extras.to_numpy.compile_to_callable": {"tf": 1}, "tensorgrad.extras.to_pytorch.compile_to_callable": {"tf": 1}, "tensorgrad.functions.taylor": {"tf": 1}, "tensorgrad.tensor.FunctionSignature": {"tf": 2}}, "df": 4, "r": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "m": {"docs": {"tensorgrad.extras.expectation.Expectation.__init__": {"tf": 1.7320508075688772}, "tensorgrad.extras.to_pytorch.CodegenContext": {"tf": 1}, "tensorgrad.extras.to_tikz.NodeRef": {"tf": 1}, "tensorgrad.tensor.FunctionSignature": {"tf": 2}, "tensorgrad.tensor.function": {"tf": 1}, "tensorgrad.utils.DisjointSets": {"tf": 1.4142135623730951}, "tensorgrad.utils.KeyStoringDict.update": {"tf": 1}}, "df": 7}, "b": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "s": {"docs": {"tensorgrad.functions.graph": {"tf": 1}}, "df": 1}}}}}}, "z": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "s": {"docs": {"tensorgrad.tensor.Variable.__init__": {"tf": 1}}, "df": 1}}}}}}}}, "e": {"docs": {}, "df": 0, "e": {"docs": {"tensorgrad.extras.to_latex.to_latex": {"tf": 1.4142135623730951}, "tensorgrad.extras.to_tikz.NodeRef": {"tf": 1}, "tensorgrad.extras.to_tikz.TikzGraph.handle_free_edges": {"tf": 1}, "tensorgrad.tensor.Tensor.rename": {"tf": 1.7320508075688772}, "tensorgrad.tensor.Tensor.simplify": {"tf": 1}, "tensorgrad.tensor.Rename": {"tf": 1}}, "df": 6}, "s": {"docs": {}, "df": 0, "h": {"docs": {"tensorgrad.extras.to_numpy.CodegenContext.fresh_name": {"tf": 1}, "tensorgrad.extras.to_pytorch.CodegenContext.fresh_name": {"tf": 1}}, "df": 2}}}}, "o": {"docs": {}, "df": 0, "r": {"docs": {"tensorgrad.extras.expectation.Expectation.structural_graph": {"tf": 1}, "tensorgrad.extras.to_numpy.permute_code": {"tf": 1}, "tensorgrad.extras.to_pytorch.compile_to_callable": {"tf": 1}, "tensorgrad.extras.to_tikz.to_tikz": {"tf": 1}, "tensorgrad.extras.to_tikz.NodeRef": {"tf": 1.4142135623730951}, "tensorgrad.extras.to_tikz.depth_tracking_dispatcher.register": {"tf": 1}, "tensorgrad.extras.to_tikz.TikzGraph.add_node": {"tf": 1}, "tensorgrad.extras.to_tikz.format_label": {"tf": 1}, "tensorgrad.extras.to_tikz.format_weight": {"tf": 1}, "tensorgrad.extras.to_tikz.format_function": {"tf": 1}, "tensorgrad.functions.graph": {"tf": 1.4142135623730951}, "tensorgrad.functions.max_grad": {"tf": 1.4142135623730951}, "tensorgrad.functions.Convolution.__init__": {"tf": 1}, "tensorgrad.tensor.TensorMeta": {"tf": 1}, "tensorgrad.tensor.Tensor.grad": {"tf": 1}, "tensorgrad.tensor.Tensor.weisfeiler_lehman": {"tf": 1}, "tensorgrad.tensor.Tensor.structural_graph": {"tf": 1}, "tensorgrad.tensor.Tensor.edge_structural_graph": {"tf": 1}, "tensorgrad.tensor.Tensor.is_isomorphic": {"tf": 1}, "tensorgrad.tensor.Variable.__init__": {"tf": 1.4142135623730951}, "tensorgrad.tensor.Variable.structural_graph": {"tf": 1}, "tensorgrad.tensor.Rename.structural_graph": {"tf": 1}, "tensorgrad.tensor.Constant.structural_graph": {"tf": 1}, "tensorgrad.tensor.Delta": {"tf": 1.7320508075688772}, "tensorgrad.tensor.Delta.structural_graph": {"tf": 1}, "tensorgrad.tensor.Zero": {"tf": 1}, "tensorgrad.tensor.Ones": {"tf": 1}, "tensorgrad.tensor.FunctionSignature": {"tf": 1.7320508075688772}, "tensorgrad.tensor.FunctionSignature.simplify": {"tf": 1}, "tensorgrad.tensor.Function": {"tf": 1}, "tensorgrad.tensor.Function.structural_graph": {"tf": 1}, "tensorgrad.tensor.Derivative.__init__": {"tf": 1}, "tensorgrad.tensor.Derivative.structural_graph": {"tf": 1}, "tensorgrad.tensor.Product.structural_graph": {"tf": 1}, "tensorgrad.tensor.Sum.structural_graph": {"tf": 1}, "tensorgrad.utils.DisjointSets": {"tf": 1}}, "df": 36, "w": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "d": {"docs": {"tensorgrad.extras.to_numpy.compile_to_callable": {"tf": 1.4142135623730951}, "tensorgrad.extras.to_pytorch.compile_to_callable": {"tf": 1.4142135623730951}}, "df": 2}}}}, "m": {"docs": {"tensorgrad.tensor.FunctionSignature": {"tf": 1}}, "df": 1, "u": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "a": {"docs": {"tensorgrad.functions.Convolution.__init__": {"tf": 1}}, "df": 1}}}}}, "l": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "w": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {"tensorgrad.extras.expectation.Expectation.structural_graph": {"tf": 1}, "tensorgrad.tensor.Tensor.structural_graph": {"tf": 1}, "tensorgrad.tensor.Variable.structural_graph": {"tf": 1}, "tensorgrad.tensor.Rename.structural_graph": {"tf": 1}, "tensorgrad.tensor.Constant.structural_graph": {"tf": 1}, "tensorgrad.tensor.Delta.structural_graph": {"tf": 1}, "tensorgrad.tensor.Function.structural_graph": {"tf": 1}, "tensorgrad.tensor.Derivative.structural_graph": {"tf": 1}, "tensorgrad.tensor.Product.structural_graph": {"tf": 1}, "tensorgrad.tensor.Sum.structural_graph": {"tf": 1}}, "df": 10}}}, "e": {"docs": {}, "df": 0, "d": {"docs": {"tensorgrad.tensor.function": {"tf": 1}}, "df": 1}}, "s": {"docs": {"tensorgrad.utils.DisjointSets": {"tf": 1}}, "df": 1}}}}}, "u": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "d": {"docs": {"tensorgrad.utils.KeyStoringDict.get_with_key": {"tf": 1}, "tensorgrad.utils.KeyStoringDict.pop": {"tf": 1}}, "df": 2}}}}, "a": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "e": {"docs": {"tensorgrad.extras.to_latex.to_latex": {"tf": 1}, "tensorgrad.tensor.Tensor.is_isomorphic": {"tf": 1}}, "df": 2}}}}, "u": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "c": {"docs": {"tensorgrad.extras.to_tikz.depth_tracking_dispatcher.register": {"tf": 1.4142135623730951}}, "df": 1, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {"tensorgrad.extras.to_numpy.compile_to_callable": {"tf": 1.7320508075688772}, "tensorgrad.extras.to_pytorch.compile_to_callable": {"tf": 1}, "tensorgrad.functions.graph": {"tf": 1}, "tensorgrad.functions.tanh": {"tf": 1}, "tensorgrad.functions.sigmoid": {"tf": 1}, "tensorgrad.tensor.TensorMeta": {"tf": 1}, "tensorgrad.tensor.FunctionSignature": {"tf": 2.449489742783178}, "tensorgrad.tensor.FunctionSignature.simplify": {"tf": 1}, "tensorgrad.tensor.function": {"tf": 1.7320508075688772}, "tensorgrad.tensor.Function": {"tf": 1.4142135623730951}, "tensorgrad.tensor.Function.__init__": {"tf": 2}}, "df": 11, "s": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "g": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "e": {"docs": {"tensorgrad.tensor.FunctionSignature.derivative": {"tf": 1}, "tensorgrad.tensor.Function": {"tf": 1}, "tensorgrad.tensor.Function.__init__": {"tf": 1}}, "df": 3}}}}}}}}}}}}}}}}, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "l": {"docs": {"tensorgrad.extras.to_tikz.NodeRef": {"tf": 1}, "tensorgrad.tensor.FunctionSignature": {"tf": 1}}, "df": 2}}}, "r": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "t": {"docs": {"tensorgrad.functions.dot": {"tf": 1}, "tensorgrad.functions.Convolution.__init__": {"tf": 1}, "tensorgrad.tensor.FunctionSignature": {"tf": 1}}, "df": 3}}}}}, "z": {"docs": {"tensorgrad.tensor.Zero": {"tf": 1}}, "df": 1, "e": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "o": {"docs": {"tensorgrad.extras.expectation.Expectation.__init__": {"tf": 1}}, "df": 1}}}}, "l": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "k": {"docs": {}, "df": 0, "e": {"docs": {"tensorgrad.extras.expectation.Expectation.__init__": {"tf": 1}, "tensorgrad.extras.to_numpy.compile_to_callable": {"tf": 1}, "tensorgrad.extras.to_pytorch.compile_to_callable": {"tf": 1}, "tensorgrad.functions.graph": {"tf": 1.7320508075688772}, "tensorgrad.functions.sign": {"tf": 1}, "tensorgrad.functions.maximum": {"tf": 1}, "tensorgrad.tensor.Tensor.graph_to_string": {"tf": 1}, "tensorgrad.utils.KeyStoringDict": {"tf": 1}}, "df": 8}}, "n": {"docs": {}, "df": 0, "e": {"docs": {"tensorgrad.extras.to_tikz.TikzGraph.handle_free_edges": {"tf": 1}, "tensorgrad.functions.graph": {"tf": 1}}, "df": 2, "s": {"docs": {"tensorgrad.extras.to_numpy.CodegenContext": {"tf": 1}, "tensorgrad.extras.to_pytorch.CodegenContext": {"tf": 1}, "tensorgrad.extras.to_tikz.TikzGraph.add_subgraph": {"tf": 1}, "tensorgrad.extras.to_tikz.format_label": {"tf": 1}, "tensorgrad.functions.graph": {"tf": 1}}, "df": 5}}, "a": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "g": {"docs": {"tensorgrad.functions.inverse": {"tf": 1}}, "df": 1}}}}, "s": {"docs": {}, "df": 0, "t": {"docs": {"tensorgrad.tensor.Tensor.grad": {"tf": 1}, "tensorgrad.tensor.Tensor.edge_structural_graph": {"tf": 1.7320508075688772}, "tensorgrad.tensor.Delta.simplify_outer": {"tf": 1}, "tensorgrad.tensor.Function": {"tf": 1}, "tensorgrad.tensor.Product.merge": {"tf": 1}, "tensorgrad.tensor.Product.components": {"tf": 1}, "tensorgrad.utils.DisjointSets": {"tf": 1}}, "df": 7, "s": {"docs": {"tensorgrad.functions.graph": {"tf": 1}}, "df": 1}, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {"tensorgrad.tensor.FunctionSignature": {"tf": 1}}, "df": 1}}}}}}, "a": {"docs": {}, "df": 0, "b": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "l": {"docs": {"tensorgrad.extras.expectation.Expectation.structural_graph": {"tf": 1}, "tensorgrad.extras.to_tikz.NodeRef": {"tf": 1.4142135623730951}, "tensorgrad.tensor.Tensor.structural_graph": {"tf": 1}, "tensorgrad.tensor.Variable.structural_graph": {"tf": 1}, "tensorgrad.tensor.Rename.structural_graph": {"tf": 1}, "tensorgrad.tensor.Constant.structural_graph": {"tf": 1}, "tensorgrad.tensor.Delta.structural_graph": {"tf": 1}, "tensorgrad.tensor.Function.structural_graph": {"tf": 1}, "tensorgrad.tensor.Derivative.structural_graph": {"tf": 1}, "tensorgrad.tensor.Product.structural_graph": {"tf": 1}, "tensorgrad.tensor.Sum.structural_graph": {"tf": 1}}, "df": 11, "e": {"docs": {}, "df": 0, "d": {"docs": {"tensorgrad.extras.expectation.Expectation.structural_graph": {"tf": 1}, "tensorgrad.tensor.Tensor.structural_graph": {"tf": 1}, "tensorgrad.tensor.Variable.structural_graph": {"tf": 1}, "tensorgrad.tensor.Rename.structural_graph": {"tf": 1}, "tensorgrad.tensor.Constant.structural_graph": {"tf": 1}, "tensorgrad.tensor.Delta.structural_graph": {"tf": 1}, "tensorgrad.tensor.Function.structural_graph": {"tf": 1}, "tensorgrad.tensor.Derivative.structural_graph": {"tf": 1}, "tensorgrad.tensor.Product.structural_graph": {"tf": 1}, "tensorgrad.tensor.Sum.structural_graph": {"tf": 1}}, "df": 10}}}}}, "t": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "x": {"docs": {"tensorgrad.extras.to_latex.to_latex_indexed": {"tf": 1}, "tensorgrad.extras.to_tikz.to_tikz": {"tf": 1}}, "df": 2}}}, "y": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "t": {"docs": {"tensorgrad.extras.to_tikz.choose_layout": {"tf": 1}}, "df": 1}}}}, "n": {"docs": {}, "df": 0, "g": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "g": {"docs": {}, "df": 0, "e": {"docs": {"tensorgrad.functions.graph": {"tf": 1}}, "df": 1}}}}}}}, "o": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "l": {"docs": {"tensorgrad.extras.to_pytorch.CodegenContext": {"tf": 1}}, "df": 1}}}, "n": {"docs": {}, "df": 0, "g": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {"tensorgrad.tensor.Tensor.full_simplify": {"tf": 1}}, "df": 1}}}}, "g": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "s": {"docs": {"tensorgrad.tensor.FunctionSignature": {"tf": 1.7320508075688772}}, "df": 1}}}}, "o": {"docs": {}, "df": 0, "k": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "p": {"docs": {"tensorgrad.utils.DisjointSets": {"tf": 1}}, "df": 1, "s": {"docs": {"tensorgrad.utils.KeyStoringDict": {"tf": 1}}, "df": 1}}}}}}, "e": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {"tensorgrad.extras.to_tikz.NodeRef": {"tf": 1}}, "df": 1}}}}}}, "t": {"docs": {"tensorgrad.functions.sign": {"tf": 1}, "tensorgrad.functions.gt": {"tf": 1}}, "df": 2}}, "u": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "e": {"docs": {"tensorgrad.extras.expectation.Expectation.structural_graph": {"tf": 1}, "tensorgrad.functions.Convolution.__init__": {"tf": 1.4142135623730951}, "tensorgrad.tensor.TensorMeta": {"tf": 1}, "tensorgrad.tensor.Tensor.grad": {"tf": 1.4142135623730951}, "tensorgrad.tensor.Tensor.structural_graph": {"tf": 1}, "tensorgrad.tensor.Tensor.is_isomorphic": {"tf": 1}, "tensorgrad.tensor.Variable.structural_graph": {"tf": 1}, "tensorgrad.tensor.Rename.structural_graph": {"tf": 1}, "tensorgrad.tensor.Constant.structural_graph": {"tf": 1}, "tensorgrad.tensor.Delta.structural_graph": {"tf": 1}, "tensorgrad.tensor.Function.structural_graph": {"tf": 1}, "tensorgrad.tensor.Derivative.structural_graph": {"tf": 1}, "tensorgrad.tensor.Product.structural_graph": {"tf": 1}, "tensorgrad.tensor.Sum.structural_graph": {"tf": 1}}, "df": 14, "d": {"docs": {"tensorgrad.extras.expectation.Expectation.structural_graph": {"tf": 1}, "tensorgrad.extras.to_tikz.NodeRef": {"tf": 1}, "tensorgrad.functions.graph": {"tf": 1.7320508075688772}, "tensorgrad.tensor.Tensor.structural_graph": {"tf": 1}, "tensorgrad.tensor.Tensor.edge_structural_graph": {"tf": 1}, "tensorgrad.tensor.Variable.structural_graph": {"tf": 1}, "tensorgrad.tensor.Rename": {"tf": 1}, "tensorgrad.tensor.Rename.structural_graph": {"tf": 1}, "tensorgrad.tensor.Constant.structural_graph": {"tf": 1}, "tensorgrad.tensor.Delta.structural_graph": {"tf": 1}, "tensorgrad.tensor.Function.structural_graph": {"tf": 1}, "tensorgrad.tensor.Derivative.structural_graph": {"tf": 1}, "tensorgrad.tensor.Product.structural_graph": {"tf": 1}, "tensorgrad.tensor.Sum.structural_graph": {"tf": 1}, "tensorgrad.utils.DisjointSets": {"tf": 1}}, "df": 15}, "s": {"docs": {"tensorgrad.extras.to_numpy.compile_to_callable": {"tf": 1}, "tensorgrad.tensor.FunctionSignature.simplify": {"tf": 1}}, "df": 2}, "r": {"docs": {"tensorgrad.utils.KeyStoringDict.get_with_key": {"tf": 1}, "tensorgrad.utils.KeyStoringDict.get": {"tf": 1}, "tensorgrad.utils.KeyStoringDict.pop": {"tf": 1}, "tensorgrad.utils.KeyStoringDict.values": {"tf": 1}, "tensorgrad.utils.KeyStoringDict.items": {"tf": 1}}, "df": 5}}, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {"tensorgrad.functions.graph": {"tf": 2}}, "df": 1}}}}, "n": {"docs": {}, "df": 0, "h": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "d": {"docs": {"tensorgrad.extras.to_latex.to_latex_indexed": {"tf": 1}}, "df": 1}}}}}}}, "i": {"docs": {}, "df": 0, "q": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "e": {"docs": {"tensorgrad.extras.to_tikz.NodeRef": {"tf": 1}}, "df": 1, "n": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "s": {"docs": {"tensorgrad.extras.to_numpy.CodegenContext.declare_dimension": {"tf": 1}, "tensorgrad.extras.to_tikz.TikzGraph.add_node": {"tf": 1}}, "df": 2}}}}}}}}, "d": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "s": {"docs": {"tensorgrad.extras.to_tikz.format_label": {"tf": 1}}, "df": 1}}}}}}, "l": {"docs": {}, "df": 0, "y": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {"tensorgrad.tensor.Rename": {"tf": 1}}, "df": 1}}}}}}, "f": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "d": {"docs": {"tensorgrad.functions.graph": {"tf": 1}}, "df": 1}}}}}}}, "r": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "d": {"docs": {"tensorgrad.tensor.TensorMeta": {"tf": 1.4142135623730951}}, "df": 1}}}}}}}, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "l": {"docs": {"tensorgrad.tensor.Tensor.full_simplify": {"tf": 1}}, "df": 1}}}, "f": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "d": {"docs": {"tensorgrad.tensor.FunctionSignature": {"tf": 1.7320508075688772}}, "df": 1, "s": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "g": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "e": {"docs": {"tensorgrad.tensor.FunctionSignature": {"tf": 1}}, "df": 1}}}}}}}}}}}}}, "c": {"docs": {}, "df": 0, "h": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "d": {"docs": {"tensorgrad.tensor.FunctionSignature.simplify": {"tf": 1}}, "df": 1}}}}}}}}, "p": {"docs": {"tensorgrad.tensor.TensorMeta": {"tf": 1}}, "df": 1, "d": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "e": {"docs": {"tensorgrad.utils.KeyStoringDict.update": {"tf": 1}}, "df": 1}}}}}}, "p": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {"tensorgrad.extras.expectation.Expectation.structural_graph": {"tf": 1}, "tensorgrad.tensor.Tensor.structural_graph": {"tf": 1}, "tensorgrad.tensor.Variable.structural_graph": {"tf": 1}, "tensorgrad.tensor.Rename.structural_graph": {"tf": 1}, "tensorgrad.tensor.Constant.structural_graph": {"tf": 1}, "tensorgrad.tensor.Delta.structural_graph": {"tf": 1}, "tensorgrad.tensor.Function.structural_graph": {"tf": 1}, "tensorgrad.tensor.Derivative.structural_graph": {"tf": 1}, "tensorgrad.tensor.Product.structural_graph": {"tf": 1}, "tensorgrad.tensor.Sum.structural_graph": {"tf": 1}}, "df": 10}}}, "e": {"docs": {"tensorgrad.extras.to_tikz.to_tikz": {"tf": 1}, "tensorgrad.extras.to_tikz.format_label": {"tf": 1}, "tensorgrad.tensor.FunctionSignature": {"tf": 1}}, "df": 3, "s": {"docs": {"tensorgrad.tensor.FunctionSignature": {"tf": 1}, "tensorgrad.tensor.Function.__init__": {"tf": 1}}, "df": 2}}, "t": {"docs": {"tensorgrad.functions.graph": {"tf": 1.4142135623730951}, "tensorgrad.functions.prod": {"tf": 1}, "tensorgrad.functions.multi_dot": {"tf": 1}, "tensorgrad.functions.inverse": {"tf": 1}, "tensorgrad.tensor.Delta": {"tf": 1}, "tensorgrad.tensor.Delta.simplify_outer": {"tf": 1}, "tensorgrad.tensor.FunctionSignature": {"tf": 1.4142135623730951}, "tensorgrad.tensor.Product": {"tf": 1}, "tensorgrad.tensor.Product.__init__": {"tf": 1}, "tensorgrad.tensor.Product.merge": {"tf": 1.7320508075688772}, "tensorgrad.tensor.Product.components": {"tf": 1.4142135623730951}}, "df": 11, "s": {"docs": {"tensorgrad.tensor.Product.merge": {"tf": 1}}, "df": 1}}}}}, "v": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "e": {"docs": {"tensorgrad.tensor.FunctionSignature": {"tf": 1}}, "df": 1, "s": {"docs": {"tensorgrad.functions.graph": {"tf": 1}}, "df": 1}, "d": {"docs": {"tensorgrad.tensor.Tensor.grad": {"tf": 1}, "tensorgrad.tensor.Derivative.__init__": {"tf": 1}, "tensorgrad.tensor.Sum.__init__": {"tf": 1}}, "df": 3}}}}}, "b": {"docs": {"tensorgrad.tensor.FunctionSignature": {"tf": 1}}, "df": 1, "a": {"docs": {}, "df": 0, "b": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "s": {"docs": {"tensorgrad.tensor.FunctionSignature": {"tf": 1}}, "df": 1}}}}}}}}}, "s": {"docs": {"tensorgrad.tensor.FunctionSignature": {"tf": 1.4142135623730951}}, "df": 1}}}, "e": {"docs": {}, "df": 0, "f": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {"tensorgrad.extras.to_tikz.TikzGraph.add_edge": {"tf": 1}}, "df": 1}}}}, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {"tensorgrad.extras.to_tikz.format_weight": {"tf": 1}, "tensorgrad.extras.to_tikz.format_function": {"tf": 1}}, "df": 2}}}}, "c": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "e": {"docs": {"tensorgrad.functions.inverse": {"tf": 1}}, "df": 1}}}}}}}}, "y": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "h": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {"tensorgrad.extras.to_numpy.compile_to_callable": {"tf": 1}, "tensorgrad.extras.to_numpy.CodegenContext": {"tf": 1}, "tensorgrad.extras.to_pytorch.compile_to_callable": {"tf": 1}, "tensorgrad.extras.to_pytorch.CodegenContext": {"tf": 1}, "tensorgrad.tensor.FunctionSignature": {"tf": 2}, "tensorgrad.utils.DisjointSets": {"tf": 1.4142135623730951}}, "df": 6}}}}}, "e": {"docs": {}, "df": 0, "r": {"docs": {"tensorgrad.tensor.FunctionSignature": {"tf": 1}}, "df": 1, "m": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "s": {"docs": {"tensorgrad.extras.to_pytorch.permute": {"tf": 1}}, "df": 1}}, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "s": {"docs": {"tensorgrad.functions.symmetrize": {"tf": 1}}, "df": 1}}}}}}}}}}}, "a": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "t": {"docs": {"tensorgrad.extras.to_pytorch.permute": {"tf": 1}}, "df": 1}}}, "s": {"docs": {}, "df": 0, "e": {"docs": {"tensorgrad.extras.to_tikz.format_label": {"tf": 1}}, "df": 1}}, "a": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {"tensorgrad.utils.DisjointSets": {"tf": 1}}, "df": 1, "s": {"docs": {"tensorgrad.functions.graph": {"tf": 1}, "tensorgrad.tensor.FunctionSignature": {"tf": 1}}, "df": 2}}}}}}}}, "t": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "h": {"docs": {"tensorgrad.tensor.FunctionSignature": {"tf": 1.4142135623730951}}, "df": 1, "e": {"docs": {}, "df": 0, "s": {"docs": {"tensorgrad.tensor.FunctionSignature": {"tf": 1}}, "df": 1}}}}}, "i": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "s": {"docs": {"tensorgrad.utils.KeyStoringDict.__init__": {"tf": 1}}, "df": 1}}}}, "o": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "t": {"docs": {"tensorgrad.extras.to_tikz.to_tikz": {"tf": 1}}, "df": 1}}}, "s": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "l": {"docs": {"tensorgrad.tensor.Variable.__init__": {"tf": 1}, "tensorgrad.tensor.Constant.__init__": {"tf": 1}}, "df": 2}}}}}}}, "s": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "b": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "e": {"docs": {"tensorgrad.tensor.FunctionSignature": {"tf": 1}}, "df": 1}}}}}}, "p": {"docs": {"tensorgrad.utils.KeyStoringDict.pop": {"tf": 1}}, "df": 1}}, "u": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "h": {"docs": {"tensorgrad.tensor.Tensor.grad": {"tf": 1}}, "df": 1, "e": {"docs": {}, "df": 0, "s": {"docs": {"tensorgrad.tensor.Tensor.grad": {"tf": 1}}, "df": 1}}}}}}, "j": {"docs": {"tensorgrad.functions.graph": {"tf": 4.47213595499958}, "tensorgrad.functions.max_grad": {"tf": 2.8284271247461903}, "tensorgrad.functions.repeat": {"tf": 1}, "tensorgrad.functions.Convolution.__init__": {"tf": 1.7320508075688772}, "tensorgrad.tensor.Delta": {"tf": 1.4142135623730951}, "tensorgrad.tensor.Zero": {"tf": 1.4142135623730951}, "tensorgrad.tensor.Ones": {"tf": 1.4142135623730951}, "tensorgrad.tensor.FunctionSignature": {"tf": 2.8284271247461903}}, "df": 8, "u": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "t": {"docs": {"tensorgrad.extras.to_tikz.format_weight": {"tf": 1}, "tensorgrad.extras.to_tikz.format_function": {"tf": 1}, "tensorgrad.functions.Reshape": {"tf": 1}, "tensorgrad.utils.KeyStoringDict.get": {"tf": 1}}, "df": 4}}}, "+": {"docs": {}, "df": 0, "k": {"docs": {"tensorgrad.functions.Convolution.__init__": {"tf": 1}}, "df": 1}}}, "y": {"docs": {"tensorgrad.functions.graph": {"tf": 2.23606797749979}, "tensorgrad.functions.gt": {"tf": 1.7320508075688772}, "tensorgrad.tensor.FunctionSignature": {"tf": 1.7320508075688772}}, "df": 3, "o": {"docs": {}, "df": 0, "u": {"docs": {"tensorgrad.functions.graph": {"tf": 1.4142135623730951}, "tensorgrad.functions.inverse": {"tf": 1.4142135623730951}, "tensorgrad.functions.repeat": {"tf": 1}, "tensorgrad.tensor.TensorMeta": {"tf": 1}, "tensorgrad.tensor.Tensor.grad": {"tf": 1}}, "df": 5}}, "i": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "d": {"docs": {"tensorgrad.tensor.Tensor.isomorphisms": {"tf": 1}}, "df": 1, "s": {"docs": {"tensorgrad.tensor.Tensor.isomorphisms": {"tf": 1}}, "df": 1}}}}}}, "k": {"docs": {"tensorgrad.functions.graph": {"tf": 1.7320508075688772}, "tensorgrad.functions.Convolution.__init__": {"tf": 1.7320508075688772}, "tensorgrad.tensor.Delta": {"tf": 1.4142135623730951}, "tensorgrad.tensor.Zero": {"tf": 1.4142135623730951}, "tensorgrad.tensor.Ones": {"tf": 1.4142135623730951}, "tensorgrad.tensor.FunctionSignature": {"tf": 2.6457513110645907}}, "df": 6, "e": {"docs": {}, "df": 0, "y": {"1": {"docs": {"tensorgrad.utils.KeyStoringDict.__init__": {"tf": 1}}, "df": 1}, "2": {"docs": {"tensorgrad.utils.KeyStoringDict.__init__": {"tf": 1}}, "df": 1}, "docs": {"tensorgrad.functions.graph": {"tf": 1}, "tensorgrad.utils.DisjointSets": {"tf": 1.4142135623730951}, "tensorgrad.utils.KeyStoringDict": {"tf": 2}, "tensorgrad.utils.KeyStoringDict.get_with_key": {"tf": 1.4142135623730951}, "tensorgrad.utils.KeyStoringDict.pop": {"tf": 1.4142135623730951}, "tensorgrad.utils.KeyStoringDict.items": {"tf": 1}}, "df": 6, "w": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "d": {"docs": {"tensorgrad.functions.graph": {"tf": 1}, "tensorgrad.tensor.Variable.__init__": {"tf": 1}, "tensorgrad.tensor.Constant.__init__": {"tf": 1}}, "df": 3}}}}, "e": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "r": {"docs": {"tensorgrad.utils.DisjointSets": {"tf": 1}, "tensorgrad.utils.KeyStoringDict.pop": {"tf": 1}}, "df": 2}}}}}, "s": {"docs": {"tensorgrad.utils.KeyStoringDict.keys": {"tf": 1}}, "df": 1, "t": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "t": {"docs": {"tensorgrad.utils.KeyStoringDict.__init__": {"tf": 1.7320508075688772}, "tensorgrad.utils.KeyStoringDict.copy": {"tf": 1}}, "df": 2}}}}}}}}}}}}, "r": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "l": {"docs": {"tensorgrad.functions.Convolution.__init__": {"tf": 1.4142135623730951}}, "df": 1}}}}}, "w": {"docs": {"tensorgrad.functions.Convolution.__init__": {"tf": 2.23606797749979}}, "df": 1, "a": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "g": {"docs": {}, "df": 0, "s": {"docs": {"tensorgrad.tensor.Tensor.rename": {"tf": 1.4142135623730951}}, "df": 1}}}}}, "h": {"docs": {"tensorgrad.functions.Convolution.__init__": {"tf": 1}}, "df": 1}, "t": {"docs": {"tensorgrad.utils.DisjointSets": {"tf": 1.4142135623730951}}, "df": 1}}, "q": {"docs": {"tensorgrad.tensor.FunctionSignature": {"tf": 3}}, "df": 1, "u": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "t": {"docs": {"tensorgrad.functions.graph": {"tf": 4.69041575982343}}, "df": 1}}, "e": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "y": {"docs": {"tensorgrad.tensor.FunctionSignature": {"tf": 1.4142135623730951}}, "df": 1}}}}}}}}, "pipeline": ["trimmer"], "_isPrebuiltIndex": true};

    // mirrored in build-search-index.js (part 1)
    // Also split on html tags. this is a cheap heuristic, but good enough.
    elasticlunr.tokenizer.setSeperator(/[\s\-.;&_'"=,()]+|<[^>]*>/);

    let searchIndex;
    if (docs._isPrebuiltIndex) {
        console.info("using precompiled search index");
        searchIndex = elasticlunr.Index.load(docs);
    } else {
        console.time("building search index");
        // mirrored in build-search-index.js (part 2)
        searchIndex = elasticlunr(function () {
            this.pipeline.remove(elasticlunr.stemmer);
            this.pipeline.remove(elasticlunr.stopWordFilter);
            this.addField("qualname");
            this.addField("fullname");
            this.addField("annotation");
            this.addField("default_value");
            this.addField("signature");
            this.addField("bases");
            this.addField("doc");
            this.setRef("fullname");
        });
        for (let doc of docs) {
            searchIndex.addDoc(doc);
        }
        console.timeEnd("building search index");
    }

    return (term) => searchIndex.search(term, {
        fields: {
            qualname: {boost: 4},
            fullname: {boost: 2},
            annotation: {boost: 2},
            default_value: {boost: 2},
            signature: {boost: 2},
            bases: {boost: 2},
            doc: {boost: 1},
        },
        expand: true
    });
})();